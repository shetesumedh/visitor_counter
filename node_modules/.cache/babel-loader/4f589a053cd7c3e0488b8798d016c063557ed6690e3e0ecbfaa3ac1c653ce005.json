{"ast":null,"code":"'use client';\n\nimport { useMutation } from '@tanstack/react-query';\nimport { watchAssetMutationOptions } from '@wagmi/core/query';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useWatchAsset */\nexport function useWatchAsset(parameters = {}) {\n  const {\n    mutation\n  } = parameters;\n  const config = useConfig(parameters);\n  const mutationOptions = watchAssetMutationOptions(config);\n  const {\n    mutate,\n    mutateAsync,\n    ...result\n  } = useMutation({\n    ...mutation,\n    ...mutationOptions\n  });\n  return {\n    ...result,\n    watchAsset: mutate,\n    watchAssetAsync: mutateAsync\n  };\n}","map":{"version":3,"names":["useMutation","watchAssetMutationOptions","useConfig","useWatchAsset","parameters","mutation","config","mutationOptions","mutate","mutateAsync","result","watchAsset","watchAssetAsync"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useWatchAsset.ts"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type { WatchAssetErrorType } from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type WatchAssetData,\n  type WatchAssetMutate,\n  type WatchAssetMutateAsync,\n  type WatchAssetVariables,\n  watchAssetMutationOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseWatchAssetParameters<context = unknown> = Compute<\n  ConfigParameter & {\n    mutation?:\n      | UseMutationParameters<\n          WatchAssetData,\n          WatchAssetErrorType,\n          WatchAssetVariables,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseWatchAssetReturnType<context = unknown> = Compute<\n  UseMutationReturnType<\n    WatchAssetData,\n    WatchAssetErrorType,\n    WatchAssetVariables,\n    context\n  > & {\n    watchAsset: WatchAssetMutate<context>\n    watchAssetAsync: WatchAssetMutateAsync<context>\n  }\n>\n\n/** https://wagmi.sh/react/api/hooks/useWatchAsset */\nexport function useWatchAsset<context = unknown>(\n  parameters: UseWatchAssetParameters<context> = {},\n): UseWatchAssetReturnType<context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = watchAssetMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  return {\n    ...result,\n    watchAsset: mutate,\n    watchAssetAsync: mutateAsync,\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,uBAAuB;AAGnD,SAKEC,yBAAyB,QACpB,mBAAmB;AAO1B,SAASC,SAAS,QAAQ,gBAAgB;AA2B1C;AACA,OAAM,SAAUC,aAAaA,CAC3BC,UAAA,GAA+C,EAAE;EAEjD,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAE/B,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMG,eAAe,GAAGN,yBAAyB,CAACK,MAAM,CAAC;EACzD,MAAM;IAAEE,MAAM;IAAEC,WAAW;IAAE,GAAGC;EAAM,CAAE,GAAGV,WAAW,CAAC;IACrD,GAAGK,QAAQ;IACX,GAAGE;GACJ,CAAC;EAEF,OAAO;IACL,GAAGG,MAAM;IACTC,UAAU,EAAEH,MAAM;IAClBI,eAAe,EAAEH;GAClB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}