{"ast":null,"code":"import { sendCalls as viem_sendCalls } from 'viem/actions';\nimport { getConnectorClient } from './getConnectorClient.js';\n/** https://wagmi.sh/core/api/actions/sendCalls */\nexport async function sendCalls(config, parameters) {\n  const {\n    account,\n    chainId,\n    connector,\n    calls,\n    ...rest\n  } = parameters;\n  const client = await getConnectorClient(config, {\n    account,\n    chainId,\n    connector\n  });\n  return viem_sendCalls(client, {\n    ...rest,\n    ...(typeof account !== 'undefined' ? {\n      account\n    } : {}),\n    calls,\n    chain: chainId ? {\n      id: chainId\n    } : undefined\n  });\n}","map":{"version":3,"names":["sendCalls","viem_sendCalls","getConnectorClient","config","parameters","account","chainId","connector","calls","rest","client","chain","id","undefined"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/sendCalls.ts"],"sourcesContent":["import type { Account, Chain } from 'viem'\nimport {\n  type SendCallsErrorType as viem_SendCallsErrorType,\n  type SendCallsParameters as viem_SendCallsParameters,\n  type SendCallsReturnType as viem_SendCallsReturnType,\n  sendCalls as viem_sendCalls,\n} from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { BaseErrorType, ErrorType } from '../errors/base.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type {\n  ChainIdParameter,\n  ConnectorParameter,\n} from '../types/properties.js'\nimport type { Compute } from '../types/utils.js'\nimport {\n  type GetConnectorClientErrorType,\n  getConnectorClient,\n} from './getConnectorClient.js'\n\nexport type SendCallsParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  calls extends readonly unknown[] = readonly unknown[],\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: Compute<\n    Omit<\n      viem_SendCallsParameters<chains[key], Account, chains[key], calls>,\n      'chain'\n    > &\n      ChainIdParameter<config, chainId> &\n      ConnectorParameter\n  >\n}[number]\n\nexport type SendCallsReturnType = viem_SendCallsReturnType\n\nexport type SendCallsErrorType =\n  // getConnectorClient()\n  | GetConnectorClientErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n  // viem\n  | viem_SendCallsErrorType\n\n/** https://wagmi.sh/core/api/actions/sendCalls */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: SendCallsParameters<config, chainId, calls>,\n): Promise<SendCallsReturnType> {\n  const { account, chainId, connector, calls, ...rest } = parameters\n\n  const client = await getConnectorClient(config, {\n    account,\n    chainId,\n    connector,\n  })\n\n  return viem_sendCalls(client, {\n    ...(rest as any),\n    ...(typeof account !== 'undefined' ? { account } : {}),\n    calls,\n    chain: chainId ? { id: chainId } : undefined,\n  })\n}\n"],"mappings":"AACA,SAIEA,SAAS,IAAIC,cAAc,QACtB,cAAc;AAUrB,SAEEC,kBAAkB,QACb,yBAAyB;AA+BhC;AACA,OAAO,eAAeF,SAASA,CAK7BG,MAAc,EACdC,UAAuD;EAEvD,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,SAAS;IAAEC,KAAK;IAAE,GAAGC;EAAI,CAAE,GAAGL,UAAU;EAElE,MAAMM,MAAM,GAAG,MAAMR,kBAAkB,CAACC,MAAM,EAAE;IAC9CE,OAAO;IACPC,OAAO;IACPC;GACD,CAAC;EAEF,OAAON,cAAc,CAACS,MAAM,EAAE;IAC5B,GAAID,IAAY;IAChB,IAAI,OAAOJ,OAAO,KAAK,WAAW,GAAG;MAAEA;IAAO,CAAE,GAAG,EAAE,CAAC;IACtDG,KAAK;IACLG,KAAK,EAAEL,OAAO,GAAG;MAAEM,EAAE,EAAEN;IAAO,CAAE,GAAGO;GACpC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}