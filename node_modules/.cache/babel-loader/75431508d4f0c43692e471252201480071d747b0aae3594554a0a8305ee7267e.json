{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst constants_1 = require(\"./core/constants\");\nconst util_1 = require(\"./core/util\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\nconst MobileRelay_1 = require(\"./relay/mobile/MobileRelay\");\nconst MobileRelayUI_1 = require(\"./relay/mobile/MobileRelayUI\");\nconst RelayEventManager_1 = require(\"./relay/RelayEventManager\");\nconst WalletLinkRelayUI_1 = require(\"./relay/walletlink/ui/WalletLinkRelayUI\");\nconst WalletLinkRelay_1 = require(\"./relay/walletlink/WalletLinkRelay\");\nconst version_1 = require(\"./version\");\nclass CoinbaseWalletSDK {\n  /**\n   * Constructor\n   * @param options Coinbase Wallet SDK constructor options\n   */\n  constructor(options) {\n    var _a, _b, _c;\n    this._appName = '';\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    const linkAPIUrl = options.linkAPIUrl || constants_1.LINK_API_URL;\n    if (typeof options.overrideIsMetaMask === 'undefined') {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n    this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    this._overrideIsCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    this._diagnosticLogger = options.diagnosticLogger;\n    this._reloadOnDisconnect = (_c = options.reloadOnDisconnect) !== null && _c !== void 0 ? _c : true;\n    const url = new URL(linkAPIUrl);\n    const origin = `${url.protocol}//${url.host}`;\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${origin}`); // needs migration to preserve local states\n    this._storage.setItem('version', CoinbaseWalletSDK.VERSION);\n    if (this.walletExtension || this.coinbaseBrowser) {\n      return;\n    }\n    this._relayEventManager = new RelayEventManager_1.RelayEventManager();\n    const isMobile = (0, util_1.isMobileWeb)();\n    const uiConstructor = options.uiConstructor || (opts => isMobile ? new MobileRelayUI_1.MobileRelayUI(opts) : new WalletLinkRelayUI_1.WalletLinkRelayUI(opts));\n    const relayOption = {\n      linkAPIUrl,\n      version: version_1.LIB_VERSION,\n      darkMode: !!options.darkMode,\n      headlessMode: !!options.headlessMode,\n      uiConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager,\n      diagnosticLogger: this._diagnosticLogger,\n      reloadOnDisconnect: this._reloadOnDisconnect,\n      enableMobileWalletLink: options.enableMobileWalletLink\n    };\n    this._relay = isMobile ? new MobileRelay_1.MobileRelay(relayOption) : new WalletLinkRelay_1.WalletLinkRelay(relayOption);\n    this.setAppInfo(options.appName, options.appLogoUrl);\n    if (options.headlessMode) return;\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n  makeWeb3Provider(jsonRpcUrl = '', chainId = 1) {\n    const extension = this.walletExtension;\n    if (extension) {\n      if (!this.isCipherProvider(extension)) {\n        extension.setProviderInfo(jsonRpcUrl, chainId);\n      }\n      if (this._reloadOnDisconnect === false && typeof extension.disableReloadOnDisconnect === 'function') extension.disableReloadOnDisconnect();\n      return extension;\n    }\n    const dappBrowser = this.coinbaseBrowser;\n    if (dappBrowser) {\n      return dappBrowser;\n    }\n    const relay = this._relay;\n    if (!relay || !this._relayEventManager || !this._storage) {\n      throw new Error('Relay not initialized, should never happen');\n    }\n    if (!jsonRpcUrl) relay.setConnectDisabled(true);\n    return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n      relayProvider: () => Promise.resolve(relay),\n      relayEventManager: this._relayEventManager,\n      storage: this._storage,\n      jsonRpcUrl,\n      chainId,\n      qrUrl: this.getQrUrl(),\n      diagnosticLogger: this._diagnosticLogger,\n      overrideIsMetaMask: this._overrideIsMetaMask,\n      overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet,\n      overrideIsCoinbaseBrowser: this._overrideIsCoinbaseBrowser\n    });\n  }\n  /**\n   * Set application information\n   * @param appName Application name\n   * @param appLogoUrl Application logo image URL\n   */\n  setAppInfo(appName, appLogoUrl) {\n    var _a;\n    this._appName = appName || 'DApp';\n    this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n    const extension = this.walletExtension;\n    if (extension) {\n      if (!this.isCipherProvider(extension)) {\n        extension.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n    }\n  }\n  /**\n   * Disconnect. After disconnecting, this will reload the web page to ensure\n   * all potential stale state is cleared.\n   */\n  disconnect() {\n    var _a;\n    const extension = this === null || this === void 0 ? void 0 : this.walletExtension;\n    if (extension) {\n      void extension.close();\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n    }\n  }\n  /**\n   * Return QR URL for mobile wallet connection, will return null if extension is installed\n   */\n  getQrUrl() {\n    var _a, _b;\n    return (_b = (_a = this._relay) === null || _a === void 0 ? void 0 : _a.getQRCodeUrl()) !== null && _b !== void 0 ? _b : null;\n  }\n  /**\n   * Official Coinbase Wallet logo for developers to use on their frontend\n   * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n   * @param width Width of the logo (Optional)\n   * @returns SVG Data URI\n   */\n  getCoinbaseWalletLogo(type, width = 240) {\n    return (0, wallet_logo_1.walletLogo)(type, width);\n  }\n  get walletExtension() {\n    var _a;\n    return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n  }\n  get coinbaseBrowser() {\n    var _a, _b;\n    try {\n      // Coinbase DApp browser does not inject into iframes so grab provider from top frame if it exists\n      const ethereum = (_a = window.ethereum) !== null && _a !== void 0 ? _a : (_b = window.top) === null || _b === void 0 ? void 0 : _b.ethereum;\n      if (!ethereum) {\n        return undefined;\n      }\n      if ('isCoinbaseBrowser' in ethereum && ethereum.isCoinbaseBrowser) {\n        return ethereum;\n      }\n      return undefined;\n    } catch (e) {\n      return undefined;\n    }\n  }\n  isCipherProvider(provider) {\n    // @ts-expect-error isCipher walletlink property\n    return typeof provider.isCipher === 'boolean' && provider.isCipher;\n  }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = version_1.LIB_VERSION;","map":{"version":3,"names":["Object","defineProperty","exports","value","CoinbaseWalletSDK","wallet_logo_1","require","constants_1","util_1","ScopedLocalStorage_1","CoinbaseWalletProvider_1","MobileRelay_1","MobileRelayUI_1","RelayEventManager_1","WalletLinkRelayUI_1","WalletLinkRelay_1","version_1","constructor","options","_a","_b","_c","_appName","_appLogoUrl","_relay","_relayEventManager","linkAPIUrl","LINK_API_URL","overrideIsMetaMask","_overrideIsMetaMask","_overrideIsCoinbaseWallet","overrideIsCoinbaseWallet","_overrideIsCoinbaseBrowser","overrideIsCoinbaseBrowser","_diagnosticLogger","diagnosticLogger","_reloadOnDisconnect","reloadOnDisconnect","url","URL","origin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","walletExtension","coinbaseBrowser","RelayEventManager","isMobile","isMobileWeb","uiConstructor","opts","MobileRelayUI","WalletLinkRelayUI","relayOption","version","LIB_VERSION","darkMode","headlessMode","storage","relayEventManager","enableMobileWalletLink","MobileRelay","WalletLinkRelay","setAppInfo","appName","appLogoUrl","attachUI","makeWeb3Provider","jsonRpcUrl","chainId","extension","isCipherProvider","setProviderInfo","disableReloadOnDisconnect","dappBrowser","relay","Error","setConnectDisabled","CoinbaseWalletProvider","relayProvider","Promise","resolve","qrUrl","getQrUrl","getFavicon","disconnect","close","resetAndReload","getQRCodeUrl","getCoinbaseWalletLogo","type","width","walletLogo","window","coinbaseWalletExtension","walletLinkExtension","ethereum","top","undefined","isCoinbaseBrowser","e","provider","isCipher"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/cbw-sdk/dist/CoinbaseWalletSDK.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst constants_1 = require(\"./core/constants\");\nconst util_1 = require(\"./core/util\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\nconst MobileRelay_1 = require(\"./relay/mobile/MobileRelay\");\nconst MobileRelayUI_1 = require(\"./relay/mobile/MobileRelayUI\");\nconst RelayEventManager_1 = require(\"./relay/RelayEventManager\");\nconst WalletLinkRelayUI_1 = require(\"./relay/walletlink/ui/WalletLinkRelayUI\");\nconst WalletLinkRelay_1 = require(\"./relay/walletlink/WalletLinkRelay\");\nconst version_1 = require(\"./version\");\nclass CoinbaseWalletSDK {\n    /**\n     * Constructor\n     * @param options Coinbase Wallet SDK constructor options\n     */\n    constructor(options) {\n        var _a, _b, _c;\n        this._appName = '';\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        const linkAPIUrl = options.linkAPIUrl || constants_1.LINK_API_URL;\n        if (typeof options.overrideIsMetaMask === 'undefined') {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this._overrideIsCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this._diagnosticLogger = options.diagnosticLogger;\n        this._reloadOnDisconnect = (_c = options.reloadOnDisconnect) !== null && _c !== void 0 ? _c : true;\n        const url = new URL(linkAPIUrl);\n        const origin = `${url.protocol}//${url.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${origin}`); // needs migration to preserve local states\n        this._storage.setItem('version', CoinbaseWalletSDK.VERSION);\n        if (this.walletExtension || this.coinbaseBrowser) {\n            return;\n        }\n        this._relayEventManager = new RelayEventManager_1.RelayEventManager();\n        const isMobile = (0, util_1.isMobileWeb)();\n        const uiConstructor = options.uiConstructor ||\n            ((opts) => (isMobile ? new MobileRelayUI_1.MobileRelayUI(opts) : new WalletLinkRelayUI_1.WalletLinkRelayUI(opts)));\n        const relayOption = {\n            linkAPIUrl,\n            version: version_1.LIB_VERSION,\n            darkMode: !!options.darkMode,\n            headlessMode: !!options.headlessMode,\n            uiConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager,\n            diagnosticLogger: this._diagnosticLogger,\n            reloadOnDisconnect: this._reloadOnDisconnect,\n            enableMobileWalletLink: options.enableMobileWalletLink,\n        };\n        this._relay = isMobile ? new MobileRelay_1.MobileRelay(relayOption) : new WalletLinkRelay_1.WalletLinkRelay(relayOption);\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        if (options.headlessMode)\n            return;\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = '', chainId = 1) {\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            if (this._reloadOnDisconnect === false &&\n                typeof extension.disableReloadOnDisconnect === 'function')\n                extension.disableReloadOnDisconnect();\n            return extension;\n        }\n        const dappBrowser = this.coinbaseBrowser;\n        if (dappBrowser) {\n            return dappBrowser;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error('Relay not initialized, should never happen');\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            qrUrl: this.getQrUrl(),\n            diagnosticLogger: this._diagnosticLogger,\n            overrideIsMetaMask: this._overrideIsMetaMask,\n            overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet,\n            overrideIsCoinbaseBrowser: this._overrideIsCoinbaseBrowser,\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || 'DApp';\n        this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        const extension = this === null || this === void 0 ? void 0 : this.walletExtension;\n        if (extension) {\n            void extension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n    /**\n     * Return QR URL for mobile wallet connection, will return null if extension is installed\n     */\n    getQrUrl() {\n        var _a, _b;\n        return (_b = (_a = this._relay) === null || _a === void 0 ? void 0 : _a.getQRCodeUrl()) !== null && _b !== void 0 ? _b : null;\n    }\n    /**\n     * Official Coinbase Wallet logo for developers to use on their frontend\n     * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n     * @param width Width of the logo (Optional)\n     * @returns SVG Data URI\n     */\n    getCoinbaseWalletLogo(type, width = 240) {\n        return (0, wallet_logo_1.walletLogo)(type, width);\n    }\n    get walletExtension() {\n        var _a;\n        return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n    }\n    get coinbaseBrowser() {\n        var _a, _b;\n        try {\n            // Coinbase DApp browser does not inject into iframes so grab provider from top frame if it exists\n            const ethereum = (_a = window.ethereum) !== null && _a !== void 0 ? _a : (_b = window.top) === null || _b === void 0 ? void 0 : _b.ethereum;\n            if (!ethereum) {\n                return undefined;\n            }\n            if ('isCoinbaseBrowser' in ethereum && ethereum.isCoinbaseBrowser) {\n                return ethereum;\n            }\n            return undefined;\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    isCipherProvider(provider) {\n        // @ts-expect-error isCipher walletlink property\n        return typeof provider.isCipher === 'boolean' && provider.isCipher;\n    }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = version_1.LIB_VERSION;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}