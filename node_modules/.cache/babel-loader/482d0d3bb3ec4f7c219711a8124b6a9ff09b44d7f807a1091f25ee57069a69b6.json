{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeErrorResult = decodeErrorResult;\nconst solidity_js_1 = require(\"../../constants/solidity.js\");\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst slice_js_1 = require(\"../data/slice.js\");\nconst toFunctionSelector_js_1 = require(\"../hash/toFunctionSelector.js\");\nconst decodeAbiParameters_js_1 = require(\"./decodeAbiParameters.js\");\nconst formatAbiItem_js_1 = require(\"./formatAbiItem.js\");\nfunction decodeErrorResult(parameters) {\n  const {\n    abi,\n    data\n  } = parameters;\n  const signature = (0, slice_js_1.slice)(data, 0, 4);\n  if (signature === '0x') throw new abi_js_1.AbiDecodingZeroDataError();\n  const abi_ = [...(abi || []), solidity_js_1.solidityError, solidity_js_1.solidityPanic];\n  const abiItem = abi_.find(x => x.type === 'error' && signature === (0, toFunctionSelector_js_1.toFunctionSelector)((0, formatAbiItem_js_1.formatAbiItem)(x)));\n  if (!abiItem) throw new abi_js_1.AbiErrorSignatureNotFoundError(signature, {\n    docsPath: '/docs/contract/decodeErrorResult'\n  });\n  return {\n    abiItem,\n    args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0 ? (0, decodeAbiParameters_js_1.decodeAbiParameters)(abiItem.inputs, (0, slice_js_1.slice)(data, 4)) : undefined,\n    errorName: abiItem.name\n  };\n}","map":{"version":3,"names":["exports","decodeErrorResult","solidity_js_1","require","abi_js_1","slice_js_1","toFunctionSelector_js_1","decodeAbiParameters_js_1","formatAbiItem_js_1","parameters","abi","data","signature","slice","AbiDecodingZeroDataError","abi_","solidityError","solidityPanic","abiItem","find","x","type","toFunctionSelector","formatAbiItem","AbiErrorSignatureNotFoundError","docsPath","args","inputs","length","decodeAbiParameters","undefined","errorName","name"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/abi/decodeErrorResult.ts"],"sourcesContent":["import type { Abi, ExtractAbiError } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = { abi?: abi | undefined; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allErrorNames extends ContractErrorName<abi> = ContractErrorName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [errorName in allErrorNames]: {\n          abiItem: abi extends Abi\n            ? Abi extends abi\n              ? AbiItem\n              : ExtractAbiError<abi, errorName>\n            : AbiItem\n          args: ContractErrorArgs<abi, errorName>\n          errorName: errorName\n        }\n      }[allErrorNames]\n    >\n  : {\n      abiItem: AbiItem\n      args: readonly unknown[] | undefined\n      errorName: string\n    }\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeErrorResultParameters<abi>,\n): DecodeErrorResultReturnType<abi> {\n  const { abi, data } = parameters as DecodeErrorResultParameters\n\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...(abi || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args:\n      'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n        ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n        : undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<abi>\n}\n"],"mappings":";;;;;AAgEAA,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AA9DA,MAAAC,aAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAcA,MAAAE,UAAA,GAAAF,OAAA;AACA,MAAAG,uBAAA,GAAAH,OAAA;AAIA,MAAAI,wBAAA,GAAAJ,OAAA;AAIA,MAAAK,kBAAA,GAAAL,OAAA;AAsCA,SAAgBF,iBAAiBA,CAC/BQ,UAA4C;EAE5C,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAE,GAAGF,UAAyC;EAE/D,MAAMG,SAAS,GAAG,IAAAP,UAAA,CAAAQ,KAAK,EAACF,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACnC,IAAIC,SAAS,KAAK,IAAI,EAAE,MAAM,IAAIR,QAAA,CAAAU,wBAAwB,EAAE;EAE5D,MAAMC,IAAI,GAAG,CAAC,IAAIL,GAAG,IAAI,EAAE,CAAC,EAAER,aAAA,CAAAc,aAAa,EAAEd,aAAA,CAAAe,aAAa,CAAC;EAC3D,MAAMC,OAAO,GAAGH,IAAI,CAACI,IAAI,CACtBC,CAAC,IACAA,CAAC,CAACC,IAAI,KAAK,OAAO,IAAIT,SAAS,KAAK,IAAAN,uBAAA,CAAAgB,kBAAkB,EAAC,IAAAd,kBAAA,CAAAe,aAAa,EAACH,CAAC,CAAC,CAAC,CAC3E;EACD,IAAI,CAACF,OAAO,EACV,MAAM,IAAId,QAAA,CAAAoB,8BAA8B,CAACZ,SAAS,EAAE;IAClDa,QAAQ,EAAE;GACX,CAAC;EACJ,OAAO;IACLP,OAAO;IACPQ,IAAI,EACF,QAAQ,IAAIR,OAAO,IAAIA,OAAO,CAACS,MAAM,IAAIT,OAAO,CAACS,MAAM,CAACC,MAAM,GAAG,CAAC,GAC9D,IAAArB,wBAAA,CAAAsB,mBAAmB,EAACX,OAAO,CAACS,MAAM,EAAE,IAAAtB,UAAA,CAAAQ,KAAK,EAACF,IAAI,EAAE,CAAC,CAAC,CAAC,GACnDmB,SAAS;IACfC,SAAS,EAAGb,OAA4B,CAACc;GACN;AACvC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}