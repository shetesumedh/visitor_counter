{"ast":null,"code":"import { numberToHex, parseAccount } from '../../../utils/index.js';\n/**\n * Request permissions from a wallet to perform actions on behalf of a user.\n *\n * - Docs: https://viem.sh/experimental/erc7715/grantPermissions\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { grantPermissions } from 'viem/experimental'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const result = await grantPermissions(client, {\n *   expiry: 1716846083638,\n *   permissions: [\n *     {\n *       type: 'native-token-transfer',\n *       data: {\n *         ticker: 'ETH',\n *       },\n *       policies: [\n *         {\n *           type: 'token-allowance',\n *           data: {\n *             allowance: parseEther('1'),\n *           },\n *         }\n *       ],\n *       required: true,\n *     },\n *   ],\n * })\n */\nexport async function grantPermissions(client, parameters) {\n  const {\n    account,\n    expiry,\n    permissions,\n    signer\n  } = parameters;\n  const result = await client.request({\n    method: 'wallet_grantPermissions',\n    params: [formatParameters({\n      account,\n      expiry,\n      permissions,\n      signer\n    })]\n  }, {\n    retryCount: 0\n  });\n  return formatRequest(result);\n}\nfunction formatParameters(parameters) {\n  const {\n    expiry,\n    permissions,\n    signer: signer_\n  } = parameters;\n  const account = parameters.account ? parseAccount(parameters.account) : undefined;\n  const signer = (() => {\n    if (!account && !signer_) return undefined;\n    // JSON-RPC Account as signer.\n    if (account?.type === 'json-rpc') return {\n      type: 'wallet'\n    };\n    // Local Account as signer.\n    if (account?.type === 'local') return {\n      type: 'account',\n      data: {\n        id: account.address\n      }\n    };\n    // ERC-7715 Signer as signer.\n    return signer_;\n  })();\n  return {\n    expiry,\n    permissions: permissions.map(permission => ({\n      ...permission,\n      policies: permission.policies.map(policy => {\n        const data = (() => {\n          if (policy.type === 'token-allowance') return {\n            allowance: numberToHex(policy.data.allowance)\n          };\n          if (policy.type === 'gas-limit') return {\n            limit: numberToHex(policy.data.limit)\n          };\n          return policy.data;\n        })();\n        return {\n          data,\n          type: typeof policy.type === 'string' ? policy.type : policy.type.custom\n        };\n      }),\n      required: permission.required ?? false,\n      type: typeof permission.type === 'string' ? permission.type : permission.type.custom\n    })),\n    ...(signer ? {\n      signer\n    } : {})\n  };\n}\nfunction formatRequest(result) {\n  return {\n    expiry: result.expiry,\n    ...(result.factory ? {\n      factory: result.factory\n    } : {}),\n    ...(result.factoryData ? {\n      factoryData: result.factoryData\n    } : {}),\n    grantedPermissions: result.grantedPermissions.map(permission => ({\n      ...permission,\n      policies: permission.policies.map(policy => {\n        const data = (() => {\n          if (policy.type === 'token-allowance') return {\n            allowance: BigInt(policy.data.allowance)\n          };\n          if (policy.type === 'gas-limit') return {\n            limit: BigInt(policy.data.limit)\n          };\n          return policy.data;\n        })();\n        return {\n          data,\n          type: policy.type\n        };\n      })\n    })),\n    permissionsContext: result.permissionsContext,\n    ...(result.signerData ? {\n      signerData: result.signerData\n    } : {})\n  };\n}","map":{"version":3,"names":["numberToHex","parseAccount","grantPermissions","client","parameters","account","expiry","permissions","signer","result","request","method","params","formatParameters","retryCount","formatRequest","signer_","undefined","type","data","id","address","map","permission","policies","policy","allowance","limit","custom","required","factory","factoryData","grantedPermissions","BigInt","permissionsContext","signerData"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/experimental/erc7715/actions/grantPermissions.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Account } from '../../../types/account.js'\nimport type { WalletGrantPermissionsReturnType } from '../../../types/eip1193.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf } from '../../../types/utils.js'\nimport { numberToHex, parseAccount } from '../../../utils/index.js'\nimport type { Permission } from '../types/permission.js'\nimport type { Signer } from '../types/signer.js'\n\nexport type GrantPermissionsParameters = {\n  /** Timestamp (in seconds) that specifies the time by which this session MUST expire. */\n  expiry: number\n  /** Set of permissions to grant to the user. */\n  permissions: readonly Permission[]\n} & OneOf<\n  | {\n      /** Signer to assign the permissions to. */\n      signer?: Signer | undefined\n    }\n  | {\n      /** Account to assign the permissions to. */\n      account?: Address | Account | undefined\n    }\n>\n\nexport type GrantPermissionsReturnType = {\n  /** Timestamp (in seconds) that specifies the time by which this session MUST expire. */\n  expiry: number\n  /** ERC-4337 Factory to deploy smart contract account. */\n  factory?: Hex | undefined\n  /** Calldata to use when calling the ERC-4337 Factory. */\n  factoryData?: string | undefined\n  /** Set of granted permissions. */\n  grantedPermissions: readonly Permission[]\n  /** Permissions identifier. */\n  permissionsContext: string\n  /** Signer attached to the permissions. */\n  signerData?:\n    | {\n        userOpBuilder?: Hex | undefined\n        submitToAddress?: Hex | undefined\n      }\n    | undefined\n}\n\n/**\n * Request permissions from a wallet to perform actions on behalf of a user.\n *\n * - Docs: https://viem.sh/experimental/erc7715/grantPermissions\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { grantPermissions } from 'viem/experimental'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const result = await grantPermissions(client, {\n *   expiry: 1716846083638,\n *   permissions: [\n *     {\n *       type: 'native-token-transfer',\n *       data: {\n *         ticker: 'ETH',\n *       },\n *       policies: [\n *         {\n *           type: 'token-allowance',\n *           data: {\n *             allowance: parseEther('1'),\n *           },\n *         }\n *       ],\n *       required: true,\n *     },\n *   ],\n * })\n */\nexport async function grantPermissions(\n  client: Client<Transport>,\n  parameters: GrantPermissionsParameters,\n): Promise<GrantPermissionsReturnType> {\n  const { account, expiry, permissions, signer } = parameters\n  const result = await client.request(\n    {\n      method: 'wallet_grantPermissions',\n      params: [\n        formatParameters({ account, expiry, permissions, signer } as any),\n      ],\n    },\n    { retryCount: 0 },\n  )\n  return formatRequest(result) as GrantPermissionsReturnType\n}\n\nfunction formatParameters(parameters: GrantPermissionsParameters) {\n  const { expiry, permissions, signer: signer_ } = parameters\n\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n\n  const signer = (() => {\n    if (!account && !signer_) return undefined\n\n    // JSON-RPC Account as signer.\n    if (account?.type === 'json-rpc')\n      return {\n        type: 'wallet',\n      }\n\n    // Local Account as signer.\n    if (account?.type === 'local')\n      return {\n        type: 'account',\n        data: {\n          id: account.address,\n        },\n      }\n\n    // ERC-7715 Signer as signer.\n    return signer_\n  })()\n\n  return {\n    expiry,\n    permissions: permissions.map((permission) => ({\n      ...permission,\n      policies: permission.policies.map((policy) => {\n        const data = (() => {\n          if (policy.type === 'token-allowance')\n            return {\n              allowance: numberToHex(policy.data.allowance),\n            }\n          if (policy.type === 'gas-limit')\n            return {\n              limit: numberToHex(policy.data.limit),\n            }\n          return policy.data\n        })()\n\n        return {\n          data,\n          type:\n            typeof policy.type === 'string' ? policy.type : policy.type.custom,\n        }\n      }),\n      required: permission.required ?? false,\n      type:\n        typeof permission.type === 'string'\n          ? permission.type\n          : permission.type.custom,\n    })),\n    ...(signer ? { signer } : {}),\n  }\n}\n\nfunction formatRequest(result: WalletGrantPermissionsReturnType) {\n  return {\n    expiry: result.expiry,\n    ...(result.factory ? { factory: result.factory } : {}),\n    ...(result.factoryData ? { factoryData: result.factoryData } : {}),\n    grantedPermissions: result.grantedPermissions.map((permission) => ({\n      ...permission,\n      policies: permission.policies.map((policy) => {\n        const data = (() => {\n          if (policy.type === 'token-allowance')\n            return {\n              allowance: BigInt((policy.data as any).allowance),\n            }\n          if (policy.type === 'gas-limit')\n            return {\n              limit: BigInt((policy.data as any).limit),\n            }\n          return policy.data\n        })()\n\n        return {\n          data,\n          type: policy.type,\n        }\n      }),\n    })),\n    permissionsContext: result.permissionsContext,\n    ...(result.signerData ? { signerData: result.signerData } : {}),\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}