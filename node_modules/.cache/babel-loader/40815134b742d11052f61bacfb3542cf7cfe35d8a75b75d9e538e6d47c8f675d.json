{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashMessage = hashMessage;\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst toPrefixedMessage_js_1 = require(\"./toPrefixedMessage.js\");\nfunction hashMessage(message, to_) {\n  return (0, keccak256_js_1.keccak256)((0, toPrefixedMessage_js_1.toPrefixedMessage)(message), to_);\n}","map":{"version":3,"names":["exports","hashMessage","keccak256_js_1","require","toPrefixedMessage_js_1","message","to_","keccak256","toPrefixedMessage"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/signature/hashMessage.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n"],"mappings":";;;;;AAaAA,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAXA,MAAAC,cAAA,GAAAC,OAAA;AACA,MAAAC,sBAAA,GAAAD,OAAA;AAUA,SAAgBF,WAAWA,CACzBI,OAAwB,EACxBC,GAAoB;EAEpB,OAAO,IAAAJ,cAAA,CAAAK,SAAS,EAAC,IAAAH,sBAAA,CAAAI,iBAAiB,EAACH,OAAO,CAAC,EAAEC,GAAG,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}