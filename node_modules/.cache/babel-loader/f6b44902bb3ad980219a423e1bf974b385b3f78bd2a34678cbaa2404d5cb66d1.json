{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineTransactionReceipt = exports.receiptStatuses = void 0;\nexports.formatTransactionReceipt = formatTransactionReceipt;\nconst fromHex_js_1 = require(\"../encoding/fromHex.js\");\nconst formatter_js_1 = require(\"./formatter.js\");\nconst log_js_1 = require(\"./log.js\");\nconst transaction_js_1 = require(\"./transaction.js\");\nexports.receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success'\n};\nfunction formatTransactionReceipt(transactionReceipt) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber ? BigInt(transactionReceipt.blockNumber) : null,\n    contractAddress: transactionReceipt.contractAddress ? transactionReceipt.contractAddress : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed ? BigInt(transactionReceipt.cumulativeGasUsed) : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice ? BigInt(transactionReceipt.effectiveGasPrice) : null,\n    gasUsed: transactionReceipt.gasUsed ? BigInt(transactionReceipt.gasUsed) : null,\n    logs: transactionReceipt.logs ? transactionReceipt.logs.map(log => (0, log_js_1.formatLog)(log)) : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex ? (0, fromHex_js_1.hexToNumber)(transactionReceipt.transactionIndex) : null,\n    status: transactionReceipt.status ? exports.receiptStatuses[transactionReceipt.status] : null,\n    type: transactionReceipt.type ? transaction_js_1.transactionType[transactionReceipt.type] || transactionReceipt.type : null\n  };\n  if (transactionReceipt.blobGasPrice) receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n  if (transactionReceipt.blobGasUsed) receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n  return receipt;\n}\nexports.defineTransactionReceipt = (0, formatter_js_1.defineFormatter)('transactionReceipt', formatTransactionReceipt);","map":{"version":3,"names":["exports","formatTransactionReceipt","fromHex_js_1","require","formatter_js_1","log_js_1","transaction_js_1","receiptStatuses","transactionReceipt","receipt","blockNumber","BigInt","contractAddress","cumulativeGasUsed","effectiveGasPrice","gasUsed","logs","map","log","formatLog","to","transactionIndex","hexToNumber","status","type","transactionType","blobGasPrice","blobGasUsed","defineTransactionReceipt","defineFormatter"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/formatters/transactionReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n"],"mappings":";;;;;;AA6BAA,OAAA,CAAAC,wBAAA,GAAAA,wBAAA;AArBA,MAAAC,YAAA,GAAAC,OAAA;AAEA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AACA,MAAAG,gBAAA,GAAAH,OAAA;AAUaH,OAAA,CAAAO,eAAe,GAAG;EAC7B,KAAK,EAAE,UAAU;EACjB,KAAK,EAAE;CACC;AAIV,SAAgBN,wBAAwBA,CACtCO,kBAAuD;EAEvD,MAAMC,OAAO,GAAG;IACd,GAAGD,kBAAkB;IACrBE,WAAW,EAAEF,kBAAkB,CAACE,WAAW,GACvCC,MAAM,CAACH,kBAAkB,CAACE,WAAW,CAAC,GACtC,IAAI;IACRE,eAAe,EAAEJ,kBAAkB,CAACI,eAAe,GAC/CJ,kBAAkB,CAACI,eAAe,GAClC,IAAI;IACRC,iBAAiB,EAAEL,kBAAkB,CAACK,iBAAiB,GACnDF,MAAM,CAACH,kBAAkB,CAACK,iBAAiB,CAAC,GAC5C,IAAI;IACRC,iBAAiB,EAAEN,kBAAkB,CAACM,iBAAiB,GACnDH,MAAM,CAACH,kBAAkB,CAACM,iBAAiB,CAAC,GAC5C,IAAI;IACRC,OAAO,EAAEP,kBAAkB,CAACO,OAAO,GAC/BJ,MAAM,CAACH,kBAAkB,CAACO,OAAO,CAAC,GAClC,IAAI;IACRC,IAAI,EAAER,kBAAkB,CAACQ,IAAI,GACzBR,kBAAkB,CAACQ,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAK,IAAAb,QAAA,CAAAc,SAAS,EAACD,GAAG,CAAC,CAAC,GACpD,IAAI;IACRE,EAAE,EAAEZ,kBAAkB,CAACY,EAAE,GAAGZ,kBAAkB,CAACY,EAAE,GAAG,IAAI;IACxDC,gBAAgB,EAAEb,kBAAkB,CAACa,gBAAgB,GACjD,IAAAnB,YAAA,CAAAoB,WAAW,EAACd,kBAAkB,CAACa,gBAAgB,CAAC,GAChD,IAAI;IACRE,MAAM,EAAEf,kBAAkB,CAACe,MAAM,GAC7BvB,OAAA,CAAAO,eAAe,CAACC,kBAAkB,CAACe,MAAM,CAAC,GAC1C,IAAI;IACRC,IAAI,EAAEhB,kBAAkB,CAACgB,IAAI,GACzBlB,gBAAA,CAAAmB,eAAe,CACbjB,kBAAkB,CAACgB,IAAoC,CACxD,IAAIhB,kBAAkB,CAACgB,IAAI,GAC5B;GACiB;EAEvB,IAAIhB,kBAAkB,CAACkB,YAAY,EACjCjB,OAAO,CAACiB,YAAY,GAAGf,MAAM,CAACH,kBAAkB,CAACkB,YAAY,CAAC;EAChE,IAAIlB,kBAAkB,CAACmB,WAAW,EAChClB,OAAO,CAACkB,WAAW,GAAGhB,MAAM,CAACH,kBAAkB,CAACmB,WAAW,CAAC;EAE9D,OAAOlB,OAAO;AAChB;AAMaT,OAAA,CAAA4B,wBAAwB,GAAiB,IAAAxB,cAAA,CAAAyB,eAAe,EACnE,oBAAoB,EACpB5B,wBAAwB,CACzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}