{"ast":null,"code":"export function extractRpcUrls(parameters) {\n  const {\n    chain\n  } = parameters;\n  const fallbackUrl = chain.rpcUrls.default.http[0];\n  if (!parameters.transports) return [fallbackUrl];\n  const transport = parameters.transports?.[chain.id]?.({\n    chain\n  });\n  const transports = transport?.value?.transports || [transport];\n  return transports.map(({\n    value\n  }) => value?.url || fallbackUrl);\n}","map":{"version":3,"names":["extractRpcUrls","parameters","chain","fallbackUrl","rpcUrls","default","http","transports","transport","id","value","map","url"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/utils/extractRpcUrls.ts"],"sourcesContent":["import type { Chain, Transport } from 'viem'\n\ntype ExtractRpcUrlsParameters = {\n  transports?: Record<string, Transport> | undefined\n  chain: Chain\n}\n\nexport function extractRpcUrls(parameters: ExtractRpcUrlsParameters) {\n  const { chain } = parameters\n  const fallbackUrl = chain.rpcUrls.default.http[0]\n\n  if (!parameters.transports) return [fallbackUrl]\n\n  const transport = parameters.transports?.[chain.id]?.({ chain })\n  const transports = (transport?.value?.transports as NonNullable<\n    typeof transport\n  >[]) || [transport]\n  return transports.map(({ value }) => value?.url || fallbackUrl)\n}\n"],"mappings":"AAOA,OAAM,SAAUA,cAAcA,CAACC,UAAoC;EACjE,MAAM;IAAEC;EAAK,CAAE,GAAGD,UAAU;EAC5B,MAAME,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EAEjD,IAAI,CAACL,UAAU,CAACM,UAAU,EAAE,OAAO,CAACJ,WAAW,CAAC;EAEhD,MAAMK,SAAS,GAAGP,UAAU,CAACM,UAAU,GAAGL,KAAK,CAACO,EAAE,CAAC,GAAG;IAAEP;EAAK,CAAE,CAAC;EAChE,MAAMK,UAAU,GAAIC,SAAS,EAAEE,KAAK,EAAEH,UAElC,IAAI,CAACC,SAAS,CAAC;EACnB,OAAOD,UAAU,CAACI,GAAG,CAAC,CAAC;IAAED;EAAK,CAAE,KAAKA,KAAK,EAAEE,GAAG,IAAIT,WAAW,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}