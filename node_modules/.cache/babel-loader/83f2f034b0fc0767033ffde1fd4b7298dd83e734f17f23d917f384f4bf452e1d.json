{"ast":null,"code":"'use client';\n\nimport { getBlockTransactionCountQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useChainId } from './useChainId.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useBlockTransactionCount */\nexport function useBlockTransactionCount(parameters = {}) {\n  const {\n    query = {}\n  } = parameters;\n  const config = useConfig(parameters);\n  const configChainId = useChainId({\n    config\n  });\n  const chainId = parameters.chainId ?? configChainId;\n  const options = getBlockTransactionCountQueryOptions(config, {\n    ...parameters,\n    chainId\n  });\n  return useQuery({\n    ...query,\n    ...options\n  });\n}","map":{"version":3,"names":["getBlockTransactionCountQueryOptions","useQuery","useChainId","useConfig","useBlockTransactionCount","parameters","query","config","configChainId","chainId","options"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useBlockTransactionCount.ts"],"sourcesContent":["'use client'\n\nimport type {\n  Config,\n  GetBlockTransactionCountErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { UnionCompute } from '@wagmi/core/internal'\nimport {\n  type GetBlockTransactionCountData,\n  type GetBlockTransactionCountOptions,\n  type GetBlockTransactionCountQueryFnData,\n  type GetBlockTransactionCountQueryKey,\n  getBlockTransactionCountQueryOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseBlockTransactionCountParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetBlockTransactionCountData,\n> = UnionCompute<\n  GetBlockTransactionCountOptions<config, chainId> &\n    ConfigParameter<config> &\n    QueryParameter<\n      GetBlockTransactionCountQueryFnData,\n      GetBlockTransactionCountErrorType,\n      selectData,\n      GetBlockTransactionCountQueryKey<config, chainId>\n    >\n>\n\nexport type UseBlockTransactionCountReturnType<\n  selectData = GetBlockTransactionCountData,\n> = UseQueryReturnType<selectData, GetBlockTransactionCountErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useBlockTransactionCount */\nexport function useBlockTransactionCount<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetBlockTransactionCountData,\n>(\n  parameters: UseBlockTransactionCountParameters<\n    config,\n    chainId,\n    selectData\n  > = {},\n): UseBlockTransactionCountReturnType<selectData> {\n  const { query = {} } = parameters\n\n  const config = useConfig(parameters)\n  const configChainId = useChainId({ config })\n  const chainId = parameters.chainId ?? configChainId\n\n  const options = getBlockTransactionCountQueryOptions(config, {\n    ...parameters,\n    chainId,\n  })\n\n  return useQuery({ ...query, ...options })\n}\n"],"mappings":"AAAA,YAAY;;AAQZ,SAKEA,oCAAoC,QAC/B,mBAAmB;AAG1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAsB1C;AACA,OAAM,SAAUC,wBAAwBA,CAMtCC,UAAA,GAII,EAAE;EAEN,MAAM;IAAEC,KAAK,GAAG;EAAE,CAAE,GAAGD,UAAU;EAEjC,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EACpC,MAAMG,aAAa,GAAGN,UAAU,CAAC;IAAEK;EAAM,CAAE,CAAC;EAC5C,MAAME,OAAO,GAAGJ,UAAU,CAACI,OAAO,IAAID,aAAa;EAEnD,MAAME,OAAO,GAAGV,oCAAoC,CAACO,MAAM,EAAE;IAC3D,GAAGF,UAAU;IACbI;GACD,CAAC;EAEF,OAAOR,QAAQ,CAAC;IAAE,GAAGK,KAAK;IAAE,GAAGI;EAAO,CAAE,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}