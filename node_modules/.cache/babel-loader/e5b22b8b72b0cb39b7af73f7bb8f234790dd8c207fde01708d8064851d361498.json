{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimateGasExecutionError = void 0;\nconst formatEther_js_1 = require(\"../utils/unit/formatEther.js\");\nconst formatGwei_js_1 = require(\"../utils/unit/formatGwei.js\");\nconst base_js_1 = require(\"./base.js\");\nconst transaction_js_1 = require(\"./transaction.js\");\nclass EstimateGasExecutionError extends base_js_1.BaseError {\n  constructor(cause, {\n    account,\n    docsPath,\n    chain,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) {\n    const prettyArgs = (0, transaction_js_1.prettyPrint)({\n      from: account?.address,\n      to,\n      value: typeof value !== 'undefined' && `${(0, formatEther_js_1.formatEther)(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice: typeof gasPrice !== 'undefined' && `${(0, formatGwei_js_1.formatGwei)(gasPrice)} gwei`,\n      maxFeePerGas: typeof maxFeePerGas !== 'undefined' && `${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' && `${(0, formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`,\n      nonce\n    });\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [...(cause.metaMessages ? [...cause.metaMessages, ' '] : []), 'Estimate Gas Arguments:', prettyArgs].filter(Boolean),\n      name: 'EstimateGasExecutionError'\n    });\n    Object.defineProperty(this, \"cause\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.cause = cause;\n  }\n}\nexports.EstimateGasExecutionError = EstimateGasExecutionError;","map":{"version":3,"names":["formatEther_js_1","require","formatGwei_js_1","base_js_1","transaction_js_1","EstimateGasExecutionError","BaseError","constructor","cause","account","docsPath","chain","data","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","value","prettyArgs","prettyPrint","from","address","formatEther","nativeCurrency","symbol","formatGwei","shortMessage","metaMessages","filter","Boolean","name","Object","defineProperty","exports"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/errors/estimateGas.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any>, 'account'> & {\n      account?: Account | undefined\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'EstimateGasExecutionError',\n    })\n    this.cause = cause\n  }\n}\n"],"mappings":";;;;;;AAGA,MAAAA,gBAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AAEA,MAAAE,SAAA,GAAAF,OAAA;AACA,MAAAG,gBAAA,GAAAH,OAAA;AAKA,MAAaI,yBAA0B,SAAQF,SAAA,CAAAG,SAAS;EAGtDC,YACEC,KAAgB,EAChB;IACEC,OAAO;IACPC,QAAQ;IACRC,KAAK;IACLC,IAAI;IACJC,GAAG;IACHC,QAAQ;IACRC,YAAY;IACZC,oBAAoB;IACpBC,KAAK;IACLC,EAAE;IACFC;EAAK,CAKN;IAED,MAAMC,UAAU,GAAG,IAAAhB,gBAAA,CAAAiB,WAAW,EAAC;MAC7BC,IAAI,EAAEb,OAAO,EAAEc,OAAO;MACtBL,EAAE;MACFC,KAAK,EACH,OAAOA,KAAK,KAAK,WAAW,IAC5B,GAAG,IAAAnB,gBAAA,CAAAwB,WAAW,EAACL,KAAK,CAAC,IAAIR,KAAK,EAAEc,cAAc,EAAEC,MAAM,IAAI,KAAK,EAAE;MACnEd,IAAI;MACJC,GAAG;MACHC,QAAQ,EACN,OAAOA,QAAQ,KAAK,WAAW,IAAI,GAAG,IAAAZ,eAAA,CAAAyB,UAAU,EAACb,QAAQ,CAAC,OAAO;MACnEC,YAAY,EACV,OAAOA,YAAY,KAAK,WAAW,IACnC,GAAG,IAAAb,eAAA,CAAAyB,UAAU,EAACZ,YAAY,CAAC,OAAO;MACpCC,oBAAoB,EAClB,OAAOA,oBAAoB,KAAK,WAAW,IAC3C,GAAG,IAAAd,eAAA,CAAAyB,UAAU,EAACX,oBAAoB,CAAC,OAAO;MAC5CC;KACD,CAAC;IAEF,KAAK,CAACT,KAAK,CAACoB,YAAY,EAAE;MACxBpB,KAAK;MACLE,QAAQ;MACRmB,YAAY,EAAE,CACZ,IAAIrB,KAAK,CAACqB,YAAY,GAAG,CAAC,GAAGrB,KAAK,CAACqB,YAAY,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAC3D,yBAAyB,EACzBT,UAAU,CACX,CAACU,MAAM,CAACC,OAAO,CAAa;MAC7BC,IAAI,EAAE;KACP,CAAC;IAlDKC,MAAA,CAAAC,cAAA;;;;;;IAmDP,IAAI,CAAC1B,KAAK,GAAGA,KAAK;EACpB;;AArDF2B,OAAA,CAAA9B,yBAAA,GAAAA,yBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}