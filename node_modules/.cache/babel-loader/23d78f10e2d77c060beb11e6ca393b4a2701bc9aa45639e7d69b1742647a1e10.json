{"ast":null,"code":"import { proxy, snapshot, subscribe as sub } from 'valtio/vanilla';\nimport { getW3mThemeVariables } from '@reown/appkit-common';\nimport { withErrorBoundary } from '../utils/withErrorBoundary.js';\nimport { ConnectorController } from './ConnectorController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  themeMode: 'dark',\n  themeVariables: {},\n  w3mThemeVariables: undefined\n});\n// -- Controller ---------------------------------------- //\nconst controller = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  setThemeMode(themeMode) {\n    state.themeMode = themeMode;\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariables = controller.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeMode,\n          themeVariables,\n          w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  setThemeVariables(themeVariables) {\n    state.themeVariables = {\n      ...state.themeVariables,\n      ...themeVariables\n    };\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariablesSnapshot = controller.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeVariables: themeVariablesSnapshot,\n          w3mThemeVariables: getW3mThemeVariables(state.themeVariables, state.themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  getSnapshot() {\n    return snapshot(state);\n  }\n};\n// Export the controller wrapped with our error boundary\nexport const ThemeController = withErrorBoundary(controller);","map":{"version":3,"names":["proxy","snapshot","subscribe","sub","getW3mThemeVariables","withErrorBoundary","ConnectorController","state","themeMode","themeVariables","w3mThemeVariables","undefined","controller","callback","setThemeMode","authConnector","getAuthConnector","getSnapshot","provider","syncTheme","console","info","setThemeVariables","themeVariablesSnapshot","ThemeController"],"sources":["../../../../src/controllers/ThemeController.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,IAAIC,GAAG,QAAQ,gBAAgB;AAElE,SAASC,oBAAoB,QAAQ,sBAAsB;AAI3D,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAS9D;AACA,MAAMC,KAAK,GAAGP,KAAK,CAAuB;EACxCQ,SAAS,EAAE,MAAM;EACjBC,cAAc,EAAE,EAAE;EAClBC,iBAAiB,EAAEC;CACpB,CAAC;AAEF;AACA,MAAMC,UAAU,GAAG;EACjBL,KAAK;EAELL,SAASA,CAACW,QAAkD;IAC1D,OAAOV,GAAG,CAACI,KAAK,EAAE,MAAMM,QAAQ,CAACN,KAAK,CAAC,CAAC;EAC1C,CAAC;EAEDO,YAAYA,CAACN,SAA4C;IACvDD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAE3B,IAAI;MACF,MAAMO,aAAa,GAAGT,mBAAmB,CAACU,gBAAgB,EAAE;MAE5D,IAAID,aAAa,EAAE;QACjB,MAAMN,cAAc,GAAGG,UAAU,CAACK,WAAW,EAAE,CAACR,cAAc;QAE9DM,aAAa,CAACG,QAAQ,CAACC,SAAS,CAAC;UAC/BX,SAAS;UACTC,cAAc;UACdC,iBAAiB,EAAEN,oBAAoB,CAACK,cAAc,EAAED,SAAS;SAClE,CAAC;MACJ;IACF,CAAC,CAAC,MAAM;MACN;MACAY,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;IACxD;EACF,CAAC;EAEDC,iBAAiBA,CAACb,cAAsD;IACtEF,KAAK,CAACE,cAAc,GAAG;MAAE,GAAGF,KAAK,CAACE,cAAc;MAAE,GAAGA;IAAc,CAAE;IAErE,IAAI;MACF,MAAMM,aAAa,GAAGT,mBAAmB,CAACU,gBAAgB,EAAE;MAE5D,IAAID,aAAa,EAAE;QACjB,MAAMQ,sBAAsB,GAAGX,UAAU,CAACK,WAAW,EAAE,CAACR,cAAc;QAEtEM,aAAa,CAACG,QAAQ,CAACC,SAAS,CAAC;UAC/BV,cAAc,EAAEc,sBAAsB;UACtCb,iBAAiB,EAAEN,oBAAoB,CAACG,KAAK,CAACE,cAAc,EAAEF,KAAK,CAACC,SAAS;SAC9E,CAAC;MACJ;IACF,CAAC,CAAC,MAAM;MACN;MACAY,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;IACxD;EACF,CAAC;EAEDJ,WAAWA,CAAA;IACT,OAAOhB,QAAQ,CAACM,KAAK,CAAC;EACxB;CACD;AAED;AACA,OAAO,MAAMiB,eAAe,GAAGnB,iBAAiB,CAACO,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}