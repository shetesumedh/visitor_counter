{"ast":null,"code":"'use client';\n\nimport { getConnections, watchConnections } from '@wagmi/core';\nimport { useSyncExternalStore } from 'react';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useConnections */\nexport function useConnections(parameters = {}) {\n  const config = useConfig(parameters);\n  return useSyncExternalStore(onChange => watchConnections(config, {\n    onChange\n  }), () => getConnections(config), () => getConnections(config));\n}","map":{"version":3,"names":["getConnections","watchConnections","useSyncExternalStore","useConfig","useConnections","parameters","config","onChange"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/wagmi/src/hooks/useConnections.ts"],"sourcesContent":["'use client'\n\nimport {\n  type GetConnectionsReturnType,\n  getConnections,\n  watchConnections,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseConnectionsParameters = ConfigParameter\n\nexport type UseConnectionsReturnType = GetConnectionsReturnType\n\n/** https://wagmi.sh/react/api/hooks/useConnections */\nexport function useConnections(\n  parameters: UseConnectionsParameters = {},\n): UseConnectionsReturnType {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchConnections(config, { onChange }),\n    () => getConnections(config),\n    () => getConnections(config),\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAEEA,cAAc,EACdC,gBAAgB,QACX,aAAa;AACpB,SAASC,oBAAoB,QAAQ,OAAO;AAG5C,SAASC,SAAS,QAAQ,gBAAgB;AAM1C;AACA,OAAM,SAAUC,cAAcA,CAC5BC,UAAA,GAAuC,EAAE;EAEzC,MAAMC,MAAM,GAAGH,SAAS,CAACE,UAAU,CAAC;EAEpC,OAAOH,oBAAoB,CACxBK,QAAQ,IAAKN,gBAAgB,CAACK,MAAM,EAAE;IAAEC;EAAQ,CAAE,CAAC,EACpD,MAAMP,cAAc,CAACM,MAAM,CAAC,EAC5B,MAAMN,cAAc,CAACM,MAAM,CAAC,CAC7B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}