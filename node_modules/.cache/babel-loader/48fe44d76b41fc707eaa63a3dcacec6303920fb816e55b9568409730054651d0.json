{"ast":null,"code":"export function formatUserOperationGas(parameters) {\n  const gas = {};\n  if (parameters.callGasLimit) gas.callGasLimit = BigInt(parameters.callGasLimit);\n  if (parameters.preVerificationGas) gas.preVerificationGas = BigInt(parameters.preVerificationGas);\n  if (parameters.verificationGasLimit) gas.verificationGasLimit = BigInt(parameters.verificationGasLimit);\n  if (parameters.paymasterPostOpGasLimit) gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit);\n  if (parameters.paymasterVerificationGasLimit) gas.paymasterVerificationGasLimit = BigInt(parameters.paymasterVerificationGasLimit);\n  return gas;\n}","map":{"version":3,"names":["formatUserOperationGas","parameters","gas","callGasLimit","BigInt","preVerificationGas","verificationGasLimit","paymasterPostOpGasLimit","paymasterVerificationGasLimit"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/account-abstraction/utils/formatters/userOperationGas.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { RpcEstimateUserOperationGasReturnType } from '../../types/rpc.js'\nimport type { EstimateUserOperationGasReturnType } from '../../types/userOperation.js'\n\nexport type FormatUserOperationGasErrorType = ErrorType\n\nexport function formatUserOperationGas(\n  parameters: RpcEstimateUserOperationGasReturnType,\n): EstimateUserOperationGasReturnType {\n  const gas = {} as EstimateUserOperationGasReturnType\n\n  if (parameters.callGasLimit)\n    gas.callGasLimit = BigInt(parameters.callGasLimit)\n  if (parameters.preVerificationGas)\n    gas.preVerificationGas = BigInt(parameters.preVerificationGas)\n  if (parameters.verificationGasLimit)\n    gas.verificationGasLimit = BigInt(parameters.verificationGasLimit)\n  if (parameters.paymasterPostOpGasLimit)\n    gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit)\n  if (parameters.paymasterVerificationGasLimit)\n    gas.paymasterVerificationGasLimit = BigInt(\n      parameters.paymasterVerificationGasLimit,\n    )\n\n  return gas\n}\n"],"mappings":"AAMA,OAAM,SAAUA,sBAAsBA,CACpCC,UAAiD;EAEjD,MAAMC,GAAG,GAAG,EAAwC;EAEpD,IAAID,UAAU,CAACE,YAAY,EACzBD,GAAG,CAACC,YAAY,GAAGC,MAAM,CAACH,UAAU,CAACE,YAAY,CAAC;EACpD,IAAIF,UAAU,CAACI,kBAAkB,EAC/BH,GAAG,CAACG,kBAAkB,GAAGD,MAAM,CAACH,UAAU,CAACI,kBAAkB,CAAC;EAChE,IAAIJ,UAAU,CAACK,oBAAoB,EACjCJ,GAAG,CAACI,oBAAoB,GAAGF,MAAM,CAACH,UAAU,CAACK,oBAAoB,CAAC;EACpE,IAAIL,UAAU,CAACM,uBAAuB,EACpCL,GAAG,CAACK,uBAAuB,GAAGH,MAAM,CAACH,UAAU,CAACM,uBAAuB,CAAC;EAC1E,IAAIN,UAAU,CAACO,6BAA6B,EAC1CN,GAAG,CAACM,6BAA6B,GAAGJ,MAAM,CACxCH,UAAU,CAACO,6BAA6B,CACzC;EAEH,OAAON,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}