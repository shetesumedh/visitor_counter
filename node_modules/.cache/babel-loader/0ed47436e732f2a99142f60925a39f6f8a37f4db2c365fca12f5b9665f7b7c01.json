{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeEventTopics = encodeEventTopics;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst log_js_1 = require(\"../../errors/log.js\");\nconst toBytes_js_1 = require(\"../encoding/toBytes.js\");\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst toEventSelector_js_1 = require(\"../hash/toEventSelector.js\");\nconst encodeAbiParameters_js_1 = require(\"./encodeAbiParameters.js\");\nconst formatAbiItem_js_1 = require(\"./formatAbiItem.js\");\nconst getAbiItem_js_1 = require(\"./getAbiItem.js\");\nconst docsPath = '/docs/contract/encodeEventTopics';\nfunction encodeEventTopics(parameters) {\n  const {\n    abi,\n    eventName,\n    args\n  } = parameters;\n  let abiItem = abi[0];\n  if (eventName) {\n    const item = (0, getAbiItem_js_1.getAbiItem)({\n      abi,\n      name: eventName\n    });\n    if (!item) throw new abi_js_1.AbiEventNotFoundError(eventName, {\n      docsPath\n    });\n    abiItem = item;\n  }\n  if (abiItem.type !== 'event') throw new abi_js_1.AbiEventNotFoundError(undefined, {\n    docsPath\n  });\n  const definition = (0, formatAbiItem_js_1.formatAbiItem)(abiItem);\n  const signature = (0, toEventSelector_js_1.toEventSelector)(definition);\n  let topics = [];\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(param => 'indexed' in param && param.indexed);\n    const args_ = Array.isArray(args) ? args : Object.values(args).length > 0 ? indexedInputs?.map(x => args[x.name]) ?? [] : [];\n    if (args_.length > 0) {\n      topics = indexedInputs?.map((param, i) => {\n        if (Array.isArray(args_[i])) return args_[i].map((_, j) => encodeArg({\n          param,\n          value: args_[i][j]\n        }));\n        return typeof args_[i] !== 'undefined' && args_[i] !== null ? encodeArg({\n          param,\n          value: args_[i]\n        }) : null;\n      }) ?? [];\n    }\n  }\n  return [signature, ...topics];\n}\nfunction encodeArg({\n  param,\n  value\n}) {\n  if (param.type === 'string' || param.type === 'bytes') return (0, keccak256_js_1.keccak256)((0, toBytes_js_1.toBytes)(value));\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/)) throw new log_js_1.FilterTypeNotSupportedError(param.type);\n  return (0, encodeAbiParameters_js_1.encodeAbiParameters)([param], [value]);\n}","map":{"version":3,"names":["exports","encodeEventTopics","abi_js_1","require","log_js_1","toBytes_js_1","keccak256_js_1","toEventSelector_js_1","encodeAbiParameters_js_1","formatAbiItem_js_1","getAbiItem_js_1","docsPath","parameters","abi","eventName","args","abiItem","item","getAbiItem","name","AbiEventNotFoundError","type","undefined","definition","formatAbiItem","signature","toEventSelector","topics","indexedInputs","inputs","filter","param","indexed","args_","Array","isArray","Object","values","length","map","x","i","_","j","encodeArg","value","keccak256","toBytes","match","FilterTypeNotSupportedError","encodeAbiParameters"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/abi/encodeEventTopics.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  ExtractAbiEvents,\n} from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeEventTopics'\n\nexport type EncodeEventTopicsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  ///\n  hasEvents = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiEvents<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>\n  >,\n  allErrorNames = ContractEventName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { eventName?: eventName | allErrorNames | undefined }\n      : { eventName: eventName | allErrorNames }\n    : { eventName?: eventName | allErrorNames | undefined }\n> &\n  (hasEvents extends true ? unknown : never)\n\nexport type EncodeEventTopicsReturnType = [Hex, ...(Hex | Hex[] | null)[]]\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n>(\n  parameters: EncodeEventTopicsParameters<abi, eventName>,\n): EncodeEventTopicsReturnType {\n  const { abi, eventName, args } = parameters as EncodeEventTopicsParameters\n\n  let abiItem = abi[0]\n  if (eventName) {\n    const item = getAbiItem({ abi, name: eventName })\n    if (!item) throw new AbiEventNotFoundError(eventName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toEventSelector(definition as EventDefinition)\n\n  let topics: (Hex | Hex[] | null)[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? (indexedInputs?.map((x: any) => (args as any)[x.name]) ?? [])\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) => {\n          if (Array.isArray(args_[i]))\n            return args_[i].map((_: any, j: number) =>\n              encodeArg({ param, value: args_[i][j] }),\n            )\n          return typeof args_[i] !== 'undefined' && args_[i] !== null\n            ? encodeArg({ param, value: args_[i] })\n            : null\n        }) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}