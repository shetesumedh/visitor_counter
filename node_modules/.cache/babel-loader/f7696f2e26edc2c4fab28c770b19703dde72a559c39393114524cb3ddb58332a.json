{"ast":null,"code":"import { sendTransaction } from '../actions/sendTransaction.js';\nexport function sendTransactionMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return sendTransaction(config, variables);\n    },\n    mutationKey: ['sendTransaction']\n  };\n}","map":{"version":3,"names":["sendTransaction","sendTransactionMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/query/sendTransaction.ts"],"sourcesContent":["import type { MutateOptions, MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../actions/sendTransaction.js'\nimport type { Config } from '../createConfig.js'\nimport type { Compute } from '../types/utils.js'\n\nexport function sendTransactionMutationOptions<config extends Config>(\n  config: config,\n) {\n  return {\n    mutationFn(variables) {\n      return sendTransaction(config, variables)\n    },\n    mutationKey: ['sendTransaction'],\n  } as const satisfies MutationOptions<\n    SendTransactionData,\n    SendTransactionErrorType,\n    SendTransactionVariables<config, config['chains'][number]['id']>\n  >\n}\n\nexport type SendTransactionData = Compute<SendTransactionReturnType>\n\nexport type SendTransactionVariables<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = SendTransactionParameters<config, chainId>\n\nexport type SendTransactionMutate<config extends Config, context = unknown> = <\n  chainId extends config['chains'][number]['id'],\n>(\n  variables: SendTransactionVariables<config, chainId>,\n  options?:\n    | Compute<\n        MutateOptions<\n          SendTransactionData,\n          SendTransactionErrorType,\n          Compute<SendTransactionVariables<config, chainId>>,\n          context\n        >\n      >\n    | undefined,\n) => void\n\nexport type SendTransactionMutateAsync<\n  config extends Config,\n  context = unknown,\n> = <chainId extends config['chains'][number]['id']>(\n  variables: SendTransactionVariables<config, chainId>,\n  options?:\n    | Compute<\n        MutateOptions<\n          SendTransactionData,\n          SendTransactionErrorType,\n          Compute<SendTransactionVariables<config, chainId>>,\n          context\n        >\n      >\n    | undefined,\n) => Promise<SendTransactionData>\n"],"mappings":"AAEA,SAIEA,eAAe,QACV,+BAA+B;AAItC,OAAM,SAAUC,8BAA8BA,CAC5CC,MAAc;EAEd,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,eAAe,CAACE,MAAM,EAAEE,SAAS,CAAC;IAC3C,CAAC;IACDC,WAAW,EAAE,CAAC,iBAAiB;GAKhC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}