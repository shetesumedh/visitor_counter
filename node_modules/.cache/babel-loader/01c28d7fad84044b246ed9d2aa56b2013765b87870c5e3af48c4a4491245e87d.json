{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseEther = parseEther;\nconst unit_js_1 = require(\"../../constants/unit.js\");\nconst parseUnits_js_1 = require(\"./parseUnits.js\");\nfunction parseEther(ether, unit = 'wei') {\n  return (0, parseUnits_js_1.parseUnits)(ether, unit_js_1.etherUnits[unit]);\n}","map":{"version":3,"names":["exports","parseEther","unit_js_1","require","parseUnits_js_1","ether","unit","parseUnits","etherUnits"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/unit/parseEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n"],"mappings":";;;;;AAkBAA,OAAA,CAAAC,UAAA,GAAAA,UAAA;AAlBA,MAAAC,SAAA,GAAAC,OAAA;AAGA,MAAAC,eAAA,GAAAD,OAAA;AAeA,SAAgBF,UAAUA,CAACI,KAAa,EAAEC,IAAA,GAAuB,KAAK;EACpE,OAAO,IAAAF,eAAA,CAAAG,UAAU,EAACF,KAAK,EAAEH,SAAA,CAAAM,UAAU,CAACF,IAAI,CAAC,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}