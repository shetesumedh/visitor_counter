{"ast":null,"code":"import { isAddress } from 'viem';\n/**\n * Validates that the amount is a positive string with max decimal places\n * @param amount - The amount to validate as a string\n * @param maxDecimals - Maximum number of decimal places allowed\n * @throws Error if amount is invalid\n */\nexport function validateStringAmount(amount, maxDecimals) {\n  if (typeof amount !== 'string') {\n    throw new Error('Invalid amount: must be a string');\n  }\n  const numAmount = parseFloat(amount);\n  if (isNaN(numAmount)) {\n    throw new Error('Invalid amount: must be a valid number');\n  }\n  if (numAmount <= 0) {\n    throw new Error('Invalid amount: must be greater than 0');\n  }\n  // Only allow specified decimal places\n  const decimalIndex = amount.indexOf('.');\n  if (decimalIndex !== -1) {\n    const decimalPlaces = amount.length - decimalIndex - 1;\n    if (decimalPlaces > maxDecimals) {\n      throw new Error(`Invalid amount: pay only supports up to ${maxDecimals} decimal places`);\n    }\n  }\n}\n/**\n * Validates that the address is a valid Ethereum address\n * @param address - The address to validate\n * @throws Error if address is invalid\n */\nexport function validateAddress(address) {\n  if (!address) {\n    throw new Error('Invalid address: address is required');\n  }\n  if (!isAddress(address)) {\n    throw new Error('Invalid address: must be a valid Ethereum address');\n  }\n}","map":{"version":3,"names":["isAddress","validateStringAmount","amount","maxDecimals","Error","numAmount","parseFloat","isNaN","decimalIndex","indexOf","decimalPlaces","length","validateAddress","address"],"sources":["../../../../src/interface/payment/utils/validation.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,SAAS,QAAQ,MAAM;AAEhC;;;;;;AAMA,OAAM,SAAUC,oBAAoBA,CAACC,MAAc,EAAEC,WAAmB;EACtE,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIE,KAAK,CAAC,kCAAkC,CAAC;EACrD;EAEA,MAAMC,SAAS,GAAGC,UAAU,CAACJ,MAAM,CAAC;EAEpC,IAAIK,KAAK,CAACF,SAAS,CAAC,EAAE;IACpB,MAAM,IAAID,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA,IAAIC,SAAS,IAAI,CAAC,EAAE;IAClB,MAAM,IAAID,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA;EACA,MAAMI,YAAY,GAAGN,MAAM,CAACO,OAAO,CAAC,GAAG,CAAC;EACxC,IAAID,YAAY,KAAK,CAAC,CAAC,EAAE;IACvB,MAAME,aAAa,GAAGR,MAAM,CAACS,MAAM,GAAGH,YAAY,GAAG,CAAC;IACtD,IAAIE,aAAa,GAAGP,WAAW,EAAE;MAC/B,MAAM,IAAIC,KAAK,CAAC,2CAA2CD,WAAW,iBAAiB,CAAC;IAC1F;EACF;AACF;AAEA;;;;;AAKA,OAAM,SAAUS,eAAeA,CAACC,OAAe;EAC7C,IAAI,CAACA,OAAO,EAAE;IACZ,MAAM,IAAIT,KAAK,CAAC,sCAAsC,CAAC;EACzD;EAEA,IAAI,CAACJ,SAAS,CAACa,OAAO,CAAC,EAAE;IACvB,MAAM,IAAIT,KAAK,CAAC,mDAAmD,CAAC;EACtE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}