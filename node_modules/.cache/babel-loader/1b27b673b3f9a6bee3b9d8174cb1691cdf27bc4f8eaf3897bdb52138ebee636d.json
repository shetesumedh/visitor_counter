{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccountTypeNotSupportedError = exports.AccountNotFoundError = void 0;\nconst base_js_1 = require(\"./base.js\");\nclass AccountNotFoundError extends base_js_1.BaseError {\n  constructor({\n    docsPath\n  } = {}) {\n    super(['Could not find an Account to execute with this Action.', 'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.'].join('\\n'), {\n      docsPath,\n      docsSlug: 'account',\n      name: 'AccountNotFoundError'\n    });\n  }\n}\nexports.AccountNotFoundError = AccountNotFoundError;\nclass AccountTypeNotSupportedError extends base_js_1.BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError'\n    });\n  }\n}\nexports.AccountTypeNotSupportedError = AccountTypeNotSupportedError;","map":{"version":3,"names":["base_js_1","require","AccountNotFoundError","BaseError","constructor","docsPath","join","docsSlug","name","exports","AccountTypeNotSupportedError","metaMessages","type"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAKA,MAAaC,oBAAqB,SAAQF,SAAA,CAAAG,SAAS;EACjDC,YAAY;IAAEC;EAAQ,IAAwC,EAAE;IAC9D,KAAK,CACH,CACE,wDAAwD,EACxD,kHAAkH,CACnH,CAACC,IAAI,CAAC,IAAI,CAAC,EACZ;MACED,QAAQ;MACRE,QAAQ,EAAE,SAAS;MACnBC,IAAI,EAAE;KACP,CACF;EACH;;AAbFC,OAAA,CAAAP,oBAAA,GAAAA,oBAAA;AAmBA,MAAaQ,4BAA6B,SAAQV,SAAA,CAAAG,SAAS;EACzDC,YAAY;IACVC,QAAQ;IACRM,YAAY;IACZC;EAAI,CAKL;IACC,KAAK,CAAC,iBAAiBA,IAAI,qBAAqB,EAAE;MAChDP,QAAQ;MACRM,YAAY;MACZH,IAAI,EAAE;KACP,CAAC;EACJ;;AAfFC,OAAA,CAAAC,4BAAA,GAAAA,4BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}