{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidAddressError = void 0;\nconst base_js_1 = require(\"./base.js\");\nclass InvalidAddressError extends base_js_1.BaseError {\n  constructor({\n    address\n  }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: ['- Address must be a hex value of 20 bytes (40 hex characters).', '- Address must match its checksum counterpart.'],\n      name: 'InvalidAddressError'\n    });\n  }\n}\nexports.InvalidAddressError = InvalidAddressError;","map":{"version":3,"names":["base_js_1","require","InvalidAddressError","BaseError","constructor","address","metaMessages","name","exports"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/errors/address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAKA,MAAaC,mBAAoB,SAAQF,SAAA,CAAAG,SAAS;EAChDC,YAAY;IAAEC;EAAO,CAAuB;IAC1C,KAAK,CAAC,YAAYA,OAAO,eAAe,EAAE;MACxCC,YAAY,EAAE,CACZ,gEAAgE,EAChE,gDAAgD,CACjD;MACDC,IAAI,EAAE;KACP,CAAC;EACJ;;AATFC,OAAA,CAAAN,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}