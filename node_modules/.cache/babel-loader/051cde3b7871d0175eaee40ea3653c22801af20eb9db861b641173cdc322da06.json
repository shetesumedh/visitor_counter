{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBlock = getBlock;\nconst block_js_1 = require(\"../../errors/block.js\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nconst block_js_2 = require(\"../../utils/formatters/block.js\");\nasync function getBlock(client, {\n  blockHash,\n  blockNumber,\n  blockTag = client.experimental_blockTag ?? 'latest',\n  includeTransactions: includeTransactions_\n} = {}) {\n  const includeTransactions = includeTransactions_ ?? false;\n  const blockNumberHex = blockNumber !== undefined ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\n  let block = null;\n  if (blockHash) {\n    block = await client.request({\n      method: 'eth_getBlockByHash',\n      params: [blockHash, includeTransactions]\n    }, {\n      dedupe: true\n    });\n  } else {\n    block = await client.request({\n      method: 'eth_getBlockByNumber',\n      params: [blockNumberHex || blockTag, includeTransactions]\n    }, {\n      dedupe: Boolean(blockNumberHex)\n    });\n  }\n  if (!block) throw new block_js_1.BlockNotFoundError({\n    blockHash,\n    blockNumber\n  });\n  const format = client.chain?.formatters?.block?.format || block_js_2.formatBlock;\n  return format(block);\n}","map":{"version":3,"names":["exports","getBlock","block_js_1","require","toHex_js_1","block_js_2","client","blockHash","blockNumber","blockTag","experimental_blockTag","includeTransactions","includeTransactions_","blockNumberHex","undefined","numberToHex","block","request","method","params","dedupe","Boolean","BlockNotFoundError","format","chain","formatters","formatBlock"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/actions/public/getBlock.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: includeTransactions | undefined\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: blockTag | BlockTag | undefined\n    }\n)\n\nexport type GetBlockReturnType<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedBlock<chain, includeTransactions, blockTag>>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain, account>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<includeTransactions, blockTag> = {},\n): Promise<GetBlockReturnType<chain, includeTransactions, blockTag>> {\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByHash',\n        params: [blockHash, includeTransactions],\n      },\n      { dedupe: true },\n    )\n  } else {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByNumber',\n        params: [blockNumberHex || blockTag, includeTransactions],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n"],"mappings":";;;;;AAyFAA,OAAA,CAAAC,QAAA,GAAAA,QAAA;AAtFA,MAAAC,UAAA,GAAAC,OAAA;AAWA,MAAAC,UAAA,GAAAD,OAAA;AAIA,MAAAE,UAAA,GAAAF,OAAA;AAuEO,eAAeF,QAAQA,CAM5BK,MAAyC,EACzC;EACEC,SAAS;EACTC,WAAW;EACXC,QAAQ,GAAGH,MAAM,CAACI,qBAAqB,IAAI,QAAQ;EACnDC,mBAAmB,EAAEC;AAAoB,IACY,EAAE;EAEzD,MAAMD,mBAAmB,GAAGC,oBAAoB,IAAI,KAAK;EAEzD,MAAMC,cAAc,GAClBL,WAAW,KAAKM,SAAS,GAAG,IAAAV,UAAA,CAAAW,WAAW,EAACP,WAAW,CAAC,GAAGM,SAAS;EAElE,IAAIE,KAAK,GAAoB,IAAI;EACjC,IAAIT,SAAS,EAAE;IACbS,KAAK,GAAG,MAAMV,MAAM,CAACW,OAAO,CAC1B;MACEC,MAAM,EAAE,oBAAoB;MAC5BC,MAAM,EAAE,CAACZ,SAAS,EAAEI,mBAAmB;KACxC,EACD;MAAES,MAAM,EAAE;IAAI,CAAE,CACjB;EACH,CAAC,MAAM;IACLJ,KAAK,GAAG,MAAMV,MAAM,CAACW,OAAO,CAC1B;MACEC,MAAM,EAAE,sBAAsB;MAC9BC,MAAM,EAAE,CAACN,cAAc,IAAIJ,QAAQ,EAAEE,mBAAmB;KACzD,EACD;MAAES,MAAM,EAAEC,OAAO,CAACR,cAAc;IAAC,CAAE,CACpC;EACH;EAEA,IAAI,CAACG,KAAK,EAAE,MAAM,IAAId,UAAA,CAAAoB,kBAAkB,CAAC;IAAEf,SAAS;IAAEC;EAAW,CAAE,CAAC;EAEpE,MAAMe,MAAM,GAAGjB,MAAM,CAACkB,KAAK,EAAEC,UAAU,EAAET,KAAK,EAAEO,MAAM,IAAIlB,UAAA,CAAAqB,WAAW;EACrE,OAAOH,MAAM,CAACP,KAAK,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}