{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverTypedDataAddress = recoverTypedDataAddress;\nconst hashTypedData_js_1 = require(\"./hashTypedData.js\");\nconst recoverAddress_js_1 = require(\"./recoverAddress.js\");\nasync function recoverTypedDataAddress(parameters) {\n  const {\n    domain,\n    message,\n    primaryType,\n    signature,\n    types\n  } = parameters;\n  return (0, recoverAddress_js_1.recoverAddress)({\n    hash: (0, hashTypedData_js_1.hashTypedData)({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    signature\n  });\n}","map":{"version":3,"names":["exports","recoverTypedDataAddress","hashTypedData_js_1","require","recoverAddress_js_1","parameters","domain","message","primaryType","signature","types","recoverAddress","hash","hashTypedData"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/signature/recoverTypedDataAddress.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashTypedDataErrorType, hashTypedData } from './hashTypedData.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType> & {\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport type RecoverTypedDataAddressErrorType =\n  | RecoverAddressErrorType\n  | HashTypedDataErrorType\n  | ErrorType\n\nexport async function recoverTypedDataAddress<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: RecoverTypedDataAddressParameters<typedData, primaryType>,\n): Promise<RecoverTypedDataAddressReturnType> {\n  const { domain, message, primaryType, signature, types } =\n    parameters as unknown as RecoverTypedDataAddressParameters\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    }),\n    signature,\n  })\n}\n"],"mappings":";;;;;AA0BAA,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AApBA,MAAAC,kBAAA,GAAAC,OAAA;AACA,MAAAC,mBAAA,GAAAD,OAAA;AAmBO,eAAeF,uBAAuBA,CAI3CI,UAAqE;EAErE,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAK,CAAE,GACtDL,UAA0D;EAC5D,OAAO,IAAAD,mBAAA,CAAAO,cAAc,EAAC;IACpBC,IAAI,EAAE,IAAAV,kBAAA,CAAAW,aAAa,EAAC;MAClBP,MAAM;MACNC,OAAO;MACPC,WAAW;MACXE;KACD,CAAC;IACFD;GACD,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}