{"ast":null,"code":"import { createBaseAccountSDK } from '../../../index.js';\nimport { CHAIN_IDS } from '../constants.js';\n/**\n * Creates an ephemeral SDK instance configured for payments\n * @param chainId - The chain ID to use\n * @returns The configured SDK instance\n */\nexport function createEphemeralSDK(chainId) {\n  const appName = typeof window !== 'undefined' ? window.location.origin : 'Base Pay SDK';\n  const sdk = createBaseAccountSDK({\n    appName: appName,\n    appChainIds: [chainId],\n    preference: {\n      telemetry: true\n    }\n  });\n  return sdk;\n}\n/**\n * Executes a payment using the SDK\n * @param sdk - The SDK instance\n * @param requestParams - The wallet_sendCalls request parameters\n * @returns The payment execution result with transaction hash and optional info responses\n */\nexport async function executePayment(sdk, requestParams) {\n  var _a;\n  const provider = sdk.getProvider();\n  const result = await provider.request({\n    method: 'wallet_sendCalls',\n    params: [requestParams]\n  });\n  let transactionHash;\n  let payerInfoResponses;\n  // Handle different response formats\n  if (typeof result === 'string' && result.length >= 66) {\n    // Standard response format - just a transaction hash\n    transactionHash = result.slice(0, 66);\n  } else if (typeof result === 'object' && result !== null) {\n    // Object response format - contains callsId and capabilities with dataCallback\n    const resultObj = result;\n    // Extract transaction hash from callsId\n    if (typeof resultObj.callsId === 'string' && resultObj.callsId.length >= 66) {\n      transactionHash = resultObj.callsId.slice(0, 66);\n      // Extract info responses from capabilities.dataCallback\n      if ((_a = resultObj.capabilities) === null || _a === void 0 ? void 0 : _a.dataCallback) {\n        payerInfoResponses = resultObj.capabilities.dataCallback;\n      }\n    } else {\n      throw new Error(`Could not extract transaction hash from object response. Available fields: ${Object.keys(resultObj).join(', ')}`);\n    }\n  } else {\n    throw new Error(`Unexpected response format from wallet_sendCalls: expected string with length > 66 or object with callsId, got ${typeof result}`);\n  }\n  return {\n    transactionHash,\n    payerInfoResponses\n  };\n}\n/**\n * Manages the complete payment flow with SDK lifecycle\n * @param requestParams - The wallet_sendCalls request parameters\n * @param testnet - Whether to use testnet\n * @returns The payment execution result\n */\nexport async function executePaymentWithSDK(requestParams, testnet) {\n  const network = testnet ? 'baseSepolia' : 'base';\n  const chainId = CHAIN_IDS[network];\n  const sdk = createEphemeralSDK(chainId);\n  const provider = sdk.getProvider();\n  try {\n    const result = await executePayment(sdk, requestParams);\n    return result;\n  } finally {\n    // Clean up provider state for subsequent payments\n    await provider.disconnect();\n  }\n}","map":{"version":3,"names":["createBaseAccountSDK","CHAIN_IDS","createEphemeralSDK","chainId","appName","window","location","origin","sdk","appChainIds","preference","telemetry","executePayment","requestParams","provider","getProvider","result","request","method","params","transactionHash","payerInfoResponses","length","slice","resultObj","callsId","_a","capabilities","dataCallback","Error","Object","keys","join","executePaymentWithSDK","testnet","network","disconnect"],"sources":["../../../../src/interface/payment/utils/sdkManager.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,oBAAoB,QAAQ,mBAAmB;AACxD,SAASC,SAAS,QAAQ,iBAAiB;AAoC3C;;;;;AAKA,OAAM,SAAUC,kBAAkBA,CAACC,OAAe;EAChD,MAAMC,OAAO,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,cAAc;EAEvF,MAAMC,GAAG,GAAGR,oBAAoB,CAAC;IAC/BI,OAAO,EAAEA,OAAO;IAChBK,WAAW,EAAE,CAACN,OAAO,CAAC;IACtBO,UAAU,EAAE;MACVC,SAAS,EAAE;;GAEd,CAAC;EAEF,OAAOH,GAAG;AACZ;AAEA;;;;;;AAMA,OAAO,eAAeI,cAAcA,CAClCJ,GAA4C,EAC5CK,aAA2C;;EAE3C,MAAMC,QAAQ,GAAGN,GAAG,CAACO,WAAW,EAAE;EAElC,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,OAAO,CAAC;IACpCC,MAAM,EAAE,kBAAkB;IAC1BC,MAAM,EAAE,CAACN,aAAa;GACvB,CAAC;EAEF,IAAIO,eAAoB;EACxB,IAAIC,kBAAkD;EAEtD;EACA,IAAI,OAAOL,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACM,MAAM,IAAI,EAAE,EAAE;IACrD;IACAF,eAAe,GAAGJ,MAAM,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAQ;EAC9C,CAAC,MAAM,IAAI,OAAOP,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,EAAE;IACxD;IACA,MAAMQ,SAAS,GAAGR,MAAuC;IAEzD;IACA,IAAI,OAAOQ,SAAS,CAACC,OAAO,KAAK,QAAQ,IAAID,SAAS,CAACC,OAAO,CAACH,MAAM,IAAI,EAAE,EAAE;MAC3EF,eAAe,GAAGI,SAAS,CAACC,OAAO,CAACF,KAAK,CAAC,CAAC,EAAE,EAAE,CAAQ;MAEvD;MACA,IAAI,CAAAG,EAAA,GAAAF,SAAS,CAACG,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,YAAY,EAAE;QACxCP,kBAAkB,GAAGG,SAAS,CAACG,YAAY,CAACC,YAAY;MAC1D;IACF,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,8EAA8EC,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACpI;EACF,CAAC,MAAM;IACL,MAAM,IAAIH,KAAK,CAAC,kHAAkH,OAAOb,MAAM,EAAE,CAAC;EACpJ;EAEA,OAAO;IAAEI,eAAe;IAAEC;EAAkB,CAAE;AAChD;AAEA;;;;;;AAMA,OAAO,eAAeY,qBAAqBA,CAACpB,aAA2C,EAAEqB,OAAgB;EACvG,MAAMC,OAAO,GAAGD,OAAO,GAAG,aAAa,GAAG,MAAM;EAChD,MAAM/B,OAAO,GAAGF,SAAS,CAACkC,OAAO,CAAC;EAElC,MAAM3B,GAAG,GAAGN,kBAAkB,CAACC,OAAO,CAAC;EACvC,MAAMW,QAAQ,GAAGN,GAAG,CAACO,WAAW,EAAE;EAElC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMJ,cAAc,CAACJ,GAAG,EAAEK,aAAa,CAAC;IACvD,OAAOG,MAAM;EACf,CAAC,SAAS;IACR;IACA,MAAMF,QAAQ,CAACsB,UAAU,EAAE;EAC7B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}