{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toPrefixedMessage = toPrefixedMessage;\nconst strings_js_1 = require(\"../../constants/strings.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst size_js_1 = require(\"../data/size.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nfunction toPrefixedMessage(message_) {\n  const message = (() => {\n    if (typeof message_ === 'string') return (0, toHex_js_1.stringToHex)(message_);\n    if (typeof message_.raw === 'string') return message_.raw;\n    return (0, toHex_js_1.bytesToHex)(message_.raw);\n  })();\n  const prefix = (0, toHex_js_1.stringToHex)(`${strings_js_1.presignMessagePrefix}${(0, size_js_1.size)(message)}`);\n  return (0, concat_js_1.concat)([prefix, message]);\n}","map":{"version":3,"names":["exports","toPrefixedMessage","strings_js_1","require","concat_js_1","size_js_1","toHex_js_1","message_","message","stringToHex","raw","bytesToHex","prefix","presignMessagePrefix","size","concat"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/signature/toPrefixedMessage.ts"],"sourcesContent":["import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  type StringToHexErrorType,\n  bytesToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n"],"mappings":";;;;;AAkBAA,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAlBA,MAAAC,YAAA,GAAAC,OAAA;AAGA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,SAAA,GAAAF,OAAA;AACA,MAAAG,UAAA,GAAAH,OAAA;AAaA,SAAgBF,iBAAiBA,CAACM,QAAyB;EACzD,MAAMC,OAAO,GAAG,CAAC,MAAK;IACpB,IAAI,OAAOD,QAAQ,KAAK,QAAQ,EAAE,OAAO,IAAAD,UAAA,CAAAG,WAAW,EAACF,QAAQ,CAAC;IAC9D,IAAI,OAAOA,QAAQ,CAACG,GAAG,KAAK,QAAQ,EAAE,OAAOH,QAAQ,CAACG,GAAG;IACzD,OAAO,IAAAJ,UAAA,CAAAK,UAAU,EAACJ,QAAQ,CAACG,GAAG,CAAC;EACjC,CAAC,EAAC,CAAE;EACJ,MAAME,MAAM,GAAG,IAAAN,UAAA,CAAAG,WAAW,EAAC,GAAGP,YAAA,CAAAW,oBAAoB,GAAG,IAAAR,SAAA,CAAAS,IAAI,EAACN,OAAO,CAAC,EAAE,CAAC;EACrE,OAAO,IAAAJ,WAAA,CAAAW,MAAM,EAAC,CAACH,MAAM,EAAEJ,OAAO,CAAC,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}