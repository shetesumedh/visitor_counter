{"ast":null,"code":"import { getBlock as viem_getBlock } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\n/** https://wagmi.sh/core/actions/getBlock */\nexport async function getBlock(config, parameters = {}) {\n  const {\n    chainId,\n    ...rest\n  } = parameters;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_getBlock, 'getBlock');\n  const block = await action(rest);\n  return {\n    ...block,\n    chainId: client.chain.id\n  };\n}","map":{"version":3,"names":["getBlock","viem_getBlock","getAction","config","parameters","chainId","rest","client","getClient","action","block","chain","id"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/getBlock.ts"],"sourcesContent":["import type { BlockTag, Chain } from 'viem'\nimport {\n  type GetBlockErrorType as viem_GetBlockErrorType,\n  type GetBlockParameters as viem_GetBlockParameters,\n  type GetBlockReturnType as viem_GetBlockReturnType,\n  getBlock as viem_getBlock,\n} from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Compute, IsNarrowable } from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\n\nexport type GetBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<\n  viem_GetBlockParameters<includeTransactions, blockTag> &\n    ChainIdParameter<config, chainId>\n>\n\nexport type GetBlockReturnType<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = Compute<\n  {\n    [key in keyof chains]: viem_GetBlockReturnType<\n      IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined,\n      includeTransactions,\n      blockTag\n    > & { chainId: chains[key]['id'] }\n  }[number]\n>\n\nexport type GetBlockErrorType = viem_GetBlockErrorType\n\n/** https://wagmi.sh/core/actions/getBlock */\nexport async function getBlock<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  config: config,\n  parameters: GetBlockParameters<\n    includeTransactions,\n    blockTag,\n    config,\n    chainId\n  > = {},\n): Promise<GetBlockReturnType<includeTransactions, blockTag, config, chainId>> {\n  const { chainId, ...rest } = parameters\n  const client = config.getClient({ chainId })\n  const action = getAction(client, viem_getBlock, 'getBlock')\n  const block = await action(rest)\n  return {\n    ...(block as unknown as GetBlockReturnType<\n      includeTransactions,\n      blockTag,\n      config,\n      chainId\n    >),\n    chainId: client.chain.id,\n  }\n}\n"],"mappings":"AACA,SAIEA,QAAQ,IAAIC,aAAa,QACpB,cAAc;AAMrB,SAASC,SAAS,QAAQ,uBAAuB;AAiCjD;AACA,OAAO,eAAeF,QAAQA,CAM5BG,MAAc,EACdC,UAAA,GAKI,EAAE;EAEN,MAAM;IAAEC,OAAO;IAAE,GAAGC;EAAI,CAAE,GAAGF,UAAU;EACvC,MAAMG,MAAM,GAAGJ,MAAM,CAACK,SAAS,CAAC;IAAEH;EAAO,CAAE,CAAC;EAC5C,MAAMI,MAAM,GAAGP,SAAS,CAACK,MAAM,EAAEN,aAAa,EAAE,UAAU,CAAC;EAC3D,MAAMS,KAAK,GAAG,MAAMD,MAAM,CAACH,IAAI,CAAC;EAChC,OAAO;IACL,GAAII,KAKF;IACFL,OAAO,EAAEE,MAAM,CAACI,KAAK,CAACC;GACvB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}