{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeFunctionResult = encodeFunctionResult;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst encodeAbiParameters_js_1 = require(\"./encodeAbiParameters.js\");\nconst getAbiItem_js_1 = require(\"./getAbiItem.js\");\nconst docsPath = '/docs/contract/encodeFunctionResult';\nfunction encodeFunctionResult(parameters) {\n  const {\n    abi,\n    functionName,\n    result\n  } = parameters;\n  let abiItem = abi[0];\n  if (functionName) {\n    const item = (0, getAbiItem_js_1.getAbiItem)({\n      abi,\n      name: functionName\n    });\n    if (!item) throw new abi_js_1.AbiFunctionNotFoundError(functionName, {\n      docsPath\n    });\n    abiItem = item;\n  }\n  if (abiItem.type !== 'function') throw new abi_js_1.AbiFunctionNotFoundError(undefined, {\n    docsPath\n  });\n  if (!abiItem.outputs) throw new abi_js_1.AbiFunctionOutputsNotFoundError(abiItem.name, {\n    docsPath\n  });\n  const values = (() => {\n    if (abiItem.outputs.length === 0) return [];\n    if (abiItem.outputs.length === 1) return [result];\n    if (Array.isArray(result)) return result;\n    throw new abi_js_1.InvalidArrayError(result);\n  })();\n  return (0, encodeAbiParameters_js_1.encodeAbiParameters)(abiItem.outputs, values);\n}","map":{"version":3,"names":["exports","encodeFunctionResult","abi_js_1","require","encodeAbiParameters_js_1","getAbiItem_js_1","docsPath","parameters","abi","functionName","result","abiItem","item","getAbiItem","name","AbiFunctionNotFoundError","type","undefined","outputs","AbiFunctionOutputsNotFoundError","values","length","Array","isArray","InvalidArrayError","encodeAbiParameters"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/abi/encodeFunctionResult.ts"],"sourcesContent":["import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n  InvalidArrayError,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionName,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  result?:\n    | ContractFunctionReturnType<\n        abi,\n        AbiStateMutability,\n        functionName extends ContractFunctionName<abi>\n          ? functionName\n          : ContractFunctionName<abi>,\n        never // allow all args. required for overloads to work.\n      >\n    | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionResultReturnType = Hex\n\nexport type EncodeFunctionResultErrorType =\n  | AbiFunctionOutputsNotFoundError\n  | AbiFunctionNotFoundError\n  | EncodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function encodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionResultParameters<abi, functionName>,\n): EncodeFunctionResultReturnType {\n  const { abi, functionName, result } =\n    parameters as EncodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = (() => {\n    if (abiItem.outputs.length === 0) return []\n    if (abiItem.outputs.length === 1) return [result]\n    if (Array.isArray(result)) return result\n    throw new InvalidArrayError(result)\n  })()\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n"],"mappings":";;;;;AAmEAA,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AAjEA,MAAAC,QAAA,GAAAC,OAAA;AAaA,MAAAC,wBAAA,GAAAD,OAAA;AAIA,MAAAE,eAAA,GAAAF,OAAA;AAEA,MAAMG,QAAQ,GAAG,qCAAqC;AA8CtD,SAAgBL,oBAAoBA,CAIlCM,UAA6D;EAE7D,MAAM;IAAEC,GAAG;IAAEC,YAAY;IAAEC;EAAM,CAAE,GACjCH,UAA4C;EAE9C,IAAII,OAAO,GAAGH,GAAG,CAAC,CAAC,CAAC;EACpB,IAAIC,YAAY,EAAE;IAChB,MAAMG,IAAI,GAAG,IAAAP,eAAA,CAAAQ,UAAU,EAAC;MAAEL,GAAG;MAAEM,IAAI,EAAEL;IAAY,CAAE,CAAC;IACpD,IAAI,CAACG,IAAI,EAAE,MAAM,IAAIV,QAAA,CAAAa,wBAAwB,CAACN,YAAY,EAAE;MAAEH;IAAQ,CAAE,CAAC;IACzEK,OAAO,GAAGC,IAAI;EAChB;EAEA,IAAID,OAAO,CAACK,IAAI,KAAK,UAAU,EAC7B,MAAM,IAAId,QAAA,CAAAa,wBAAwB,CAACE,SAAS,EAAE;IAAEX;EAAQ,CAAE,CAAC;EAE7D,IAAI,CAACK,OAAO,CAACO,OAAO,EAClB,MAAM,IAAIhB,QAAA,CAAAiB,+BAA+B,CAACR,OAAO,CAACG,IAAI,EAAE;IAAER;EAAQ,CAAE,CAAC;EAEvE,MAAMc,MAAM,GAAG,CAAC,MAAK;IACnB,IAAIT,OAAO,CAACO,OAAO,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;IAC3C,IAAIV,OAAO,CAACO,OAAO,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,CAACX,MAAM,CAAC;IACjD,IAAIY,KAAK,CAACC,OAAO,CAACb,MAAM,CAAC,EAAE,OAAOA,MAAM;IACxC,MAAM,IAAIR,QAAA,CAAAsB,iBAAiB,CAACd,MAAM,CAAC;EACrC,CAAC,EAAC,CAAE;EAEJ,OAAO,IAAAN,wBAAA,CAAAqB,mBAAmB,EAACd,OAAO,CAACO,OAAO,EAAEE,MAAM,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}