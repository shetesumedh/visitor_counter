{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNullUniversalResolverError = isNullUniversalResolverError;\nconst solidity_js_1 = require(\"../../constants/solidity.js\");\nconst base_js_1 = require(\"../../errors/base.js\");\nconst contract_js_1 = require(\"../../errors/contract.js\");\nfunction isNullUniversalResolverError(err, callType) {\n  if (!(err instanceof base_js_1.BaseError)) return false;\n  const cause = err.walk(e => e instanceof contract_js_1.ContractFunctionRevertedError);\n  if (!(cause instanceof contract_js_1.ContractFunctionRevertedError)) return false;\n  if (cause.data?.errorName === 'ResolverNotFound') return true;\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true;\n  if (cause.data?.errorName === 'ResolverNotContract') return true;\n  if (cause.data?.errorName === 'ResolverError') return true;\n  if (cause.data?.errorName === 'HttpError') return true;\n  if (cause.reason?.includes('Wildcard on non-extended resolvers is not supported')) return true;\n  if (callType === 'reverse' && cause.reason === solidity_js_1.panicReasons[50]) return true;\n  return false;\n}","map":{"version":3,"names":["exports","isNullUniversalResolverError","solidity_js_1","require","base_js_1","contract_js_1","err","callType","BaseError","cause","walk","e","ContractFunctionRevertedError","data","errorName","reason","includes","panicReasons"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/ens/errors.ts"],"sourcesContent":["import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  if (cause.data?.errorName === 'ResolverNotContract') return true\n  if (cause.data?.errorName === 'ResolverError') return true\n  if (cause.data?.errorName === 'HttpError') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n"],"mappings":";;;;;AAWAA,OAAA,CAAAC,4BAAA,GAAAA,4BAAA;AAXA,MAAAC,aAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAD,OAAA;AACA,MAAAE,aAAA,GAAAF,OAAA;AASA,SAAgBF,4BAA4BA,CAC1CK,GAAY,EACZC,QAA+B;EAE/B,IAAI,EAAED,GAAG,YAAYF,SAAA,CAAAI,SAAS,CAAC,EAAE,OAAO,KAAK;EAC7C,MAAMC,KAAK,GAAGH,GAAG,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,YAAYN,aAAA,CAAAO,6BAA6B,CAAC;EACzE,IAAI,EAAEH,KAAK,YAAYJ,aAAA,CAAAO,6BAA6B,CAAC,EAAE,OAAO,KAAK;EACnE,IAAIH,KAAK,CAACI,IAAI,EAAEC,SAAS,KAAK,kBAAkB,EAAE,OAAO,IAAI;EAC7D,IAAIL,KAAK,CAACI,IAAI,EAAEC,SAAS,KAAK,8BAA8B,EAAE,OAAO,IAAI;EACzE,IAAIL,KAAK,CAACI,IAAI,EAAEC,SAAS,KAAK,qBAAqB,EAAE,OAAO,IAAI;EAChE,IAAIL,KAAK,CAACI,IAAI,EAAEC,SAAS,KAAK,eAAe,EAAE,OAAO,IAAI;EAC1D,IAAIL,KAAK,CAACI,IAAI,EAAEC,SAAS,KAAK,WAAW,EAAE,OAAO,IAAI;EAEtD,IACEL,KAAK,CAACM,MAAM,EAAEC,QAAQ,CACpB,qDAAqD,CACtD,EAED,OAAO,IAAI;EAEb,IAAIT,QAAQ,KAAK,SAAS,IAAIE,KAAK,CAACM,MAAM,KAAKb,aAAA,CAAAe,YAAY,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI;EAC5E,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}