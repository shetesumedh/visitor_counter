{"ast":null,"code":"import { encodeFunctionData } from '../../../utils/abi/encodeFunctionData.js';\nimport { abi, executionMode } from '../constants.js';\nimport { encodeCalls } from './encodeCalls.js';\nexport function encodeExecuteData(parameters) {\n  const {\n    calls,\n    opData\n  } = parameters;\n  const encodedCalls = encodeCalls(calls, opData);\n  const mode = opData ? executionMode.opData : executionMode.default;\n  return encodeFunctionData({\n    abi,\n    functionName: 'execute',\n    args: [mode, encodedCalls]\n  });\n}","map":{"version":3,"names":["encodeFunctionData","abi","executionMode","encodeCalls","encodeExecuteData","parameters","calls","opData","encodedCalls","mode","default","functionName","args"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/experimental/erc7821/utils/encodeExecuteData.ts"],"sourcesContent":["import type { Narrow } from 'abitype'\n\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Calls } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../../utils/abi/encodeFunctionData.js'\nimport { abi, executionMode } from '../constants.js'\nimport { type EncodeCallsErrorType, encodeCalls } from './encodeCalls.js'\n\nexport type EncodeExecuteDataParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Calls to execute. */\n  calls: Calls<Narrow<calls>>\n  /** Additional data to include for execution. */\n  opData?: Hex | undefined\n}\n\nexport type EncodeExecuteDataReturnType = Hex\n\nexport type EncodeExecuteDataErrorType =\n  | EncodeCallsErrorType\n  | EncodeFunctionDataErrorType\n  | ErrorType\n\nexport function encodeExecuteData<const calls extends readonly unknown[]>(\n  parameters: EncodeExecuteDataParameters<calls>,\n): EncodeExecuteDataReturnType {\n  const { calls, opData } = parameters\n\n  const encodedCalls = encodeCalls(calls, opData)\n  const mode = opData ? executionMode.opData : executionMode.default\n\n  return encodeFunctionData({\n    abi,\n    functionName: 'execute',\n    args: [mode, encodedCalls],\n  })\n}\n"],"mappings":"AAKA,SAEEA,kBAAkB,QACb,0CAA0C;AACjD,SAASC,GAAG,EAAEC,aAAa,QAAQ,iBAAiB;AACpD,SAAoCC,WAAW,QAAQ,kBAAkB;AAkBzE,OAAM,SAAUC,iBAAiBA,CAC/BC,UAA8C;EAE9C,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAE,GAAGF,UAAU;EAEpC,MAAMG,YAAY,GAAGL,WAAW,CAACG,KAAK,EAAEC,MAAM,CAAC;EAC/C,MAAME,IAAI,GAAGF,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACQ,OAAO;EAElE,OAAOV,kBAAkB,CAAC;IACxBC,GAAG;IACHU,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,CAACH,IAAI,EAAED,YAAY;GAC1B,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}