{"ast":null,"code":"import { UserOperationReceiptNotFoundError } from '../../errors/userOperation.js';\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js';\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(client, {\n  hash\n}) {\n  const receipt = await client.request({\n    method: 'eth_getUserOperationReceipt',\n    params: [hash]\n  }, {\n    dedupe: true\n  });\n  if (!receipt) throw new UserOperationReceiptNotFoundError({\n    hash\n  });\n  return formatUserOperationReceipt(receipt);\n}","map":{"version":3,"names":["UserOperationReceiptNotFoundError","formatUserOperationReceipt","getUserOperationReceipt","client","hash","receipt","request","method","params","dedupe"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/account-abstraction/actions/bundler/getUserOperationReceipt.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport {\n  UserOperationReceiptNotFoundError,\n  type UserOperationReceiptNotFoundErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js'\n\nexport type GetUserOperationReceiptParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n}\n\nexport type GetUserOperationReceiptReturnType = Prettify<UserOperationReceipt>\n\nexport type GetUserOperationReceiptErrorType =\n  | RequestErrorType\n  | UserOperationReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(\n  client: Client<Transport>,\n  { hash }: GetUserOperationReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getUserOperationReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new UserOperationReceiptNotFoundError({ hash })\n\n  return formatUserOperationReceipt(receipt)\n}\n"],"mappings":"AAMA,SACEA,iCAAiC,QAE5B,+BAA+B;AAEtC,SAASC,0BAA0B,QAAQ,gDAAgD;AAc3F;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,eAAeC,uBAAuBA,CAC3CC,MAAyB,EACzB;EAAEC;AAAI,CAAqC;EAE3C,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,OAAO,CAClC;IACEC,MAAM,EAAE,6BAA6B;IACrCC,MAAM,EAAE,CAACJ,IAAI;GACd,EACD;IAAEK,MAAM,EAAE;EAAI,CAAE,CACjB;EAED,IAAI,CAACJ,OAAO,EAAE,MAAM,IAAIL,iCAAiC,CAAC;IAAEI;EAAI,CAAE,CAAC;EAEnE,OAAOH,0BAA0B,CAACI,OAAO,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}