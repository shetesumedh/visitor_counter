{"ast":null,"code":"import { formatUnits } from 'viem';\nimport { estimateFeesPerGas as viem_estimateFeesPerGas } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\nimport { getUnit } from '../utils/getUnit.js';\nexport async function estimateFeesPerGas(config, parameters = {}) {\n  const {\n    chainId,\n    formatUnits: units = 'gwei',\n    ...rest\n  } = parameters;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_estimateFeesPerGas, 'estimateFeesPerGas');\n  const {\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  } = await action({\n    ...rest,\n    chain: client.chain\n  });\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits(gasPrice, unit) : undefined,\n    maxFeePerGas: maxFeePerGas ? formatUnits(maxFeePerGas, unit) : undefined,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits(maxPriorityFeePerGas, unit) : undefined\n  };\n  return {\n    formatted,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  };\n}","map":{"version":3,"names":["formatUnits","estimateFeesPerGas","viem_estimateFeesPerGas","getAction","getUnit","config","parameters","chainId","units","rest","client","getClient","action","gasPrice","maxFeePerGas","maxPriorityFeePerGas","chain","unit","formatted","undefined"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/estimateFeesPerGas.ts"],"sourcesContent":["import {\n  type Chain,\n  type FeeValuesEIP1559,\n  type FeeValuesLegacy,\n  type FeeValuesType,\n  formatUnits,\n} from 'viem'\nimport {\n  type EstimateFeesPerGasErrorType as viem_EstimateFeesPerGasErrorType,\n  type EstimateFeesPerGasParameters as viem_EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType as viem_EstimateFeesPerGasReturnType,\n  estimateFeesPerGas as viem_estimateFeesPerGas,\n} from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Unit } from '../types/unit.js'\nimport type { Compute } from '../types/utils.js'\nimport type { UnionCompute, UnionLooseOmit } from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport { getUnit } from '../utils/getUnit.js'\n\nexport type EstimateFeesPerGasParameters<\n  type extends FeeValuesType = FeeValuesType,\n  config extends Config = Config,\n> = UnionCompute<\n  UnionLooseOmit<\n    viem_EstimateFeesPerGasParameters<Chain, Chain, type>,\n    'chain'\n  > &\n    ChainIdParameter<config> & {\n      /** @deprecated */\n      formatUnits?: Unit | undefined\n    }\n>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> = Compute<\n  viem_EstimateFeesPerGasReturnType<type> & {\n    /** @deprecated */\n    formatted: UnionCompute<\n      | (type extends 'legacy' ? FeeValuesLegacy<string> : never)\n      | (type extends 'eip1559' ? FeeValuesEIP1559<string> : never)\n    >\n  }\n>\n\nexport type EstimateFeesPerGasErrorType = viem_EstimateFeesPerGasErrorType\n\nexport async function estimateFeesPerGas<\n  config extends Config,\n  type extends FeeValuesType = 'eip1559',\n>(\n  config: config,\n  parameters: EstimateFeesPerGasParameters<type, config> = {},\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const { chainId, formatUnits: units = 'gwei', ...rest } = parameters\n\n  const client = config.getClient({ chainId })\n  const action = getAction(\n    client,\n    viem_estimateFeesPerGas,\n    'estimateFeesPerGas',\n  )\n\n  const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = await action({\n    ...rest,\n    chain: client.chain,\n  })\n\n  const unit = getUnit(units)\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits(gasPrice, unit) : undefined,\n    maxFeePerGas: maxFeePerGas ? formatUnits(maxFeePerGas, unit) : undefined,\n    maxPriorityFeePerGas: maxPriorityFeePerGas\n      ? formatUnits(maxPriorityFeePerGas, unit)\n      : undefined,\n  }\n\n  return {\n    formatted,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n  } as EstimateFeesPerGasReturnType<type>\n}\n"],"mappings":"AAAA,SAKEA,WAAW,QACN,MAAM;AACb,SAIEC,kBAAkB,IAAIC,uBAAuB,QACxC,cAAc;AAOrB,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,OAAO,QAAQ,qBAAqB;AA8B7C,OAAO,eAAeH,kBAAkBA,CAItCI,MAAc,EACdC,UAAA,GAAyD,EAAE;EAE3D,MAAM;IAAEC,OAAO;IAAEP,WAAW,EAAEQ,KAAK,GAAG,MAAM;IAAE,GAAGC;EAAI,CAAE,GAAGH,UAAU;EAEpE,MAAMI,MAAM,GAAGL,MAAM,CAACM,SAAS,CAAC;IAAEJ;EAAO,CAAE,CAAC;EAC5C,MAAMK,MAAM,GAAGT,SAAS,CACtBO,MAAM,EACNR,uBAAuB,EACvB,oBAAoB,CACrB;EAED,MAAM;IAAEW,QAAQ;IAAEC,YAAY;IAAEC;EAAoB,CAAE,GAAG,MAAMH,MAAM,CAAC;IACpE,GAAGH,IAAI;IACPO,KAAK,EAAEN,MAAM,CAACM;GACf,CAAC;EAEF,MAAMC,IAAI,GAAGb,OAAO,CAACI,KAAK,CAAC;EAC3B,MAAMU,SAAS,GAAG;IAChBL,QAAQ,EAAEA,QAAQ,GAAGb,WAAW,CAACa,QAAQ,EAAEI,IAAI,CAAC,GAAGE,SAAS;IAC5DL,YAAY,EAAEA,YAAY,GAAGd,WAAW,CAACc,YAAY,EAAEG,IAAI,CAAC,GAAGE,SAAS;IACxEJ,oBAAoB,EAAEA,oBAAoB,GACtCf,WAAW,CAACe,oBAAoB,EAAEE,IAAI,CAAC,GACvCE;GACL;EAED,OAAO;IACLD,SAAS;IACTL,QAAQ;IACRC,YAAY;IACZC;GACqC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}