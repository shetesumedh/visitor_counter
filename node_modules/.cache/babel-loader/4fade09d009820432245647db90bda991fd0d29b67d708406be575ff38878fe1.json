{"ast":null,"code":"import { deployContract as viem_deployContract } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\nimport { getConnectorClient } from './getConnectorClient.js';\n/** https://wagmi.sh/core/api/actions/deployContract */\nexport async function deployContract(config, parameters) {\n  const {\n    account,\n    chainId,\n    connector,\n    ...rest\n  } = parameters;\n  let client;\n  if (typeof account === 'object' && account?.type === 'local') client = config.getClient({\n    chainId\n  });else client = await getConnectorClient(config, {\n    account: account ?? undefined,\n    chainId,\n    connector\n  });\n  const action = getAction(client, viem_deployContract, 'deployContract');\n  const hash = await action({\n    ...rest,\n    ...(account ? {\n      account\n    } : {}),\n    chain: chainId ? {\n      id: chainId\n    } : null\n  });\n  return hash;\n}","map":{"version":3,"names":["deployContract","viem_deployContract","getAction","getConnectorClient","config","parameters","account","chainId","connector","rest","client","type","getClient","undefined","action","hash","chain","id"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/deployContract.ts"],"sourcesContent":["import type { Abi, Account, Chain, Client, ContractConstructorArgs } from 'viem'\nimport {\n  type DeployContractErrorType as viem_DeployContractErrorType,\n  type DeployContractParameters as viem_DeployContractParameters,\n  type DeployContractReturnType as viem_DeployContractReturnType,\n  deployContract as viem_deployContract,\n} from 'viem/actions'\nimport type { Config } from '../createConfig.js'\nimport type { BaseErrorType, ErrorType } from '../errors/base.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type {\n  ChainIdParameter,\n  ConnectorParameter,\n} from '../types/properties.js'\nimport type { Compute } from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport {\n  type GetConnectorClientErrorType,\n  getConnectorClient,\n} from './getConnectorClient.js'\n\nexport type DeployContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  ///\n  allArgs = ContractConstructorArgs<abi>,\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: Compute<\n    Omit<\n      viem_DeployContractParameters<\n        abi,\n        chains[key],\n        Account,\n        chains[key],\n        allArgs\n      >,\n      'chain'\n    > &\n      ChainIdParameter<config, chainId> &\n      ConnectorParameter\n  >\n}[number]\n\nexport type DeployContractReturnType = viem_DeployContractReturnType\n\nexport type DeployContractErrorType =\n  // getConnectorClient()\n  | GetConnectorClientErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n  // viem\n  | viem_DeployContractErrorType\n\n/** https://wagmi.sh/core/api/actions/deployContract */\nexport async function deployContract<\n  config extends Config,\n  const abi extends Abi | readonly unknown[],\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: DeployContractParameters<abi, config, chainId>,\n): Promise<DeployContractReturnType> {\n  const { account, chainId, connector, ...rest } = parameters\n\n  let client: Client\n  if (typeof account === 'object' && account?.type === 'local')\n    client = config.getClient({ chainId })\n  else\n    client = await getConnectorClient(config, {\n      account: account ?? undefined,\n      chainId,\n      connector,\n    })\n\n  const action = getAction(client, viem_deployContract, 'deployContract')\n  const hash = await action({\n    ...(rest as any),\n    ...(account ? { account } : {}),\n    chain: chainId ? { id: chainId } : null,\n  })\n\n  return hash\n}\n"],"mappings":"AACA,SAIEA,cAAc,IAAIC,mBAAmB,QAChC,cAAc;AASrB,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAEEC,kBAAkB,QACb,yBAAyB;AAsChC;AACA,OAAO,eAAeH,cAAcA,CAKlCI,MAAc,EACdC,UAA0D;EAE1D,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,SAAS;IAAE,GAAGC;EAAI,CAAE,GAAGJ,UAAU;EAE3D,IAAIK,MAAc;EAClB,IAAI,OAAOJ,OAAO,KAAK,QAAQ,IAAIA,OAAO,EAAEK,IAAI,KAAK,OAAO,EAC1DD,MAAM,GAAGN,MAAM,CAACQ,SAAS,CAAC;IAAEL;EAAO,CAAE,CAAC,MAEtCG,MAAM,GAAG,MAAMP,kBAAkB,CAACC,MAAM,EAAE;IACxCE,OAAO,EAAEA,OAAO,IAAIO,SAAS;IAC7BN,OAAO;IACPC;GACD,CAAC;EAEJ,MAAMM,MAAM,GAAGZ,SAAS,CAACQ,MAAM,EAAET,mBAAmB,EAAE,gBAAgB,CAAC;EACvE,MAAMc,IAAI,GAAG,MAAMD,MAAM,CAAC;IACxB,GAAIL,IAAY;IAChB,IAAIH,OAAO,GAAG;MAAEA;IAAO,CAAE,GAAG,EAAE,CAAC;IAC/BU,KAAK,EAAET,OAAO,GAAG;MAAEU,EAAE,EAAEV;IAAO,CAAE,GAAG;GACpC,CAAC;EAEF,OAAOQ,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}