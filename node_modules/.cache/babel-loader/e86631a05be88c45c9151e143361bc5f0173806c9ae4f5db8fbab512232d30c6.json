{"ast":null,"code":"'use client';\n\nimport { getGasPriceQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useChainId } from './useChainId.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useGasPrice */\nexport function useGasPrice(parameters = {}) {\n  const {\n    query = {}\n  } = parameters;\n  const config = useConfig(parameters);\n  const configChainId = useChainId({\n    config\n  });\n  const chainId = parameters.chainId ?? configChainId;\n  const options = getGasPriceQueryOptions(config, {\n    ...parameters,\n    chainId\n  });\n  return useQuery({\n    ...query,\n    ...options\n  });\n}","map":{"version":3,"names":["getGasPriceQueryOptions","useQuery","useChainId","useConfig","useGasPrice","parameters","query","config","configChainId","chainId","options"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useGasPrice.ts"],"sourcesContent":["'use client'\n\nimport type {\n  Config,\n  GetGasPriceErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type GetGasPriceData,\n  type GetGasPriceOptions,\n  type GetGasPriceQueryFnData,\n  type GetGasPriceQueryKey,\n  getGasPriceQueryOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseGasPriceParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetGasPriceData,\n> = Compute<\n  GetGasPriceOptions<config, chainId> &\n    ConfigParameter<config> &\n    QueryParameter<\n      GetGasPriceQueryFnData,\n      GetGasPriceErrorType,\n      selectData,\n      GetGasPriceQueryKey<config, chainId>\n    >\n>\n\nexport type UseGasPriceReturnType<selectData = GetGasPriceData> =\n  UseQueryReturnType<selectData, GetGasPriceErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useGasPrice */\nexport function useGasPrice<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetGasPriceData,\n>(\n  parameters: UseGasPriceParameters<config, chainId, selectData> = {},\n): UseGasPriceReturnType<selectData> {\n  const { query = {} } = parameters\n\n  const config = useConfig(parameters)\n  const configChainId = useChainId({ config })\n  const chainId = parameters.chainId ?? configChainId\n\n  const options = getGasPriceQueryOptions(config, {\n    ...parameters,\n    chainId,\n  })\n\n  return useQuery({ ...query, ...options })\n}\n"],"mappings":"AAAA,YAAY;;AAQZ,SAKEA,uBAAuB,QAClB,mBAAmB;AAG1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAqB1C;AACA,OAAM,SAAUC,WAAWA,CAMzBC,UAAA,GAAiE,EAAE;EAEnE,MAAM;IAAEC,KAAK,GAAG;EAAE,CAAE,GAAGD,UAAU;EAEjC,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EACpC,MAAMG,aAAa,GAAGN,UAAU,CAAC;IAAEK;EAAM,CAAE,CAAC;EAC5C,MAAME,OAAO,GAAGJ,UAAU,CAACI,OAAO,IAAID,aAAa;EAEnD,MAAME,OAAO,GAAGV,uBAAuB,CAACO,MAAM,EAAE;IAC9C,GAAGF,UAAU;IACbI;GACD,CAAC;EAEF,OAAOR,QAAQ,CAAC;IAAE,GAAGK,KAAK;IAAE,GAAGI;EAAO,CAAE,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}