{"ast":null,"code":"import * as AbiError from 'ox/AbiError';\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js';\nimport { getContractError } from '../../../utils/errors/getContractError.js';\nimport { FunctionSelectorNotRecognizedError } from '../errors.js';\nexport function getExecuteError(e, parameters) {\n  const error = e.walk(e => 'data' in e);\n  if (!error?.data) return e;\n  if (error.data === AbiError.getSelector(AbiError.from('error FnSelectorNotRecognized()'))) return new FunctionSelectorNotRecognizedError();\n  let matched = null;\n  for (const c of parameters.calls) {\n    const call = c;\n    if (!call.abi) continue;\n    try {\n      const matches = Boolean(decodeErrorResult({\n        abi: call.abi,\n        data: error.data\n      }));\n      if (!matches) continue;\n      matched = call;\n    } catch {}\n  }\n  if (matched) return getContractError(error, {\n    abi: matched.abi,\n    address: matched.to,\n    args: matched.args,\n    functionName: matched.functionName\n  });\n  return e;\n}","map":{"version":3,"names":["AbiError","decodeErrorResult","getContractError","FunctionSelectorNotRecognizedError","getExecuteError","e","parameters","error","walk","data","getSelector","from","matched","c","calls","call","abi","matches","Boolean","address","to","args","functionName"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/experimental/erc7821/utils/getExecuteError.ts"],"sourcesContent":["import type { Abi, Narrow } from 'abitype'\nimport * as AbiError from 'ox/AbiError'\n\nimport type { BaseError } from '../../../errors/base.js'\nimport type { Call, Calls } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../../utils/errors/getContractError.js'\nimport {\n  FunctionSelectorNotRecognizedError,\n  type FunctionSelectorNotRecognizedErrorType,\n} from '../errors.js'\n\nexport type GetExecuteErrorParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Calls to execute. */\n  calls: Calls<Narrow<calls>>\n}\n\nexport type GetExecuteErrorReturnType =\n  | FunctionSelectorNotRecognizedErrorType\n  | GetContractErrorReturnType\n\nexport function getExecuteError<const calls extends readonly unknown[]>(\n  e: BaseError,\n  parameters: GetExecuteErrorParameters<calls>,\n): GetExecuteErrorReturnType {\n  const error = e.walk((e) => 'data' in (e as Error)) as\n    | (BaseError & { data?: Hex | undefined })\n    | undefined\n\n  if (!error?.data) return e as never\n  if (\n    error.data ===\n    AbiError.getSelector(AbiError.from('error FnSelectorNotRecognized()'))\n  )\n    return new FunctionSelectorNotRecognizedError() as never\n\n  let matched: Call | null = null\n  for (const c of parameters.calls) {\n    const call = c as Call\n    if (!call.abi) continue\n    try {\n      const matches = Boolean(\n        decodeErrorResult({\n          abi: call.abi,\n          data: error.data!,\n        }),\n      )\n      if (!matches) continue\n      matched = call\n    } catch {}\n  }\n  if (matched)\n    return getContractError(error as BaseError, {\n      abi: matched.abi as Abi,\n      address: matched.to,\n      args: matched.args,\n      functionName: matched.functionName,\n    })\n\n  return e as never\n}\n"],"mappings":"AACA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAKvC,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAEEC,gBAAgB,QACX,2CAA2C;AAClD,SACEC,kCAAkC,QAE7B,cAAc;AAarB,OAAM,SAAUC,eAAeA,CAC7BC,CAAY,EACZC,UAA4C;EAE5C,MAAMC,KAAK,GAAGF,CAAC,CAACG,IAAI,CAAEH,CAAC,IAAK,MAAM,IAAKA,CAAW,CAErC;EAEb,IAAI,CAACE,KAAK,EAAEE,IAAI,EAAE,OAAOJ,CAAU;EACnC,IACEE,KAAK,CAACE,IAAI,KACVT,QAAQ,CAACU,WAAW,CAACV,QAAQ,CAACW,IAAI,CAAC,iCAAiC,CAAC,CAAC,EAEtE,OAAO,IAAIR,kCAAkC,EAAW;EAE1D,IAAIS,OAAO,GAAgB,IAAI;EAC/B,KAAK,MAAMC,CAAC,IAAIP,UAAU,CAACQ,KAAK,EAAE;IAChC,MAAMC,IAAI,GAAGF,CAAS;IACtB,IAAI,CAACE,IAAI,CAACC,GAAG,EAAE;IACf,IAAI;MACF,MAAMC,OAAO,GAAGC,OAAO,CACrBjB,iBAAiB,CAAC;QAChBe,GAAG,EAAED,IAAI,CAACC,GAAG;QACbP,IAAI,EAAEF,KAAK,CAACE;OACb,CAAC,CACH;MACD,IAAI,CAACQ,OAAO,EAAE;MACdL,OAAO,GAAGG,IAAI;IAChB,CAAC,CAAC,MAAM,CAAC;EACX;EACA,IAAIH,OAAO,EACT,OAAOV,gBAAgB,CAACK,KAAkB,EAAE;IAC1CS,GAAG,EAAEJ,OAAO,CAACI,GAAU;IACvBG,OAAO,EAAEP,OAAO,CAACQ,EAAE;IACnBC,IAAI,EAAET,OAAO,CAACS,IAAI;IAClBC,YAAY,EAAEV,OAAO,CAACU;GACvB,CAAC;EAEJ,OAAOjB,CAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}