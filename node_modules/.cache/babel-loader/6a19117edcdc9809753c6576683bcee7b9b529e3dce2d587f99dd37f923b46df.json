{"ast":null,"code":"import { multicall as viem_multicall } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\nexport async function multicall(config, parameters) {\n  const {\n    allowFailure = true,\n    chainId,\n    contracts,\n    ...rest\n  } = parameters;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_multicall, 'multicall');\n  return action({\n    allowFailure,\n    contracts,\n    ...rest\n  });\n}","map":{"version":3,"names":["multicall","viem_multicall","getAction","config","parameters","allowFailure","chainId","contracts","rest","client","getClient","action"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/multicall.ts"],"sourcesContent":["import type {\n  ContractFunctionParameters,\n  MulticallErrorType as viem_MulticallErrorType,\n  MulticallParameters as viem_MulticallParameters,\n  MulticallReturnType as viem_MulticallReturnType,\n} from 'viem'\nimport { multicall as viem_multicall } from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport { getAction } from '../utils/getAction.js'\n\nexport type MulticallParameters<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  config extends Config = Config,\n> = viem_MulticallParameters<contracts, allowFailure> & ChainIdParameter<config>\n\nexport type MulticallReturnType<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n> = viem_MulticallReturnType<contracts, allowFailure>\n\nexport type MulticallErrorType = viem_MulticallErrorType\n\nexport async function multicall<\n  config extends Config,\n  const contracts extends readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n>(\n  config: config,\n  parameters: MulticallParameters<contracts, allowFailure, config>,\n): Promise<MulticallReturnType<contracts, allowFailure>> {\n  const { allowFailure = true, chainId, contracts, ...rest } = parameters\n  const client = config.getClient({ chainId })\n  const action = getAction(client, viem_multicall, 'multicall')\n  return action({\n    allowFailure,\n    contracts,\n    ...rest,\n  }) as Promise<MulticallReturnType<contracts, allowFailure>>\n}\n"],"mappings":"AAMA,SAASA,SAAS,IAAIC,cAAc,QAAQ,cAAc;AAI1D,SAASC,SAAS,QAAQ,uBAAuB;AAejD,OAAO,eAAeF,SAASA,CAK7BG,MAAc,EACdC,UAAgE;EAEhE,MAAM;IAAEC,YAAY,GAAG,IAAI;IAAEC,OAAO;IAAEC,SAAS;IAAE,GAAGC;EAAI,CAAE,GAAGJ,UAAU;EACvE,MAAMK,MAAM,GAAGN,MAAM,CAACO,SAAS,CAAC;IAAEJ;EAAO,CAAE,CAAC;EAC5C,MAAMK,MAAM,GAAGT,SAAS,CAACO,MAAM,EAAER,cAAc,EAAE,WAAW,CAAC;EAC7D,OAAOU,MAAM,CAAC;IACZN,YAAY;IACZE,SAAS;IACT,GAAGC;GACJ,CAA0D;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}