{"ast":null,"code":"import { getTransaction as viem_getTransaction } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\n/** https://wagmi.sh/core/api/actions/getTransaction */\nexport function getTransaction(config, parameters) {\n  const {\n    chainId,\n    ...rest\n  } = parameters;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_getTransaction, 'getTransaction');\n  return action(rest);\n}","map":{"version":3,"names":["getTransaction","viem_getTransaction","getAction","config","parameters","chainId","rest","client","getClient","action"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/getTransaction.ts"],"sourcesContent":["import type { Chain } from 'viem'\nimport {\n  type GetTransactionErrorType as viem_GetTransactionErrorType,\n  type GetTransactionParameters as viem_GetTransactionParameters,\n  type GetTransactionReturnType as viem_GetTransactionReturnType,\n  getTransaction as viem_getTransaction,\n} from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Compute, IsNarrowable } from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\n\nexport type GetTransactionParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<viem_GetTransactionParameters & ChainIdParameter<config, chainId>>\n\nexport type GetTransactionReturnType<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = Compute<\n  {\n    [key in keyof chains]: viem_GetTransactionReturnType<\n      IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined\n    > & { chainId: chains[key]['id'] }\n  }[number]\n>\n\nexport type GetTransactionErrorType = viem_GetTransactionErrorType\n\n/** https://wagmi.sh/core/api/actions/getTransaction */\nexport function getTransaction<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: GetTransactionParameters<config, chainId>,\n): Promise<GetTransactionReturnType<config, chainId>> {\n  const { chainId, ...rest } = parameters\n  const client = config.getClient({ chainId })\n  const action = getAction(client, viem_getTransaction, 'getTransaction')\n  return action(rest) as unknown as Promise<\n    GetTransactionReturnType<config, chainId>\n  >\n}\n"],"mappings":"AACA,SAIEA,cAAc,IAAIC,mBAAmB,QAChC,cAAc;AAMrB,SAASC,SAAS,QAAQ,uBAAuB;AAwBjD;AACA,OAAM,SAAUF,cAAcA,CAI5BG,MAAc,EACdC,UAAqD;EAErD,MAAM;IAAEC,OAAO;IAAE,GAAGC;EAAI,CAAE,GAAGF,UAAU;EACvC,MAAMG,MAAM,GAAGJ,MAAM,CAACK,SAAS,CAAC;IAAEH;EAAO,CAAE,CAAC;EAC5C,MAAMI,MAAM,GAAGP,SAAS,CAACK,MAAM,EAAEN,mBAAmB,EAAE,gBAAgB,CAAC;EACvE,OAAOQ,MAAM,CAACH,IAAI,CAEjB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}