{"ast":null,"code":"'use client';\n\nimport { getTransactionCountQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useChainId } from './useChainId.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useTransactionCount */\nexport function useTransactionCount(parameters = {}) {\n  const {\n    address,\n    query = {}\n  } = parameters;\n  const config = useConfig(parameters);\n  const chainId = useChainId({\n    config\n  });\n  const options = getTransactionCountQueryOptions(config, {\n    ...parameters,\n    chainId: parameters.chainId ?? chainId\n  });\n  const enabled = Boolean(address && (query.enabled ?? true));\n  return useQuery({\n    ...query,\n    ...options,\n    enabled\n  });\n}","map":{"version":3,"names":["getTransactionCountQueryOptions","useQuery","useChainId","useConfig","useTransactionCount","parameters","address","query","config","chainId","options","enabled","Boolean"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useTransactionCount.ts"],"sourcesContent":["'use client'\n\nimport type {\n  Config,\n  GetTransactionCountErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport type { GetTransactionCountQueryFnData } from '@wagmi/core/query'\nimport {\n  type GetTransactionCountData,\n  type GetTransactionCountOptions,\n  type GetTransactionCountQueryKey,\n  getTransactionCountQueryOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseTransactionCountParameters<\n  config extends Config = Config,\n  selectData = GetTransactionCountData,\n> = Compute<\n  GetTransactionCountOptions<config> &\n    ConfigParameter<config> &\n    QueryParameter<\n      GetTransactionCountQueryFnData,\n      GetTransactionCountErrorType,\n      selectData,\n      GetTransactionCountQueryKey<config>\n    >\n>\n\nexport type UseTransactionCountReturnType<\n  selectData = GetTransactionCountData,\n> = UseQueryReturnType<selectData, GetTransactionCountErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useTransactionCount */\nexport function useTransactionCount<\n  config extends Config = ResolvedRegister['config'],\n  selectData = GetTransactionCountData,\n>(\n  parameters: UseTransactionCountParameters<config, selectData> = {},\n): UseTransactionCountReturnType<selectData> {\n  const { address, query = {} } = parameters\n\n  const config = useConfig(parameters)\n  const chainId = useChainId({ config })\n\n  const options = getTransactionCountQueryOptions(config, {\n    ...parameters,\n    chainId: parameters.chainId ?? chainId,\n  })\n  const enabled = Boolean(address && (query.enabled ?? true))\n\n  return useQuery({ ...query, ...options, enabled })\n}\n"],"mappings":"AAAA,YAAY;;AASZ,SAIEA,+BAA+B,QAC1B,mBAAmB;AAG1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAoB1C;AACA,OAAM,SAAUC,mBAAmBA,CAIjCC,UAAA,GAAgE,EAAE;EAElE,MAAM;IAAEC,OAAO;IAAEC,KAAK,GAAG;EAAE,CAAE,GAAGF,UAAU;EAE1C,MAAMG,MAAM,GAAGL,SAAS,CAACE,UAAU,CAAC;EACpC,MAAMI,OAAO,GAAGP,UAAU,CAAC;IAAEM;EAAM,CAAE,CAAC;EAEtC,MAAME,OAAO,GAAGV,+BAA+B,CAACQ,MAAM,EAAE;IACtD,GAAGH,UAAU;IACbI,OAAO,EAAEJ,UAAU,CAACI,OAAO,IAAIA;GAChC,CAAC;EACF,MAAME,OAAO,GAAGC,OAAO,CAACN,OAAO,KAAKC,KAAK,CAACI,OAAO,IAAI,IAAI,CAAC,CAAC;EAE3D,OAAOV,QAAQ,CAAC;IAAE,GAAGM,KAAK;IAAE,GAAGG,OAAO;IAAEC;EAAO,CAAE,CAAC;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}