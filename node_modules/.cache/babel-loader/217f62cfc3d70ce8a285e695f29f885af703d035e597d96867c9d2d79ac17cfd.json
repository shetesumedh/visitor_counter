{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toRlp = toRlp;\nexports.bytesToRlp = bytesToRlp;\nexports.hexToRlp = hexToRlp;\nconst base_js_1 = require(\"../../errors/base.js\");\nconst cursor_js_1 = require(\"../cursor.js\");\nconst toBytes_js_1 = require(\"./toBytes.js\");\nconst toHex_js_1 = require(\"./toHex.js\");\nfunction toRlp(bytes, to = 'hex') {\n  const encodable = getEncodable(bytes);\n  const cursor = (0, cursor_js_1.createCursor)(new Uint8Array(encodable.length));\n  encodable.encode(cursor);\n  if (to === 'hex') return (0, toHex_js_1.bytesToHex)(cursor.bytes);\n  return cursor.bytes;\n}\nfunction bytesToRlp(bytes, to = 'bytes') {\n  return toRlp(bytes, to);\n}\nfunction hexToRlp(hex, to = 'hex') {\n  return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n  if (Array.isArray(bytes)) return getEncodableList(bytes.map(x => getEncodable(x)));\n  return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n  const sizeOfBodyLength = getSizeOfLength(bodyLength);\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength;\n    return 1 + sizeOfBodyLength + bodyLength;\n  })();\n  return {\n    length,\n    encode(cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength);\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength);else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength);else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength);else cursor.pushUint32(bodyLength);\n      }\n      for (const {\n        encode\n      } of list) {\n        encode(cursor);\n      }\n    }\n  };\n}\nfunction getEncodableBytes(bytesOrHex) {\n  const bytes = typeof bytesOrHex === 'string' ? (0, toBytes_js_1.hexToBytes)(bytesOrHex) : bytesOrHex;\n  const sizeOfBytesLength = getSizeOfLength(bytes.length);\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1;\n    if (bytes.length <= 55) return 1 + bytes.length;\n    return 1 + sizeOfBytesLength + bytes.length;\n  })();\n  return {\n    length,\n    encode(cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes);\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length);\n        cursor.pushBytes(bytes);\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length);else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length);else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length);else cursor.pushUint32(bytes.length);\n        cursor.pushBytes(bytes);\n      }\n    }\n  };\n}\nfunction getSizeOfLength(length) {\n  if (length < 2 ** 8) return 1;\n  if (length < 2 ** 16) return 2;\n  if (length < 2 ** 24) return 3;\n  if (length < 2 ** 32) return 4;\n  throw new base_js_1.BaseError('Length is too large.');\n}","map":{"version":3,"names":["exports","toRlp","bytesToRlp","hexToRlp","base_js_1","require","cursor_js_1","toBytes_js_1","toHex_js_1","bytes","to","encodable","getEncodable","cursor","createCursor","Uint8Array","length","encode","bytesToHex","hex","Array","isArray","getEncodableList","map","x","getEncodableBytes","list","bodyLength","reduce","acc","sizeOfBodyLength","getSizeOfLength","pushByte","pushUint8","pushUint16","pushUint24","pushUint32","bytesOrHex","hexToBytes","sizeOfBytesLength","pushBytes","BaseError"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/encoding/toRlp.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}