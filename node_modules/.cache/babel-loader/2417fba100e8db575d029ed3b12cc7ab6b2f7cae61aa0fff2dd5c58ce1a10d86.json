{"ast":null,"code":"'use client';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { getBlockQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useChainId } from './useChainId.js';\nimport { useConfig } from './useConfig.js';\nimport { useWatchBlocks } from './useWatchBlocks.js';\n/** https://wagmi.sh/react/hooks/useBlock */\nexport function useBlock(parameters = {}) {\n  const {\n    query = {},\n    watch\n  } = parameters;\n  const config = useConfig(parameters);\n  const queryClient = useQueryClient();\n  const configChainId = useChainId({\n    config\n  });\n  const chainId = parameters.chainId ?? configChainId;\n  const options = getBlockQueryOptions(config, {\n    ...parameters,\n    chainId\n  });\n  const enabled = Boolean(query.enabled ?? true);\n  useWatchBlocks({\n    ...{\n      config: parameters.config,\n      chainId: parameters.chainId,\n      ...(typeof watch === 'object' ? watch : {})\n    },\n    enabled: Boolean(enabled && (typeof watch === 'object' ? watch.enabled : watch)),\n    onBlock(block) {\n      queryClient.setQueryData(options.queryKey, block);\n    }\n  });\n  return useQuery({\n    ...query,\n    ...options,\n    enabled\n  });\n}","map":{"version":3,"names":["useQueryClient","getBlockQueryOptions","useQuery","useChainId","useConfig","useWatchBlocks","useBlock","parameters","query","watch","config","queryClient","configChainId","chainId","options","enabled","Boolean","onBlock","block","setQueryData","queryKey"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useBlock.ts"],"sourcesContent":["'use client'\n\nimport { useQueryClient } from '@tanstack/react-query'\nimport type { Config, GetBlockErrorType, ResolvedRegister } from '@wagmi/core'\nimport type {\n  Compute,\n  UnionCompute,\n  UnionStrictOmit,\n} from '@wagmi/core/internal'\nimport {\n  type GetBlockData,\n  type GetBlockOptions,\n  type GetBlockQueryFnData,\n  type GetBlockQueryKey,\n  getBlockQueryOptions,\n} from '@wagmi/core/query'\nimport type { BlockTag } from 'viem'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\nimport {\n  type UseWatchBlocksParameters,\n  useWatchBlocks,\n} from './useWatchBlocks.js'\n\nexport type UseBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetBlockData<includeTransactions, blockTag, config, chainId>,\n> = Compute<\n  GetBlockOptions<includeTransactions, blockTag, config, chainId> &\n    ConfigParameter<config> &\n    QueryParameter<\n      GetBlockQueryFnData<includeTransactions, blockTag, config, chainId>,\n      GetBlockErrorType,\n      selectData,\n      GetBlockQueryKey<includeTransactions, blockTag, config, chainId>\n    > & {\n      watch?:\n        | boolean\n        | UnionCompute<\n            UnionStrictOmit<\n              UseWatchBlocksParameters<\n                includeTransactions,\n                blockTag,\n                config,\n                chainId\n              >,\n              'chainId' | 'config' | 'onBlock' | 'onError'\n            >\n          >\n        | undefined\n    }\n>\n\nexport type UseBlockReturnType<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetBlockData<includeTransactions, blockTag, config, chainId>,\n> = UseQueryReturnType<selectData, GetBlockErrorType>\n\n/** https://wagmi.sh/react/hooks/useBlock */\nexport function useBlock<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetBlockData<includeTransactions, blockTag, config, chainId>,\n>(\n  parameters: UseBlockParameters<\n    includeTransactions,\n    blockTag,\n    config,\n    chainId,\n    selectData\n  > = {},\n): UseBlockReturnType<\n  includeTransactions,\n  blockTag,\n  config,\n  chainId,\n  selectData\n> {\n  const { query = {}, watch } = parameters\n\n  const config = useConfig(parameters)\n  const queryClient = useQueryClient()\n  const configChainId = useChainId({ config })\n  const chainId = parameters.chainId ?? configChainId\n\n  const options = getBlockQueryOptions(config, {\n    ...parameters,\n    chainId,\n  })\n  const enabled = Boolean(query.enabled ?? true)\n\n  useWatchBlocks({\n    ...({\n      config: parameters.config,\n      chainId: parameters.chainId!,\n      ...(typeof watch === 'object' ? watch : {}),\n    } as UseWatchBlocksParameters),\n    enabled: Boolean(\n      enabled && (typeof watch === 'object' ? watch.enabled : watch),\n    ),\n    onBlock(block) {\n      queryClient.setQueryData(options.queryKey, block)\n    },\n  })\n\n  return useQuery({\n    ...(query as any),\n    ...options,\n    enabled,\n  }) as UseBlockReturnType<\n    includeTransactions,\n    blockTag,\n    config,\n    chainId,\n    selectData\n  >\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,cAAc,QAAQ,uBAAuB;AAOtD,SAKEC,oBAAoB,QACf,mBAAmB;AAI1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAEEC,cAAc,QACT,qBAAqB;AA4C5B;AACA,OAAM,SAAUC,QAAQA,CAQtBC,UAAA,GAMI,EAAE;EAQN,MAAM;IAAEC,KAAK,GAAG,EAAE;IAAEC;EAAK,CAAE,GAAGF,UAAU;EAExC,MAAMG,MAAM,GAAGN,SAAS,CAACG,UAAU,CAAC;EACpC,MAAMI,WAAW,GAAGX,cAAc,EAAE;EACpC,MAAMY,aAAa,GAAGT,UAAU,CAAC;IAAEO;EAAM,CAAE,CAAC;EAC5C,MAAMG,OAAO,GAAGN,UAAU,CAACM,OAAO,IAAID,aAAa;EAEnD,MAAME,OAAO,GAAGb,oBAAoB,CAACS,MAAM,EAAE;IAC3C,GAAGH,UAAU;IACbM;GACD,CAAC;EACF,MAAME,OAAO,GAAGC,OAAO,CAACR,KAAK,CAACO,OAAO,IAAI,IAAI,CAAC;EAE9CV,cAAc,CAAC;IACb,GAAI;MACFK,MAAM,EAAEH,UAAU,CAACG,MAAM;MACzBG,OAAO,EAAEN,UAAU,CAACM,OAAQ;MAC5B,IAAI,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAE;KACd;IAC9BM,OAAO,EAAEC,OAAO,CACdD,OAAO,KAAK,OAAON,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACM,OAAO,GAAGN,KAAK,CAAC,CAC/D;IACDQ,OAAOA,CAACC,KAAK;MACXP,WAAW,CAACQ,YAAY,CAACL,OAAO,CAACM,QAAQ,EAAEF,KAAK,CAAC;IACnD;GACD,CAAC;EAEF,OAAOhB,QAAQ,CAAC;IACd,GAAIM,KAAa;IACjB,GAAGM,OAAO;IACVC;GACD,CAMA;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}