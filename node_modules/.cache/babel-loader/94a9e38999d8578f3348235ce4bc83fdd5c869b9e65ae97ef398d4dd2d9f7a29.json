{"ast":null,"code":"'use client';\n\nimport { getChains } from '@wagmi/core';\nimport { watchChains } from '@wagmi/core/internal';\nimport { useSyncExternalStore } from 'react';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useChains */\nexport function useChains(parameters = {}) {\n  const config = useConfig(parameters);\n  return useSyncExternalStore(onChange => watchChains(config, {\n    onChange\n  }), () => getChains(config), () => getChains(config));\n}","map":{"version":3,"names":["getChains","watchChains","useSyncExternalStore","useConfig","useChains","parameters","config","onChange"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/wagmi/src/hooks/useChains.ts"],"sourcesContent":["'use client'\n\nimport {\n  type Config,\n  type GetChainsReturnType,\n  type ResolvedRegister,\n  getChains,\n} from '@wagmi/core'\nimport { watchChains } from '@wagmi/core/internal'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseChainsParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseChainsReturnType<config extends Config = Config> =\n  GetChainsReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useChains */\nexport function useChains<config extends Config = ResolvedRegister['config']>(\n  parameters: UseChainsParameters<config> = {},\n): UseChainsReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchChains(config, { onChange }),\n    () => getChains(config),\n    () => getChains(config),\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAIEA,SAAS,QACJ,aAAa;AACpB,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,oBAAoB,QAAQ,OAAO;AAG5C,SAASC,SAAS,QAAQ,gBAAgB;AAQ1C;AACA,OAAM,SAAUC,SAASA,CACvBC,UAAA,GAA0C,EAAE;EAE5C,MAAMC,MAAM,GAAGH,SAAS,CAACE,UAAU,CAAC;EAEpC,OAAOH,oBAAoB,CACxBK,QAAQ,IAAKN,WAAW,CAACK,MAAM,EAAE;IAAEC;EAAQ,CAAE,CAAC,EAC/C,MAAMP,SAAS,CAACM,MAAM,CAAC,EACvB,MAAMN,SAAS,CAACM,MAAM,CAAC,CACxB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}