{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAddressEqual = isAddressEqual;\nconst address_js_1 = require(\"../../errors/address.js\");\nconst isAddress_js_1 = require(\"./isAddress.js\");\nfunction isAddressEqual(a, b) {\n  if (!(0, isAddress_js_1.isAddress)(a, {\n    strict: false\n  })) throw new address_js_1.InvalidAddressError({\n    address: a\n  });\n  if (!(0, isAddress_js_1.isAddress)(b, {\n    strict: false\n  })) throw new address_js_1.InvalidAddressError({\n    address: b\n  });\n  return a.toLowerCase() === b.toLowerCase();\n}","map":{"version":3,"names":["exports","isAddressEqual","address_js_1","require","isAddress_js_1","a","b","isAddress","strict","InvalidAddressError","address","toLowerCase"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/address/isAddressEqual.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a, { strict: false }))\n    throw new InvalidAddressError({ address: a })\n  if (!isAddress(b, { strict: false }))\n    throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n"],"mappings":";;;;;AAYAA,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAVA,MAAAC,YAAA,GAAAC,OAAA;AAKA,MAAAC,cAAA,GAAAD,OAAA;AAKA,SAAgBF,cAAcA,CAACI,CAAU,EAAEC,CAAU;EACnD,IAAI,CAAC,IAAAF,cAAA,CAAAG,SAAS,EAACF,CAAC,EAAE;IAAEG,MAAM,EAAE;EAAK,CAAE,CAAC,EAClC,MAAM,IAAIN,YAAA,CAAAO,mBAAmB,CAAC;IAAEC,OAAO,EAAEL;EAAC,CAAE,CAAC;EAC/C,IAAI,CAAC,IAAAD,cAAA,CAAAG,SAAS,EAACD,CAAC,EAAE;IAAEE,MAAM,EAAE;EAAK,CAAE,CAAC,EAClC,MAAM,IAAIN,YAAA,CAAAO,mBAAmB,CAAC;IAAEC,OAAO,EAAEJ;EAAC,CAAE,CAAC;EAC/C,OAAOD,CAAC,CAACM,WAAW,EAAE,KAAKL,CAAC,CAACK,WAAW,EAAE;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}