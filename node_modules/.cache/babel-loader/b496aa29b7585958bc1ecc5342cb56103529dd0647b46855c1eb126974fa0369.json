{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.size = size;\nconst isHex_js_1 = require(\"./isHex.js\");\nfunction size(value) {\n  if ((0, isHex_js_1.isHex)(value, {\n    strict: false\n  })) return Math.ceil((value.length - 2) / 2);\n  return value.length;\n}","map":{"version":3,"names":["exports","size","isHex_js_1","require","value","isHex","strict","Math","ceil","length"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/data/size.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n"],"mappings":";;;;;AAaAA,OAAA,CAAAC,IAAA,GAAAA,IAAA;AAVA,MAAAC,UAAA,GAAAC,OAAA;AAUA,SAAgBF,IAAIA,CAACG,KAAsB;EACzC,IAAI,IAAAF,UAAA,CAAAG,KAAK,EAACD,KAAK,EAAE;IAAEE,MAAM,EAAE;EAAK,CAAE,CAAC,EAAE,OAAOC,IAAI,CAACC,IAAI,CAAC,CAACJ,KAAK,CAACK,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;EAC7E,OAAOL,KAAK,CAACK,MAAM;AACrB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}