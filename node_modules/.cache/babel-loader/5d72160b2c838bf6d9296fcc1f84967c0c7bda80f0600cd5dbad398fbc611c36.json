{"ast":null,"code":"'use client';\n\nimport { waitForCallsStatusQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useWaitForCallsStatus */\nexport function useWaitForCallsStatus(parameters) {\n  const {\n    id,\n    query = {}\n  } = parameters;\n  const config = useConfig(parameters);\n  const options = waitForCallsStatusQueryOptions(config, parameters);\n  const enabled = Boolean(id && (query.enabled ?? true));\n  return useQuery({\n    ...query,\n    ...options,\n    enabled\n  });\n}","map":{"version":3,"names":["waitForCallsStatusQueryOptions","useQuery","useConfig","useWaitForCallsStatus","parameters","id","query","config","options","enabled","Boolean"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/wagmi/src/hooks/useWaitForCallsStatus.ts"],"sourcesContent":["'use client'\n\nimport type {\n  Config,\n  ResolvedRegister,\n  WaitForCallsStatusErrorType,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type WaitForCallsStatusData,\n  type WaitForCallsStatusOptions,\n  type WaitForCallsStatusQueryFnData,\n  type WaitForCallsStatusQueryKey,\n  waitForCallsStatusQueryOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseWaitForCallsStatusParameters<\n  config extends Config = Config,\n  selectData = WaitForCallsStatusData,\n> = Compute<\n  WaitForCallsStatusOptions &\n    ConfigParameter<config> &\n    QueryParameter<\n      WaitForCallsStatusQueryFnData,\n      WaitForCallsStatusErrorType,\n      selectData,\n      WaitForCallsStatusQueryKey\n    >\n>\n\nexport type UseWaitForCallsStatusReturnType<\n  selectData = WaitForCallsStatusData,\n> = UseQueryReturnType<selectData, WaitForCallsStatusErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useWaitForCallsStatus */\nexport function useWaitForCallsStatus<\n  config extends Config = ResolvedRegister['config'],\n  selectData = WaitForCallsStatusData,\n>(\n  parameters: UseWaitForCallsStatusParameters<config, selectData>,\n): UseWaitForCallsStatusReturnType<selectData> {\n  const { id, query = {} } = parameters\n\n  const config = useConfig(parameters)\n\n  const options = waitForCallsStatusQueryOptions(config, parameters)\n  const enabled = Boolean(id && (query.enabled ?? true))\n\n  return useQuery({ ...query, ...options, enabled })\n}\n"],"mappings":"AAAA,YAAY;;AAQZ,SAKEA,8BAA8B,QACzB,mBAAmB;AAG1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,SAAS,QAAQ,gBAAgB;AAoB1C;AACA,OAAM,SAAUC,qBAAqBA,CAInCC,UAA+D;EAE/D,MAAM;IAAEC,EAAE;IAAEC,KAAK,GAAG;EAAE,CAAE,GAAGF,UAAU;EAErC,MAAMG,MAAM,GAAGL,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMI,OAAO,GAAGR,8BAA8B,CAACO,MAAM,EAAEH,UAAU,CAAC;EAClE,MAAMK,OAAO,GAAGC,OAAO,CAACL,EAAE,KAAKC,KAAK,CAACG,OAAO,IAAI,IAAI,CAAC,CAAC;EAEtD,OAAOR,QAAQ,CAAC;IAAE,GAAGK,KAAK;IAAE,GAAGE,OAAO;IAAEC;EAAO,CAAE,CAAC;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}