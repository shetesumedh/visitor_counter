{"ast":null,"code":"// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nimport { WALLETLINK_URL } from '../../core/constants.js';\nimport { standardErrors } from '../../core/error/errors.js';\nimport { ScopedLocalStorage } from '../../core/storage/ScopedLocalStorage.js';\nimport { logHandshakeCompleted, logHandshakeError, logHandshakeStarted, logRequestCompleted, logRequestError, logRequestStarted } from '../../core/telemetry/events/walletlink-signer.js';\nimport { parseErrorMessageFromAny } from '../../core/telemetry/utils.js';\nimport { encodeToHexString, ensureAddressString, ensureBigInt, ensureBuffer, ensureIntNumber, ensureParsedJSONObject, hexStringFromBuffer, hexStringFromNumber } from '../../core/type/util.js';\nimport { correlationIds } from '../../store/correlation-ids/store.js';\nimport { fetchRPCRequest } from '../../util/provider.js';\nimport eip712 from '../../vendor-js/eth-eip712-util/index.cjs';\nimport { WalletLinkRelay } from './relay/WalletLinkRelay.js';\nimport { LOCAL_STORAGE_ADDRESSES_KEY } from './relay/constants.js';\nimport { isErrorResponse } from './relay/type/Web3Response.js';\nconst DEFAULT_CHAIN_ID_KEY = 'DefaultChainId';\nconst DEFAULT_JSON_RPC_URL = 'DefaultJsonRpcUrl';\n// original source: https://github.com/coinbase/coinbase-wallet-sdk/blob/v3.7.1/packages/wallet-sdk/src/provider/CoinbaseWalletProvider.ts\nexport class WalletLinkSigner {\n  constructor(options) {\n    this._relay = null;\n    this._addresses = [];\n    this.metadata = options.metadata;\n    this._storage = new ScopedLocalStorage('walletlink', WALLETLINK_URL);\n    this.callback = options.callback || null;\n    const cachedAddresses = this._storage.getItem(LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(' ');\n      if (addresses[0] !== '') {\n        this._addresses = addresses.map(address => ensureAddressString(address));\n      }\n    }\n    this.initializeRelay();\n  }\n  getSession() {\n    const relay = this.initializeRelay();\n    const {\n      id,\n      secret\n    } = relay.getWalletLinkSession();\n    return {\n      id,\n      secret\n    };\n  }\n  async handshake(args) {\n    // only eth_requestAccounts is supported for handshake in WalletLink\n    const method = 'eth_requestAccounts';\n    const correlationId = correlationIds.get(args);\n    logHandshakeStarted({\n      method,\n      correlationId\n    });\n    try {\n      await this._eth_requestAccounts();\n      logHandshakeCompleted({\n        method,\n        correlationId\n      });\n    } catch (error) {\n      logHandshakeError({\n        method,\n        correlationId,\n        errorMessage: parseErrorMessageFromAny(error)\n      });\n      throw error;\n    }\n  }\n  get selectedAddress() {\n    return this._addresses[0] || undefined;\n  }\n  get jsonRpcUrl() {\n    var _a;\n    return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : undefined;\n  }\n  set jsonRpcUrl(value) {\n    this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n  }\n  updateProviderInfo(jsonRpcUrl, chainId) {\n    var _a;\n    this.jsonRpcUrl = jsonRpcUrl;\n    // emit chainChanged event if necessary\n    const originalChainId = this.getChainId();\n    this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n    const chainChanged = ensureIntNumber(chainId) !== originalChainId;\n    if (chainChanged) {\n      (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'chainChanged', hexStringFromNumber(chainId));\n    }\n  }\n  async watchAsset(params) {\n    const request = Array.isArray(params) ? params[0] : params;\n    if (!request.type) {\n      throw standardErrors.rpc.invalidParams('Type is required');\n    }\n    if ((request === null || request === void 0 ? void 0 : request.type) !== 'ERC20') {\n      throw standardErrors.rpc.invalidParams(`Asset of type '${request.type}' is not supported`);\n    }\n    if (!(request === null || request === void 0 ? void 0 : request.options)) {\n      throw standardErrors.rpc.invalidParams('Options are required');\n    }\n    if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n      throw standardErrors.rpc.invalidParams('Address is required');\n    }\n    const chainId = this.getChainId();\n    const {\n      address,\n      symbol,\n      image,\n      decimals\n    } = request.options;\n    const relay = this.initializeRelay();\n    const result = await relay.watchAsset(request.type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString());\n    if (isErrorResponse(result)) return false;\n    return !!result.result;\n  }\n  async addEthereumChain(params) {\n    var _a, _b;\n    const request = params[0];\n    if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      throw standardErrors.rpc.invalidParams('please pass in at least 1 rpcUrl');\n    }\n    if (!request.chainName || request.chainName.trim() === '') {\n      throw standardErrors.rpc.invalidParams('chainName is a required field');\n    }\n    if (!request.nativeCurrency) {\n      throw standardErrors.rpc.invalidParams('nativeCurrency is a required field');\n    }\n    const chainIdNumber = Number.parseInt(request.chainId, 16);\n    if (chainIdNumber === this.getChainId()) {\n      return false;\n    }\n    const relay = this.initializeRelay();\n    const {\n      rpcUrls = [],\n      blockExplorerUrls = [],\n      chainName,\n      iconUrls = [],\n      nativeCurrency\n    } = request;\n    const res = await relay.addEthereumChain(chainIdNumber.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency);\n    if (isErrorResponse(res)) return false;\n    if (((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true) {\n      this.updateProviderInfo(rpcUrls[0], chainIdNumber);\n      return null;\n    }\n    throw standardErrors.rpc.internal('unable to add ethereum chain');\n  }\n  async switchEthereumChain(params) {\n    const request = params[0];\n    const chainId = Number.parseInt(request.chainId, 16);\n    const relay = this.initializeRelay();\n    const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined);\n    if (isErrorResponse(res)) throw res;\n    const switchResponse = res.result;\n    if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n      this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n    }\n    return null;\n  }\n  async cleanup() {\n    this.callback = null;\n    if (this._relay) {\n      this._relay.resetAndReload();\n    }\n    this._storage.clear();\n  }\n  _setAddresses(addresses, _) {\n    var _a;\n    if (!Array.isArray(addresses)) {\n      throw new Error('addresses is not an array');\n    }\n    const newAddresses = addresses.map(address => ensureAddressString(address));\n    if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n      return;\n    }\n    this._addresses = newAddresses;\n    (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'accountsChanged', newAddresses);\n    this._storage.setItem(LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(' '));\n  }\n  async request(request) {\n    const correlationId = correlationIds.get(request);\n    logRequestStarted({\n      method: request.method,\n      correlationId\n    });\n    try {\n      const result = await this._request(request);\n      logRequestCompleted({\n        method: request.method,\n        correlationId\n      });\n      return result;\n    } catch (error) {\n      logRequestError({\n        method: request.method,\n        correlationId,\n        errorMessage: parseErrorMessageFromAny(error)\n      });\n      throw error;\n    }\n  }\n  async _request(request) {\n    const params = request.params || [];\n    switch (request.method) {\n      case 'eth_accounts':\n        return [...this._addresses];\n      case 'eth_coinbase':\n        return this.selectedAddress || null;\n      case 'net_version':\n        return this.getChainId().toString(10);\n      case 'eth_chainId':\n        return hexStringFromNumber(this.getChainId());\n      case 'eth_requestAccounts':\n        return this._eth_requestAccounts();\n      case 'eth_ecRecover':\n      case 'personal_ecRecover':\n        return this.ecRecover(request);\n      case 'personal_sign':\n        return this.personalSign(request);\n      case 'eth_signTransaction':\n        return this._eth_signTransaction(params);\n      case 'eth_sendRawTransaction':\n        return this._eth_sendRawTransaction(params);\n      case 'eth_sendTransaction':\n        return this._eth_sendTransaction(params);\n      case 'eth_signTypedData_v1':\n      case 'eth_signTypedData_v3':\n      case 'eth_signTypedData_v4':\n      case 'eth_signTypedData':\n        return this.signTypedData(request);\n      case 'wallet_addEthereumChain':\n        return this.addEthereumChain(params);\n      case 'wallet_switchEthereumChain':\n        return this.switchEthereumChain(params);\n      case 'wallet_watchAsset':\n        return this.watchAsset(params);\n      default:\n        if (!this.jsonRpcUrl) throw standardErrors.rpc.internal('No RPC URL set for chain');\n        return fetchRPCRequest(request, this.jsonRpcUrl);\n    }\n  }\n  _ensureKnownAddress(addressString) {\n    const addressStr = ensureAddressString(addressString);\n    const lowercaseAddresses = this._addresses.map(address => ensureAddressString(address));\n    if (!lowercaseAddresses.includes(addressStr)) {\n      throw new Error('Unknown Ethereum address');\n    }\n  }\n  _prepareTransactionParams(tx) {\n    const fromAddress = tx.from ? ensureAddressString(tx.from) : this.selectedAddress;\n    if (!fromAddress) {\n      throw new Error('Ethereum address is unavailable');\n    }\n    this._ensureKnownAddress(fromAddress);\n    const toAddress = tx.to ? ensureAddressString(tx.to) : null;\n    const weiValue = tx.value != null ? ensureBigInt(tx.value) : BigInt(0);\n    const data = tx.data ? ensureBuffer(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? ensureIntNumber(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? ensureBigInt(tx.gasPrice) : null;\n    const maxFeePerGas = tx.maxFeePerGas != null ? ensureBigInt(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? ensureBigInt(tx.maxPriorityFeePerGas) : null;\n    const gasLimit = tx.gas != null ? ensureBigInt(tx.gas) : null;\n    const chainId = tx.chainId ? ensureIntNumber(tx.chainId) : this.getChainId();\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId\n    };\n  }\n  async ecRecover(request) {\n    const {\n      method,\n      params\n    } = request;\n    if (!Array.isArray(params)) throw standardErrors.rpc.invalidParams();\n    const relay = this.initializeRelay();\n    const res = await relay.sendRequest({\n      method: 'ethereumAddressFromSignedMessage',\n      params: {\n        message: encodeToHexString(params[0]),\n        signature: encodeToHexString(params[1]),\n        addPrefix: method === 'personal_ecRecover'\n      }\n    });\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  getChainId() {\n    var _a;\n    return Number.parseInt((_a = this._storage.getItem(DEFAULT_CHAIN_ID_KEY)) !== null && _a !== void 0 ? _a : '1', 10);\n  }\n  async _eth_requestAccounts() {\n    var _a, _b;\n    if (this._addresses.length > 0) {\n      (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'connect', {\n        chainId: hexStringFromNumber(this.getChainId())\n      });\n      return this._addresses;\n    }\n    const relay = this.initializeRelay();\n    const res = await relay.requestEthereumAccounts();\n    if (isErrorResponse(res)) throw res;\n    if (!res.result) {\n      throw new Error('accounts received is empty');\n    }\n    this._setAddresses(res.result);\n    (_b = this.callback) === null || _b === void 0 ? void 0 : _b.call(this, 'connect', {\n      chainId: hexStringFromNumber(this.getChainId())\n    });\n    return this._addresses;\n  }\n  async personalSign({\n    params\n  }) {\n    if (!Array.isArray(params)) throw standardErrors.rpc.invalidParams();\n    const address = params[1];\n    const rawData = params[0];\n    this._ensureKnownAddress(address);\n    const relay = this.initializeRelay();\n    const res = await relay.sendRequest({\n      method: 'signEthereumMessage',\n      params: {\n        address: ensureAddressString(address),\n        message: encodeToHexString(rawData),\n        addPrefix: true,\n        typedDataJson: null\n      }\n    });\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  async _eth_signTransaction(params) {\n    const tx = this._prepareTransactionParams(params[0] || {});\n    const relay = this.initializeRelay();\n    const res = await relay.signEthereumTransaction(tx);\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  async _eth_sendRawTransaction(params) {\n    const signedTransaction = ensureBuffer(params[0]);\n    const relay = this.initializeRelay();\n    const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId());\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  async _eth_sendTransaction(params) {\n    const tx = this._prepareTransactionParams(params[0] || {});\n    const relay = this.initializeRelay();\n    const res = await relay.signAndSubmitEthereumTransaction(tx);\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  async signTypedData(request) {\n    const {\n      method,\n      params\n    } = request;\n    if (!Array.isArray(params)) throw standardErrors.rpc.invalidParams();\n    const encode = input => {\n      const hashFuncMap = {\n        eth_signTypedData_v1: eip712.hashForSignTypedDataLegacy,\n        eth_signTypedData_v3: eip712.hashForSignTypedData_v3,\n        eth_signTypedData_v4: eip712.hashForSignTypedData_v4,\n        eth_signTypedData: eip712.hashForSignTypedData_v4\n      };\n      return hexStringFromBuffer(hashFuncMap[method]({\n        data: ensureParsedJSONObject(input)\n      }), true);\n    };\n    const address = params[method === 'eth_signTypedData_v1' ? 1 : 0];\n    const rawData = params[method === 'eth_signTypedData_v1' ? 0 : 1];\n    this._ensureKnownAddress(address);\n    const relay = this.initializeRelay();\n    const res = await relay.sendRequest({\n      method: 'signEthereumMessage',\n      params: {\n        address: ensureAddressString(address),\n        message: encode(rawData),\n        typedDataJson: JSON.stringify(rawData, null, 2),\n        addPrefix: false\n      }\n    });\n    if (isErrorResponse(res)) throw res;\n    return res.result;\n  }\n  initializeRelay() {\n    if (!this._relay) {\n      this._relay = new WalletLinkRelay({\n        linkAPIUrl: WALLETLINK_URL,\n        storage: this._storage,\n        metadata: this.metadata,\n        accountsCallback: this._setAddresses.bind(this),\n        chainCallback: this.updateProviderInfo.bind(this)\n      });\n    }\n    return this._relay;\n  }\n}","map":{"version":3,"names":["WALLETLINK_URL","standardErrors","ScopedLocalStorage","logHandshakeCompleted","logHandshakeError","logHandshakeStarted","logRequestCompleted","logRequestError","logRequestStarted","parseErrorMessageFromAny","encodeToHexString","ensureAddressString","ensureBigInt","ensureBuffer","ensureIntNumber","ensureParsedJSONObject","hexStringFromBuffer","hexStringFromNumber","correlationIds","fetchRPCRequest","eip712","WalletLinkRelay","LOCAL_STORAGE_ADDRESSES_KEY","isErrorResponse","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","WalletLinkSigner","constructor","options","_relay","_addresses","metadata","_storage","callback","cachedAddresses","getItem","addresses","split","map","address","initializeRelay","getSession","relay","id","secret","getWalletLinkSession","handshake","args","method","correlationId","get","_eth_requestAccounts","error","errorMessage","selectedAddress","undefined","jsonRpcUrl","_a","value","setItem","updateProviderInfo","chainId","originalChainId","getChainId","toString","chainChanged","call","watchAsset","params","request","Array","isArray","type","rpc","invalidParams","symbol","image","decimals","result","addEthereumChain","rpcUrls","length","chainName","trim","nativeCurrency","chainIdNumber","Number","parseInt","blockExplorerUrls","iconUrls","res","_b","isApproved","internal","switchEthereumChain","switchResponse","rpcUrl","cleanup","resetAndReload","clear","_setAddresses","_","Error","newAddresses","JSON","stringify","join","_request","ecRecover","personalSign","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","signTypedData","_ensureKnownAddress","addressString","addressStr","lowercaseAddresses","includes","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","BigInt","data","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","sendRequest","message","signature","addPrefix","requestEthereumAccounts","rawData","typedDataJson","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","encode","input","hashFuncMap","eth_signTypedData_v1","hashForSignTypedDataLegacy","eth_signTypedData_v3","hashForSignTypedData_v3","eth_signTypedData_v4","hashForSignTypedData_v4","eth_signTypedData","linkAPIUrl","storage","accountsCallback","bind","chainCallback"],"sources":["../../../src/sign/walletlink/WalletLinkSigner.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}