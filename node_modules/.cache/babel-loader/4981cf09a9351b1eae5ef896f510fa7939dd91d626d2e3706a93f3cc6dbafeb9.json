{"ast":null,"code":"'use client';\n\nimport { deepEqual } from '@wagmi/core/internal';\nimport { useMemo, useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\nconst isPlainObject = obj => typeof obj === 'object' && !Array.isArray(obj);\nexport function useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = deepEqual) {\n  const trackedKeys = useRef([]);\n  const result = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject(a) && isPlainObject(b) && trackedKeys.current.length) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n      return true;\n    }\n    return isEqual(a, b);\n  });\n  return useMemo(() => {\n    if (isPlainObject(result)) {\n      const trackedResult = {\n        ...result\n      };\n      let properties = {};\n      for (const [key, value] of Object.entries(trackedResult)) {\n        properties = {\n          ...properties,\n          [key]: {\n            configurable: false,\n            enumerable: true,\n            get: () => {\n              if (!trackedKeys.current.includes(key)) {\n                trackedKeys.current.push(key);\n              }\n              return value;\n            }\n          }\n        };\n      }\n      Object.defineProperties(trackedResult, properties);\n      return trackedResult;\n    }\n    return result;\n  }, [result]);\n}","map":{"version":3,"names":["deepEqual","useMemo","useRef","useSyncExternalStoreWithSelector","isPlainObject","obj","Array","isArray","useSyncExternalStoreWithTracked","subscribe","getSnapshot","getServerSnapshot","isEqual","trackedKeys","result","x","a","b","current","length","key","equal","trackedResult","properties","value","Object","entries","configurable","enumerable","get","includes","push","defineProperties"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/wagmi/src/hooks/useSyncExternalStoreWithTracked.ts"],"sourcesContent":["'use client'\n\nimport { deepEqual } from '@wagmi/core/internal'\nimport { useMemo, useRef } from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js'\n\nconst isPlainObject = (obj: unknown) =>\n  typeof obj === 'object' && !Array.isArray(obj)\n\nexport function useSyncExternalStoreWithTracked<\n  snapshot extends selection,\n  selection = snapshot,\n>(\n  subscribe: (onStoreChange: () => void) => () => void,\n  getSnapshot: () => snapshot,\n  getServerSnapshot: undefined | null | (() => snapshot) = getSnapshot,\n  isEqual: (a: selection, b: selection) => boolean = deepEqual,\n) {\n  const trackedKeys = useRef<string[]>([])\n  const result = useSyncExternalStoreWithSelector(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject(a) && isPlainObject(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            (a as { [_a: string]: any })[key],\n            (b as { [_b: string]: any })[key],\n          )\n          if (!equal) return false\n        }\n        return true\n      }\n      return isEqual(a, b)\n    },\n  )\n\n  return useMemo(() => {\n    if (isPlainObject(result)) {\n      const trackedResult = { ...result }\n      let properties = {}\n      for (const [key, value] of Object.entries(\n        trackedResult as { [key: string]: any },\n      )) {\n        properties = {\n          ...properties,\n          [key]: {\n            configurable: false,\n            enumerable: true,\n            get: () => {\n              if (!trackedKeys.current.includes(key)) {\n                trackedKeys.current.push(key)\n              }\n              return value\n            },\n          },\n        }\n      }\n      Object.defineProperties(trackedResult, properties)\n      return trackedResult\n    }\n\n    return result\n  }, [result])\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAASC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,SAASC,gCAAgC,QAAQ,+CAA+C;AAEhG,MAAMC,aAAa,GAAIC,GAAY,IACjC,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;AAEhD,OAAM,SAAUG,+BAA+BA,CAI7CC,SAAoD,EACpDC,WAA2B,EAC3BC,iBAAA,GAAyDD,WAAW,EACpEE,OAAA,GAAmDZ,SAAS;EAE5D,MAAMa,WAAW,GAAGX,MAAM,CAAW,EAAE,CAAC;EACxC,MAAMY,MAAM,GAAGX,gCAAgC,CAC7CM,SAAS,EACTC,WAAW,EACXC,iBAAiB,EAChBI,CAAC,IAAKA,CAAC,EACR,CAACC,CAAC,EAAEC,CAAC,KAAI;IACP,IAAIb,aAAa,CAACY,CAAC,CAAC,IAAIZ,aAAa,CAACa,CAAC,CAAC,IAAIJ,WAAW,CAACK,OAAO,CAACC,MAAM,EAAE;MACtE,KAAK,MAAMC,GAAG,IAAIP,WAAW,CAACK,OAAO,EAAE;QACrC,MAAMG,KAAK,GAAGT,OAAO,CAClBI,CAA2B,CAACI,GAAG,CAAC,EAChCH,CAA2B,CAACG,GAAG,CAAC,CAClC;QACD,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;MAC1B;MACA,OAAO,IAAI;IACb;IACA,OAAOT,OAAO,CAACI,CAAC,EAAEC,CAAC,CAAC;EACtB,CAAC,CACF;EAED,OAAOhB,OAAO,CAAC,MAAK;IAClB,IAAIG,aAAa,CAACU,MAAM,CAAC,EAAE;MACzB,MAAMQ,aAAa,GAAG;QAAE,GAAGR;MAAM,CAAE;MACnC,IAAIS,UAAU,GAAG,EAAE;MACnB,KAAK,MAAM,CAACH,GAAG,EAAEI,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CACvCJ,aAAuC,CACxC,EAAE;QACDC,UAAU,GAAG;UACX,GAAGA,UAAU;UACb,CAACH,GAAG,GAAG;YACLO,YAAY,EAAE,KAAK;YACnBC,UAAU,EAAE,IAAI;YAChBC,GAAG,EAAEA,CAAA,KAAK;cACR,IAAI,CAAChB,WAAW,CAACK,OAAO,CAACY,QAAQ,CAACV,GAAG,CAAC,EAAE;gBACtCP,WAAW,CAACK,OAAO,CAACa,IAAI,CAACX,GAAG,CAAC;cAC/B;cACA,OAAOI,KAAK;YACd;;SAEH;MACH;MACAC,MAAM,CAACO,gBAAgB,CAACV,aAAa,EAAEC,UAAU,CAAC;MAClD,OAAOD,aAAa;IACtB;IAEA,OAAOR,MAAM;EACf,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}