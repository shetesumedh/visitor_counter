{"ast":null,"code":"import { connect } from '../actions/connect.js';\nexport function connectMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return connect(config, variables);\n    },\n    mutationKey: ['connect']\n  };\n}","map":{"version":3,"names":["connect","connectMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/query/connect.ts"],"sourcesContent":["import type { MutateOptions, MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type ConnectErrorType,\n  type ConnectParameters,\n  type ConnectReturnType,\n  connect,\n} from '../actions/connect.js'\nimport type { Config, Connector } from '../createConfig.js'\n\nimport type { CreateConnectorFn } from '../connectors/createConnector.js'\nimport type { Compute } from '../types/utils.js'\n\nexport function connectMutationOptions<config extends Config>(config: config) {\n  return {\n    mutationFn(variables) {\n      return connect(config, variables)\n    },\n    mutationKey: ['connect'],\n  } as const satisfies MutationOptions<\n    ConnectData<config>,\n    ConnectErrorType,\n    ConnectVariables<config, Connector | CreateConnectorFn>\n  >\n}\n\nexport type ConnectData<config extends Config> = ConnectReturnType<config>\n\nexport type ConnectVariables<\n  config extends Config,\n  connector extends Connector | CreateConnectorFn,\n> = ConnectParameters<config, connector>\n\nexport type ConnectMutate<config extends Config, context = unknown> = <\n  connector extends\n    | config['connectors'][number]\n    | Connector\n    | CreateConnectorFn,\n>(\n  variables: ConnectVariables<config, connector>,\n  options?:\n    | Compute<\n        MutateOptions<\n          ConnectData<config>,\n          ConnectErrorType,\n          Compute<ConnectVariables<config, connector>>,\n          context\n        >\n      >\n    | undefined,\n) => void\n\nexport type ConnectMutateAsync<config extends Config, context = unknown> = <\n  connector extends\n    | config['connectors'][number]\n    | Connector\n    | CreateConnectorFn,\n>(\n  variables: ConnectVariables<config, connector>,\n  options?:\n    | Compute<\n        MutateOptions<\n          ConnectData<config>,\n          ConnectErrorType,\n          Compute<ConnectVariables<config, connector>>,\n          context\n        >\n      >\n    | undefined,\n) => Promise<ConnectData<config>>\n"],"mappings":"AAEA,SAIEA,OAAO,QACF,uBAAuB;AAM9B,OAAM,SAAUC,sBAAsBA,CAAwBC,MAAc;EAC1E,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,OAAO,CAACE,MAAM,EAAEE,SAAS,CAAC;IACnC,CAAC;IACDC,WAAW,EAAE,CAAC,SAAS;GAKxB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}