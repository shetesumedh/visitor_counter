{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidAbiTypeParameterError = exports.InvalidFunctionModifierError = exports.InvalidModifierError = exports.SolidityProtectedKeywordError = exports.InvalidParameterError = exports.InvalidAbiParametersError = exports.InvalidAbiParameterError = void 0;\nconst errors_js_1 = require(\"../../errors.js\");\nclass InvalidAbiParameterError extends errors_js_1.BaseError {\n  constructor({\n    param\n  }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParameterError'\n    });\n  }\n}\nexports.InvalidAbiParameterError = InvalidAbiParameterError;\nclass InvalidAbiParametersError extends errors_js_1.BaseError {\n  constructor({\n    params\n  }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParametersError'\n    });\n  }\n}\nexports.InvalidAbiParametersError = InvalidAbiParametersError;\nclass InvalidParameterError extends errors_js_1.BaseError {\n  constructor({\n    param\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidParameterError'\n    });\n  }\n}\nexports.InvalidParameterError = InvalidParameterError;\nclass SolidityProtectedKeywordError extends errors_js_1.BaseError {\n  constructor({\n    param,\n    name\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'SolidityProtectedKeywordError'\n    });\n  }\n}\nexports.SolidityProtectedKeywordError = SolidityProtectedKeywordError;\nclass InvalidModifierError extends errors_js_1.BaseError {\n  constructor({\n    param,\n    type,\n    modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidModifierError'\n    });\n  }\n}\nexports.InvalidModifierError = InvalidModifierError;\nclass InvalidFunctionModifierError extends errors_js_1.BaseError {\n  constructor({\n    param,\n    type,\n    modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`, `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidFunctionModifierError'\n    });\n  }\n}\nexports.InvalidFunctionModifierError = InvalidFunctionModifierError;\nclass InvalidAbiTypeParameterError extends errors_js_1.BaseError {\n  constructor({\n    abiParameter\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.']\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiTypeParameterError'\n    });\n  }\n}\nexports.InvalidAbiTypeParameterError = InvalidAbiTypeParameterError;","map":{"version":3,"names":["errors_js_1","require","InvalidAbiParameterError","BaseError","constructor","param","details","JSON","stringify","docsPath","Object","defineProperty","exports","InvalidAbiParametersError","params","InvalidParameterError","SolidityProtectedKeywordError","name","metaMessages","InvalidModifierError","type","modifier","InvalidFunctionModifierError","InvalidAbiTypeParameterError","abiParameter"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/abitype/src/human-readable/errors/abiParameter.ts"],"sourcesContent":["import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n"],"mappings":";;;;;;AACA,MAAAA,WAAA,GAAAC,OAAA;AAGA,MAAaC,wBAAyB,SAAQF,WAAA,CAAAG,SAAS;EAGrDC,YAAY;IAAEC;EAAK,CAA8B;IAC/C,KAAK,CAAC,gCAAgC,EAAE;MACtCC,OAAO,EAAE,qBAAqBC,IAAI,CAACC,SAAS,CAACH,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MAC/DI,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AARFC,OAAA,CAAAV,wBAAA,GAAAA,wBAAA;AAWA,MAAaW,yBAA0B,SAAQb,WAAA,CAAAG,SAAS;EAGtDC,YAAY;IAAEU;EAAM,CAA+B;IACjD,KAAK,CAAC,iCAAiC,EAAE;MACvCR,OAAO,EAAE,sBAAsBC,IAAI,CAACC,SAAS,CAACM,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MACjEL,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AARFC,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAWA,MAAaE,qBAAsB,SAAQf,WAAA,CAAAG,SAAS;EAGlDC,YAAY;IAAEC;EAAK,CAAqB;IACtC,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,OAAO,EAAED;KACV,CAAC;IALKK,MAAA,CAAAC,cAAA;;;;aAAO;;EAMhB;;AAPFC,OAAA,CAAAG,qBAAA,GAAAA,qBAAA;AAUA,MAAaC,6BAA8B,SAAQhB,WAAA,CAAAG,SAAS;EAG1DC,YAAY;IAAEC,KAAK;IAAEY;EAAI,CAAmC;IAC1D,KAAK,CAAC,wBAAwB,EAAE;MAC9BX,OAAO,EAAED,KAAK;MACda,YAAY,EAAE,CACZ,IAAID,IAAI,uGAAuG;KAElH,CAAC;IARKP,MAAA,CAAAC,cAAA;;;;aAAO;;EAShB;;AAVFC,OAAA,CAAAI,6BAAA,GAAAA,6BAAA;AAaA,MAAaG,oBAAqB,SAAQnB,WAAA,CAAAG,SAAS;EAGjDC,YAAY;IACVC,KAAK;IACLe,IAAI;IACJC;EAAQ,CAKT;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9Bf,OAAO,EAAED,KAAK;MACda,YAAY,EAAE,CACZ,aAAaG,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG;KAEN,CAAC;IAlBKV,MAAA,CAAAC,cAAA;;;;aAAO;;EAmBhB;;AApBFC,OAAA,CAAAO,oBAAA,GAAAA,oBAAA;AAuBA,MAAaG,4BAA6B,SAAQtB,WAAA,CAAAG,SAAS;EAGzDC,YAAY;IACVC,KAAK;IACLe,IAAI;IACJC;EAAQ,CAKT;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9Bf,OAAO,EAAED,KAAK;MACda,YAAY,EAAE,CACZ,aAAaG,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG,EACH,iFAAiFC,QAAQ,cAAc;KAE1G,CAAC;IAnBKX,MAAA,CAAAC,cAAA;;;;aAAO;;EAoBhB;;AArBFC,OAAA,CAAAU,4BAAA,GAAAA,4BAAA;AAwBA,MAAaC,4BAA6B,SAAQvB,WAAA,CAAAG,SAAS;EAGzDC,YAAY;IACVoB;EAAY,CAGb;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9BlB,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACgB,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;MAC9CN,YAAY,EAAE,CAAC,gCAAgC;KAChD,CAAC;IAVKR,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB;;AAZFC,OAAA,CAAAW,4BAAA,GAAAA,4BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}