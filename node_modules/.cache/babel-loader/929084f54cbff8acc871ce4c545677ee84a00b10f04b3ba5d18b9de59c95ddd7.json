{"ast":null,"code":"import { numberToHex } from '../../../utils/index.js';\n/**\n * Requests to add a Sub Account.\n *\n * - Docs: https://viem.sh/experimental/erc7895/addSubAccount\n * - JSON-RPC Methods: [`wallet_addSubAccount`](https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7895.md)\n *\n * @param client - Client to use\n * @param parameters - {@link AddSubAccountParameters}\n * @returns Sub Account. {@link AddSubAccountReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { addSubAccount } from 'viem/experimental/erc7895'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const response = await addSubAccount(client, {\n *   keys: [{ publicKey: '0x0000000000000000000000000000000000000000', type: 'address' }],\n *   type: 'create',\n * })\n */\nexport async function addSubAccount(client, parameters) {\n  return client.request({\n    method: 'wallet_addSubAccount',\n    params: [{\n      account: {\n        ...parameters,\n        ...(parameters.chainId ? {\n          chainId: numberToHex(parameters.chainId)\n        } : {})\n      },\n      version: '1'\n    }]\n  });\n}","map":{"version":3,"names":["numberToHex","addSubAccount","client","parameters","request","method","params","account","chainId","version"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/experimental/erc7895/actions/addSubAccount.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf, Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport { numberToHex } from '../../../utils/index.js'\n\nexport type AddSubAccountParameters = Prettify<\n  OneOf<\n    | {\n        keys?:\n          | readonly {\n              publicKey: Hex\n              type: 'address' | 'p256' | 'webcrypto-p256' | 'webauthn-p256'\n            }[]\n          | undefined\n        type: 'create'\n      }\n    | {\n        address: Address\n        chainId?: number | undefined\n        type: 'deployed'\n      }\n    | {\n        address: Address\n        chainId?: number | undefined\n        factory: Address\n        factoryData: Hex\n        type: 'undeployed'\n      }\n  >\n>\n\nexport type AddSubAccountReturnType = Prettify<{\n  address: Address\n  factory?: Address | undefined\n  factoryData?: Hex | undefined\n}>\n\nexport type AddSubAccountErrorType = RequestErrorType\n\n/**\n * Requests to add a Sub Account.\n *\n * - Docs: https://viem.sh/experimental/erc7895/addSubAccount\n * - JSON-RPC Methods: [`wallet_addSubAccount`](https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7895.md)\n *\n * @param client - Client to use\n * @param parameters - {@link AddSubAccountParameters}\n * @returns Sub Account. {@link AddSubAccountReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { addSubAccount } from 'viem/experimental/erc7895'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const response = await addSubAccount(client, {\n *   keys: [{ publicKey: '0x0000000000000000000000000000000000000000', type: 'address' }],\n *   type: 'create',\n * })\n */\nexport async function addSubAccount<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: AddSubAccountParameters,\n): Promise<AddSubAccountReturnType> {\n  return client.request({\n    method: 'wallet_addSubAccount',\n    params: [\n      {\n        account: {\n          ...parameters,\n          ...(parameters.chainId\n            ? { chainId: numberToHex(parameters.chainId) }\n            : {}),\n        } as never,\n        version: '1',\n      },\n    ],\n  })\n}\n"],"mappings":"AAOA,SAASA,WAAW,QAAQ,yBAAyB;AAoCrD;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAO,eAAeC,aAAaA,CACjCC,MAAgC,EAChCC,UAAmC;EAEnC,OAAOD,MAAM,CAACE,OAAO,CAAC;IACpBC,MAAM,EAAE,sBAAsB;IAC9BC,MAAM,EAAE,CACN;MACEC,OAAO,EAAE;QACP,GAAGJ,UAAU;QACb,IAAIA,UAAU,CAACK,OAAO,GAClB;UAAEA,OAAO,EAAER,WAAW,CAACG,UAAU,CAACK,OAAO;QAAC,CAAE,GAC5C,EAAE;OACE;MACVC,OAAO,EAAE;KACV;GAEJ,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}