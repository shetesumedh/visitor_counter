{"ast":null,"code":"import { CB_WALLET_RPC_URL } from '../../core/constants.js';\nimport { hexToNumber, isAddressEqual, numberToHex } from 'viem';\nimport { isActionableHttpRequestError, isViemError, standardErrors } from '../../core/error/errors.js';\nimport { logHandshakeCompleted, logHandshakeError, logHandshakeStarted, logRequestCompleted, logRequestError, logRequestStarted } from '../../core/telemetry/events/scw-signer.js';\nimport { logAddOwnerCompleted, logAddOwnerError, logAddOwnerStarted, logInsufficientBalanceErrorHandlingCompleted, logInsufficientBalanceErrorHandlingError, logInsufficientBalanceErrorHandlingStarted, logSubAccountRequestCompleted, logSubAccountRequestError, logSubAccountRequestStarted } from '../../core/telemetry/events/scw-sub-account.js';\nimport { parseErrorMessageFromAny } from '../../core/telemetry/utils.js';\nimport { ensureIntNumber, hexStringFromNumber } from '../../core/type/util.js';\nimport { createClients, getClient } from '../../store/chain-clients/utils.js';\nimport { correlationIds } from '../../store/correlation-ids/store.js';\nimport { store } from '../../store/store.js';\nimport { assertArrayPresence, assertPresence } from '../../util/assertPresence.js';\nimport { assertSubAccount } from '../../util/assertSubAccount.js';\nimport { decryptContent, encryptContent, exportKeyToHexString, importKeyFromHexString } from '../../util/cipher.js';\nimport { fetchRPCRequest } from '../../util/provider.js';\nimport { getCryptoKeyAccount } from '../../kms/crypto-key/index.js';\nimport { SCWKeyManager } from './SCWKeyManager.js';\nimport { addSenderToRequest, appendWithoutDuplicates, assertFetchPermissionsRequest, assertGetCapabilitiesParams, assertParamsChainId, fillMissingParamsForFetchPermissions, getCachedWalletConnectResponse, getSenderFromRequest, initSubAccountConfig, injectRequestCapabilities, makeDataSuffix, prependWithoutDuplicates, requestHasCapability } from './utils.js';\nimport { createSubAccountSigner } from './utils/createSubAccountSigner.js';\nimport { findOwnerIndex } from './utils/findOwnerIndex.js';\nimport { handleAddSubAccountOwner } from './utils/handleAddSubAccountOwner.js';\nimport { handleInsufficientBalanceError } from './utils/handleInsufficientBalance.js';\nexport class SCWSigner {\n  constructor(params) {\n    var _a, _b, _c, _d;\n    this.communicator = params.communicator;\n    this.callback = params.callback;\n    this.keyManager = new SCWKeyManager();\n    const {\n      account,\n      chains\n    } = store.getState();\n    this.accounts = (_a = account.accounts) !== null && _a !== void 0 ? _a : [];\n    this.chain = (_b = account.chain) !== null && _b !== void 0 ? _b : {\n      id: (_d = (_c = params.metadata.appChainIds) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : 1\n    };\n    if (chains) {\n      createClients(chains);\n    }\n  }\n  async handshake(args) {\n    var _a, _b, _c;\n    const correlationId = correlationIds.get(args);\n    logHandshakeStarted({\n      method: args.method,\n      correlationId\n    });\n    try {\n      // Open the popup before constructing the request message.\n      // This is to ensure that the popup is not blocked by some browsers (i.e. Safari)\n      await ((_b = (_a = this.communicator).waitForPopupLoaded) === null || _b === void 0 ? void 0 : _b.call(_a));\n      const handshakeMessage = await this.createRequestMessage({\n        handshake: {\n          method: args.method,\n          params: (_c = args.params) !== null && _c !== void 0 ? _c : []\n        }\n      }, correlationId);\n      const response = await this.communicator.postRequestAndWaitForResponse(handshakeMessage);\n      // store peer's public key\n      if ('failure' in response.content) {\n        throw response.content.failure;\n      }\n      const peerPublicKey = await importKeyFromHexString('public', response.sender);\n      await this.keyManager.setPeerPublicKey(peerPublicKey);\n      const decrypted = await this.decryptResponseMessage(response);\n      this.handleResponse(args, decrypted);\n      logHandshakeCompleted({\n        method: args.method,\n        correlationId\n      });\n    } catch (error) {\n      logHandshakeError({\n        method: args.method,\n        correlationId,\n        errorMessage: parseErrorMessageFromAny(error)\n      });\n      throw error;\n    }\n  }\n  async request(request) {\n    const correlationId = correlationIds.get(request);\n    logRequestStarted({\n      method: request.method,\n      correlationId\n    });\n    try {\n      const result = await this._request(request);\n      logRequestCompleted({\n        method: request.method,\n        correlationId\n      });\n      return result;\n    } catch (error) {\n      logRequestError({\n        method: request.method,\n        correlationId,\n        errorMessage: parseErrorMessageFromAny(error)\n      });\n      throw error;\n    }\n  }\n  async _request(request) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    if (this.accounts.length === 0) {\n      switch (request.method) {\n        case 'eth_requestAccounts':\n          {\n            // Wait for the popup to be loaded before making async calls\n            await ((_b = (_a = this.communicator).waitForPopupLoaded) === null || _b === void 0 ? void 0 : _b.call(_a));\n            await initSubAccountConfig();\n            // This will populate the store with the sub account\n            await this.request({\n              method: 'wallet_connect',\n              params: [{\n                version: '1',\n                capabilities: Object.assign({}, (_d = (_c = store.subAccountsConfig.get()) === null || _c === void 0 ? void 0 : _c.capabilities) !== null && _d !== void 0 ? _d : {})\n              }]\n            });\n            return this.accounts;\n          }\n        case 'wallet_switchEthereumChain':\n          {\n            assertParamsChainId(request.params);\n            this.chain.id = Number(request.params[0].chainId);\n            return;\n          }\n        case 'wallet_connect':\n          {\n            // Wait for the popup to be loaded before making async calls\n            await ((_f = (_e = this.communicator).waitForPopupLoaded) === null || _f === void 0 ? void 0 : _f.call(_e));\n            await initSubAccountConfig();\n            // Check if addSubAccount capability is present and if so, inject the the sub account capabilities\n            let capabilitiesToInject = {};\n            if (requestHasCapability(request, 'addSubAccount')) {\n              capabilitiesToInject = (_h = (_g = store.subAccountsConfig.get()) === null || _g === void 0 ? void 0 : _g.capabilities) !== null && _h !== void 0 ? _h : {};\n            }\n            const modifiedRequest = injectRequestCapabilities(request, capabilitiesToInject);\n            return this.sendRequestToPopup(modifiedRequest);\n          }\n        case 'wallet_sendCalls':\n        case 'wallet_sign':\n          {\n            return this.sendRequestToPopup(request);\n          }\n        default:\n          throw standardErrors.provider.unauthorized();\n      }\n    }\n    if (this.shouldRequestUseSubAccountSigner(request)) {\n      const correlationId = correlationIds.get(request);\n      logSubAccountRequestStarted({\n        method: request.method,\n        correlationId\n      });\n      try {\n        const result = await this.sendRequestToSubAccountSigner(request);\n        logSubAccountRequestCompleted({\n          method: request.method,\n          correlationId\n        });\n        return result;\n      } catch (error) {\n        logSubAccountRequestError({\n          method: request.method,\n          correlationId,\n          errorMessage: parseErrorMessageFromAny(error)\n        });\n        throw error;\n      }\n    }\n    switch (request.method) {\n      case 'eth_requestAccounts':\n      case 'eth_accounts':\n        {\n          const subAccount = store.subAccounts.get();\n          const subAccountsConfig = store.subAccountsConfig.get();\n          if (subAccount === null || subAccount === void 0 ? void 0 : subAccount.address) {\n            // if auto sub accounts are enabled and we have a sub account, we need to return it as a top level account\n            // otherwise, we just append it to the accounts array\n            this.accounts = (subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.enableAutoSubAccounts) ? prependWithoutDuplicates(this.accounts, subAccount.address) : appendWithoutDuplicates(this.accounts, subAccount.address);\n          }\n          (_j = this.callback) === null || _j === void 0 ? void 0 : _j.call(this, 'connect', {\n            chainId: numberToHex(this.chain.id)\n          });\n          return this.accounts;\n        }\n      case 'eth_coinbase':\n        return this.accounts[0];\n      case 'net_version':\n        return this.chain.id;\n      case 'eth_chainId':\n        return numberToHex(this.chain.id);\n      case 'wallet_getCapabilities':\n        return this.handleGetCapabilitiesRequest(request);\n      case 'wallet_switchEthereumChain':\n        return this.handleSwitchChainRequest(request);\n      case 'eth_ecRecover':\n      case 'personal_sign':\n      case 'wallet_sign':\n      case 'personal_ecRecover':\n      case 'eth_signTransaction':\n      case 'eth_sendTransaction':\n      case 'eth_signTypedData_v1':\n      case 'eth_signTypedData_v3':\n      case 'eth_signTypedData_v4':\n      case 'eth_signTypedData':\n      case 'wallet_addEthereumChain':\n      case 'wallet_watchAsset':\n      case 'wallet_sendCalls':\n      case 'wallet_showCallsStatus':\n      case 'wallet_grantPermissions':\n        return this.sendRequestToPopup(request);\n      case 'wallet_connect':\n        {\n          // Return cached wallet connect response if available\n          const cachedResponse = await getCachedWalletConnectResponse();\n          if (cachedResponse) {\n            return cachedResponse;\n          }\n          // Wait for the popup to be loaded before making async calls\n          await ((_l = (_k = this.communicator).waitForPopupLoaded) === null || _l === void 0 ? void 0 : _l.call(_k));\n          await initSubAccountConfig();\n          const subAccountsConfig = store.subAccountsConfig.get();\n          const modifiedRequest = injectRequestCapabilities(request, (_m = subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.capabilities) !== null && _m !== void 0 ? _m : {});\n          (_o = this.callback) === null || _o === void 0 ? void 0 : _o.call(this, 'connect', {\n            chainId: numberToHex(this.chain.id)\n          });\n          return this.sendRequestToPopup(modifiedRequest);\n        }\n      // Sub Account Support\n      case 'wallet_getSubAccounts':\n        {\n          const subAccount = store.subAccounts.get();\n          if (subAccount === null || subAccount === void 0 ? void 0 : subAccount.address) {\n            return {\n              subAccounts: [subAccount]\n            };\n          }\n          if (!this.chain.rpcUrl) {\n            throw standardErrors.rpc.internal('No RPC URL set for chain');\n          }\n          const response = await fetchRPCRequest(request, this.chain.rpcUrl);\n          assertArrayPresence(response.subAccounts, 'subAccounts');\n          if (response.subAccounts.length > 0) {\n            // cache the sub account\n            assertSubAccount(response.subAccounts[0]);\n            const subAccount = response.subAccounts[0];\n            store.subAccounts.set({\n              address: subAccount.address,\n              factory: subAccount.factory,\n              factoryData: subAccount.factoryData\n            });\n          }\n          return response;\n        }\n      case 'wallet_addSubAccount':\n        return this.addSubAccount(request);\n      case 'coinbase_fetchPermissions':\n        {\n          assertFetchPermissionsRequest(request);\n          const completeRequest = fillMissingParamsForFetchPermissions(request);\n          const permissions = await fetchRPCRequest(completeRequest, CB_WALLET_RPC_URL);\n          const requestedChainId = hexToNumber((_p = completeRequest.params) === null || _p === void 0 ? void 0 : _p[0].chainId);\n          store.spendPermissions.set(permissions.permissions.map(permission => Object.assign(Object.assign({}, permission), {\n            chainId: requestedChainId\n          })));\n          return permissions;\n        }\n      default:\n        if (!this.chain.rpcUrl) {\n          throw standardErrors.rpc.internal('No RPC URL set for chain');\n        }\n        return fetchRPCRequest(request, this.chain.rpcUrl);\n    }\n  }\n  async sendRequestToPopup(request) {\n    var _a, _b;\n    // Open the popup before constructing the request message.\n    // This is to ensure that the popup is not blocked by some browsers (i.e. Safari)\n    await ((_b = (_a = this.communicator).waitForPopupLoaded) === null || _b === void 0 ? void 0 : _b.call(_a));\n    const response = await this.sendEncryptedRequest(request);\n    const decrypted = await this.decryptResponseMessage(response);\n    return this.handleResponse(request, decrypted);\n  }\n  async handleResponse(request, decrypted) {\n    var _a, _b, _c, _d, _e;\n    const result = decrypted.result;\n    if ('error' in result) throw result.error;\n    switch (request.method) {\n      case 'eth_requestAccounts':\n        {\n          const accounts = result.value;\n          this.accounts = accounts;\n          store.account.set({\n            accounts,\n            chain: this.chain\n          });\n          (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'accountsChanged', accounts);\n          break;\n        }\n      case 'wallet_connect':\n        {\n          const response = result.value;\n          const accounts = response.accounts.map(account => account.address);\n          this.accounts = accounts;\n          store.account.set({\n            accounts\n          });\n          const account = response.accounts.at(0);\n          const capabilities = account === null || account === void 0 ? void 0 : account.capabilities;\n          if (capabilities === null || capabilities === void 0 ? void 0 : capabilities.subAccounts) {\n            const capabilityResponse = capabilities === null || capabilities === void 0 ? void 0 : capabilities.subAccounts;\n            assertArrayPresence(capabilityResponse, 'subAccounts');\n            assertSubAccount(capabilityResponse[0]);\n            store.subAccounts.set({\n              address: capabilityResponse[0].address,\n              factory: capabilityResponse[0].factory,\n              factoryData: capabilityResponse[0].factoryData\n            });\n          }\n          let accounts_ = [this.accounts[0]];\n          const subAccount = store.subAccounts.get();\n          const subAccountsConfig = store.subAccountsConfig.get();\n          if (subAccount === null || subAccount === void 0 ? void 0 : subAccount.address) {\n            // Sub account should be returned as a top level account if auto sub accounts are enabled\n            this.accounts = (subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.enableAutoSubAccounts) ? prependWithoutDuplicates(this.accounts, subAccount.address) : appendWithoutDuplicates(this.accounts, subAccount.address);\n          }\n          const spendPermissions = (_c = (_b = response === null || response === void 0 ? void 0 : response.accounts) === null || _b === void 0 ? void 0 : _b[0].capabilities) === null || _c === void 0 ? void 0 : _c.spendPermissions;\n          if (spendPermissions && 'permissions' in spendPermissions) {\n            store.spendPermissions.set(spendPermissions === null || spendPermissions === void 0 ? void 0 : spendPermissions.permissions);\n          }\n          (_d = this.callback) === null || _d === void 0 ? void 0 : _d.call(this, 'accountsChanged', accounts_);\n          break;\n        }\n      case 'wallet_addSubAccount':\n        {\n          assertSubAccount(result.value);\n          const subAccount = result.value;\n          store.subAccounts.set(subAccount);\n          const subAccountsConfig = store.subAccountsConfig.get();\n          this.accounts = (subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.enableAutoSubAccounts) ? prependWithoutDuplicates(this.accounts, subAccount.address) : appendWithoutDuplicates(this.accounts, subAccount.address);\n          (_e = this.callback) === null || _e === void 0 ? void 0 : _e.call(this, 'accountsChanged', this.accounts);\n          break;\n        }\n      default:\n        break;\n    }\n    return result.value;\n  }\n  async cleanup() {\n    var _a, _b;\n    const metadata = store.config.get().metadata;\n    await this.keyManager.clear();\n    // clear the store\n    store.account.clear();\n    store.subAccounts.clear();\n    store.spendPermissions.clear();\n    store.chains.clear();\n    // reset the signer\n    this.accounts = [];\n    this.chain = {\n      id: (_b = (_a = metadata === null || metadata === void 0 ? void 0 : metadata.appChainIds) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : 1\n    };\n  }\n  /**\n   * @returns `null` if the request was successful.\n   * https://eips.ethereum.org/EIPS/eip-3326#wallet_switchethereumchain\n   */\n  async handleSwitchChainRequest(request) {\n    assertParamsChainId(request.params);\n    const chainId = ensureIntNumber(request.params[0].chainId);\n    const localResult = this.updateChain(chainId);\n    if (localResult) return null;\n    const popupResult = await this.sendRequestToPopup(request);\n    if (popupResult === null) {\n      this.updateChain(chainId);\n    }\n    return popupResult;\n  }\n  async handleGetCapabilitiesRequest(request) {\n    assertGetCapabilitiesParams(request.params);\n    const requestedAccount = request.params[0];\n    const filterChainIds = request.params[1]; // Optional second parameter\n    if (!this.accounts.some(account => isAddressEqual(account, requestedAccount))) {\n      throw standardErrors.provider.unauthorized('no active account found when getting capabilities');\n    }\n    const capabilities = store.getState().account.capabilities;\n    // Return empty object if capabilities is undefined\n    if (!capabilities) {\n      return {};\n    }\n    // If no filter is provided, return all capabilities\n    if (!filterChainIds || filterChainIds.length === 0) {\n      return capabilities;\n    }\n    // Convert filter chain IDs to numbers once for efficient lookup\n    const filterChainNumbers = new Set(filterChainIds.map(chainId => hexToNumber(chainId)));\n    // Filter capabilities\n    const filteredCapabilities = Object.fromEntries(Object.entries(capabilities).filter(([capabilityKey]) => {\n      try {\n        const capabilityChainNumber = hexToNumber(capabilityKey);\n        return filterChainNumbers.has(capabilityChainNumber);\n      } catch (_a) {\n        // If capabilityKey is not a valid hex string, exclude it\n        return false;\n      }\n    }));\n    return filteredCapabilities;\n  }\n  async sendEncryptedRequest(request) {\n    const sharedSecret = await this.keyManager.getSharedSecret();\n    if (!sharedSecret) {\n      throw standardErrors.provider.unauthorized('No shared secret found when encrypting request');\n    }\n    const encrypted = await encryptContent({\n      action: request,\n      chainId: this.chain.id\n    }, sharedSecret);\n    const correlationId = correlationIds.get(request);\n    const message = await this.createRequestMessage({\n      encrypted\n    }, correlationId);\n    return this.communicator.postRequestAndWaitForResponse(message);\n  }\n  async createRequestMessage(content, correlationId) {\n    const publicKey = await exportKeyToHexString('public', await this.keyManager.getOwnPublicKey());\n    return {\n      id: crypto.randomUUID(),\n      correlationId,\n      sender: publicKey,\n      content,\n      timestamp: new Date()\n    };\n  }\n  async decryptResponseMessage(message) {\n    var _a, _b, _c;\n    const content = message.content;\n    // throw protocol level error\n    if ('failure' in content) {\n      throw content.failure;\n    }\n    const sharedSecret = await this.keyManager.getSharedSecret();\n    if (!sharedSecret) {\n      throw standardErrors.provider.unauthorized('Invalid session: no shared secret found when decrypting response');\n    }\n    const response = await decryptContent(content.encrypted, sharedSecret);\n    const availableChains = (_a = response.data) === null || _a === void 0 ? void 0 : _a.chains;\n    if (availableChains) {\n      const nativeCurrencies = (_b = response.data) === null || _b === void 0 ? void 0 : _b.nativeCurrencies;\n      const chains = Object.entries(availableChains).map(([id, rpcUrl]) => {\n        const nativeCurrency = nativeCurrencies === null || nativeCurrencies === void 0 ? void 0 : nativeCurrencies[Number(id)];\n        return Object.assign({\n          id: Number(id),\n          rpcUrl\n        }, nativeCurrency ? {\n          nativeCurrency\n        } : {});\n      });\n      store.chains.set(chains);\n      this.updateChain(this.chain.id, chains);\n      createClients(chains);\n    }\n    const walletCapabilities = (_c = response.data) === null || _c === void 0 ? void 0 : _c.capabilities;\n    if (walletCapabilities) {\n      store.account.set({\n        capabilities: walletCapabilities\n      });\n    }\n    return response;\n  }\n  updateChain(chainId, newAvailableChains) {\n    var _a;\n    const state = store.getState();\n    const chains = newAvailableChains !== null && newAvailableChains !== void 0 ? newAvailableChains : state.chains;\n    const chain = chains === null || chains === void 0 ? void 0 : chains.find(chain => chain.id === chainId);\n    if (!chain) return false;\n    if (chain !== this.chain) {\n      this.chain = chain;\n      store.account.set({\n        chain\n      });\n      (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'chainChanged', hexStringFromNumber(chain.id));\n    }\n    return true;\n  }\n  async addSubAccount(request) {\n    var _a, _b, _c, _d;\n    const state = store.getState();\n    const subAccount = state.subAccount;\n    const subAccountsConfig = store.subAccountsConfig.get();\n    if (subAccount === null || subAccount === void 0 ? void 0 : subAccount.address) {\n      this.accounts = (subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.enableAutoSubAccounts) ? prependWithoutDuplicates(this.accounts, subAccount.address) : appendWithoutDuplicates(this.accounts, subAccount.address);\n      (_a = this.callback) === null || _a === void 0 ? void 0 : _a.call(this, 'accountsChanged', this.accounts);\n      return subAccount;\n    }\n    // Wait for the popup to be loaded before sending the request\n    await ((_c = (_b = this.communicator).waitForPopupLoaded) === null || _c === void 0 ? void 0 : _c.call(_b));\n    if (Array.isArray(request.params) && request.params.length > 0 && request.params[0].account && request.params[0].account.type === 'create') {\n      let keys;\n      if (request.params[0].account.keys && request.params[0].account.keys.length > 0) {\n        keys = request.params[0].account.keys;\n      } else {\n        const config = (_d = store.subAccountsConfig.get()) !== null && _d !== void 0 ? _d : {};\n        const {\n          account: ownerAccount\n        } = config.toOwnerAccount ? await config.toOwnerAccount() : await getCryptoKeyAccount();\n        if (!ownerAccount) {\n          throw standardErrors.provider.unauthorized('could not get subaccount owner account when adding sub account');\n        }\n        keys = [{\n          type: ownerAccount.address ? 'address' : 'webauthn-p256',\n          publicKey: ownerAccount.address || ownerAccount.publicKey\n        }];\n      }\n      request.params[0].account.keys = keys;\n    }\n    const response = await this.sendRequestToPopup(request);\n    assertSubAccount(response);\n    return response;\n  }\n  shouldRequestUseSubAccountSigner(request) {\n    const sender = getSenderFromRequest(request);\n    const subAccount = store.subAccounts.get();\n    if (sender) {\n      return sender.toLowerCase() === (subAccount === null || subAccount === void 0 ? void 0 : subAccount.address.toLowerCase());\n    }\n    return false;\n  }\n  async sendRequestToSubAccountSigner(request) {\n    var _a;\n    const subAccount = store.subAccounts.get();\n    const subAccountsConfig = store.subAccountsConfig.get();\n    const config = store.config.get();\n    assertPresence(subAccount === null || subAccount === void 0 ? void 0 : subAccount.address, standardErrors.provider.unauthorized('no active sub account when sending request to sub account signer'));\n    // Get the owner account from the config\n    const ownerAccount = (subAccountsConfig === null || subAccountsConfig === void 0 ? void 0 : subAccountsConfig.toOwnerAccount) ? await subAccountsConfig.toOwnerAccount() : await getCryptoKeyAccount();\n    assertPresence(ownerAccount === null || ownerAccount === void 0 ? void 0 : ownerAccount.account, standardErrors.provider.unauthorized('no active sub account owner when sending request to sub account signer'));\n    const sender = getSenderFromRequest(request);\n    // if sender is undefined, we inject the active sub account\n    // address into the params for the supported request methods\n    if (sender === undefined) {\n      request = addSenderToRequest(request, subAccount.address);\n    }\n    const client = getClient(this.chain.id);\n    assertPresence(client, standardErrors.rpc.internal(`client not found for chainId ${this.chain.id} when sending request to sub account signer`));\n    const globalAccountAddress = this.accounts.find(account => account.toLowerCase() !== subAccount.address.toLowerCase());\n    assertPresence(globalAccountAddress, standardErrors.provider.unauthorized('no global account found when sending request to sub account signer'));\n    const dataSuffix = makeDataSuffix({\n      attribution: (_a = config.preference) === null || _a === void 0 ? void 0 : _a.attribution,\n      dappOrigin: window.location.origin\n    });\n    const publicKey = ownerAccount.account.type === 'local' ? ownerAccount.account.address : ownerAccount.account.publicKey;\n    let ownerIndex = await findOwnerIndex({\n      address: subAccount.address,\n      factory: subAccount.factory,\n      factoryData: subAccount.factoryData,\n      publicKey,\n      client\n    });\n    if (ownerIndex === -1) {\n      const correlationId = correlationIds.get(request);\n      logAddOwnerStarted({\n        method: request.method,\n        correlationId\n      });\n      try {\n        ownerIndex = await handleAddSubAccountOwner({\n          ownerAccount: ownerAccount.account,\n          globalAccountRequest: this.sendRequestToPopup.bind(this)\n        });\n        logAddOwnerCompleted({\n          method: request.method,\n          correlationId\n        });\n      } catch (error) {\n        logAddOwnerError({\n          method: request.method,\n          correlationId,\n          errorMessage: parseErrorMessageFromAny(error)\n        });\n        return standardErrors.provider.unauthorized('failed to add sub account owner when sending request to sub account signer');\n      }\n    }\n    const {\n      request: subAccountRequest\n    } = await createSubAccountSigner({\n      address: subAccount.address,\n      owner: ownerAccount.account,\n      client: client,\n      factory: subAccount.factory,\n      factoryData: subAccount.factoryData,\n      parentAddress: globalAccountAddress,\n      attribution: dataSuffix ? {\n        suffix: dataSuffix\n      } : undefined,\n      ownerIndex\n    });\n    try {\n      const result = await subAccountRequest(request);\n      return result;\n    } catch (error) {\n      let errorObject;\n      if (isViemError(error)) {\n        errorObject = JSON.parse(error.details);\n      } else if (isActionableHttpRequestError(error)) {\n        errorObject = error;\n      } else {\n        throw error;\n      }\n      if (!(isActionableHttpRequestError(errorObject) && errorObject.data)) {\n        throw error;\n      }\n      if (!errorObject.data) {\n        throw error;\n      }\n      const correlationId = correlationIds.get(request);\n      logInsufficientBalanceErrorHandlingStarted({\n        method: request.method,\n        correlationId\n      });\n      try {\n        const result = await handleInsufficientBalanceError({\n          errorData: errorObject.data,\n          globalAccountAddress,\n          subAccountAddress: subAccount.address,\n          client,\n          request,\n          subAccountRequest,\n          globalAccountRequest: this.request.bind(this)\n        });\n        logInsufficientBalanceErrorHandlingCompleted({\n          method: request.method,\n          correlationId\n        });\n        return result;\n      } catch (handlingError) {\n        console.error(handlingError);\n        logInsufficientBalanceErrorHandlingError({\n          method: request.method,\n          correlationId,\n          errorMessage: parseErrorMessageFromAny(handlingError)\n        });\n        throw error;\n      }\n    }\n  }\n}","map":{"version":3,"names":["CB_WALLET_RPC_URL","hexToNumber","isAddressEqual","numberToHex","isActionableHttpRequestError","isViemError","standardErrors","logHandshakeCompleted","logHandshakeError","logHandshakeStarted","logRequestCompleted","logRequestError","logRequestStarted","logAddOwnerCompleted","logAddOwnerError","logAddOwnerStarted","logInsufficientBalanceErrorHandlingCompleted","logInsufficientBalanceErrorHandlingError","logInsufficientBalanceErrorHandlingStarted","logSubAccountRequestCompleted","logSubAccountRequestError","logSubAccountRequestStarted","parseErrorMessageFromAny","ensureIntNumber","hexStringFromNumber","createClients","getClient","correlationIds","store","assertArrayPresence","assertPresence","assertSubAccount","decryptContent","encryptContent","exportKeyToHexString","importKeyFromHexString","fetchRPCRequest","getCryptoKeyAccount","SCWKeyManager","addSenderToRequest","appendWithoutDuplicates","assertFetchPermissionsRequest","assertGetCapabilitiesParams","assertParamsChainId","fillMissingParamsForFetchPermissions","getCachedWalletConnectResponse","getSenderFromRequest","initSubAccountConfig","injectRequestCapabilities","makeDataSuffix","prependWithoutDuplicates","requestHasCapability","createSubAccountSigner","findOwnerIndex","handleAddSubAccountOwner","handleInsufficientBalanceError","SCWSigner","constructor","params","communicator","callback","keyManager","account","chains","getState","accounts","_a","chain","_b","id","_d","_c","metadata","appChainIds","handshake","args","correlationId","get","method","waitForPopupLoaded","call","handshakeMessage","createRequestMessage","response","postRequestAndWaitForResponse","content","failure","peerPublicKey","sender","setPeerPublicKey","decrypted","decryptResponseMessage","handleResponse","error","errorMessage","request","result","_request","length","version","capabilities","Object","assign","subAccountsConfig","Number","chainId","_f","_e","capabilitiesToInject","_h","_g","modifiedRequest","sendRequestToPopup","provider","unauthorized","shouldRequestUseSubAccountSigner","sendRequestToSubAccountSigner","subAccount","subAccounts","address","enableAutoSubAccounts","_j","handleGetCapabilitiesRequest","handleSwitchChainRequest","cachedResponse","_l","_k","_m","_o","rpcUrl","rpc","internal","set","factory","factoryData","addSubAccount","completeRequest","permissions","requestedChainId","_p","spendPermissions","map","permission","sendEncryptedRequest","value","at","capabilityResponse","accounts_","cleanup","config","clear","localResult","updateChain","popupResult","requestedAccount","filterChainIds","some","filterChainNumbers","Set","filteredCapabilities","fromEntries","entries","filter","capabilityKey","capabilityChainNumber","has","sharedSecret","getSharedSecret","encrypted","action","message","publicKey","getOwnPublicKey","crypto","randomUUID","timestamp","Date","availableChains","data","nativeCurrencies","nativeCurrency","walletCapabilities","newAvailableChains","state","find","Array","isArray","type","keys","ownerAccount","toOwnerAccount","toLowerCase","undefined","client","globalAccountAddress","dataSuffix","attribution","preference","dappOrigin","window","location","origin","ownerIndex","globalAccountRequest","bind","subAccountRequest","owner","parentAddress","suffix","errorObject","JSON","parse","details","errorData","subAccountAddress","handlingError","console"],"sources":["../../../src/sign/scw/SCWSigner.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}