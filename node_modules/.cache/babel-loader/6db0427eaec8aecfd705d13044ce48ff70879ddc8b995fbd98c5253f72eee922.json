{"ast":null,"code":"import { connect } from '../actions/connect.js';\nimport { disconnect } from '../actions/disconnect.js';\n/**\n * A suite of ERC-7846 Wallet Actions.\n *\n * @example\n * import { createPublicClient, createWalletClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { erc7846Actions } from 'viem/experimental/erc7846'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * }).extend(erc7846Actions())\n *\n * const response = await client.connect()\n */\nexport function erc7846Actions() {\n  return client => {\n    return {\n      connect: parameters => connect(client, parameters),\n      disconnect: () => disconnect(client)\n    };\n  };\n}","map":{"version":3,"names":["connect","disconnect","erc7846Actions","client","parameters"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/experimental/erc7846/decorators/erc7846.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport {\n  type ConnectParameters,\n  type ConnectReturnType,\n  connect,\n} from '../actions/connect.js'\nimport { disconnect } from '../actions/disconnect.js'\n\nexport type Erc7846Actions = {\n  /**\n   * Requests to connect to a wallet.\n   *\n   * - Docs: https://viem.sh/experimental/erc7846/connect\n   * - JSON-RPC Methods: [`wallet_connect`](https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7846.md)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link ConnectParameters}\n   * @returns List of accounts managed by a wallet {@link ConnectReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { erc7846Actions } from 'viem/experimental/erc7846'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * }).extend(erc7846Actions())\n   *\n   * const response = await client.connect()\n   */\n  connect: (\n    parameters?: ConnectParameters | undefined,\n  ) => Promise<ConnectReturnType>\n  /**\n   * Requests to disconnect connected accounts.\n   *\n   * - Docs: https://viem.sh/experimental/erc7846/disconnect\n   * - JSON-RPC Methods: [`wallet_disconnect`](https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7846.md)\n   *\n   * @param client - Client to use\n   * @returns void\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { erc7846Actions } from 'viem/experimental/erc7846'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * }).extend(erc7846Actions())\n   *\n   * await client.disconnect()\n   */\n  disconnect: () => Promise<void>\n}\n\n/**\n * A suite of ERC-7846 Wallet Actions.\n *\n * @example\n * import { createPublicClient, createWalletClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { erc7846Actions } from 'viem/experimental/erc7846'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * }).extend(erc7846Actions())\n *\n * const response = await client.connect()\n */\nexport function erc7846Actions() {\n  return <\n    transport extends Transport,\n    chain extends Chain | undefined = Chain | undefined,\n  >(\n    client: Client<transport, chain>,\n  ): Erc7846Actions => {\n    return {\n      connect: (parameters) => connect(client, parameters),\n      disconnect: () => disconnect(client),\n    }\n  }\n}\n"],"mappings":"AAGA,SAGEA,OAAO,QACF,uBAAuB;AAC9B,SAASC,UAAU,QAAQ,0BAA0B;AAoDrD;;;;;;;;;;;;;;;AAeA,OAAM,SAAUC,cAAcA,CAAA;EAC5B,OAIEC,MAAgC,IACd;IAClB,OAAO;MACLH,OAAO,EAAGI,UAAU,IAAKJ,OAAO,CAACG,MAAM,EAAEC,UAAU,CAAC;MACpDH,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACE,MAAM;KACpC;EACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}