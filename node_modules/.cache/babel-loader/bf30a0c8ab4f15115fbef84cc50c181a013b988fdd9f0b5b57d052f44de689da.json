{"ast":null,"code":"import { prepareTransactionRequest as viem_prepareTransactionRequest } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\nimport { getAccount } from './getAccount.js';\n/** https://wagmi.sh/core/api/actions/prepareTransactionRequest */\nexport async function prepareTransactionRequest(config, parameters) {\n  const {\n    account: account_,\n    chainId,\n    ...rest\n  } = parameters;\n  const account = account_ ?? getAccount(config).address;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_prepareTransactionRequest, 'prepareTransactionRequest');\n  return action({\n    ...rest,\n    ...(account ? {\n      account\n    } : {})\n  });\n}","map":{"version":3,"names":["prepareTransactionRequest","viem_prepareTransactionRequest","getAction","getAccount","config","parameters","account","account_","chainId","rest","address","client","getClient","action"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/prepareTransactionRequest.ts"],"sourcesContent":["import type {\n  Account,\n  Address,\n  Chain,\n  PrepareTransactionRequestErrorType as viem_PrepareTransactionRequestErrorType,\n  PrepareTransactionRequestParameters as viem_PrepareTransactionRequestParameters,\n  PrepareTransactionRequestRequest as viem_PrepareTransactionRequestRequest,\n  PrepareTransactionRequestReturnType as viem_PrepareTransactionRequestReturnType,\n} from 'viem'\nimport { prepareTransactionRequest as viem_prepareTransactionRequest } from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type {\n  Compute,\n  IsNarrowable,\n  UnionCompute,\n  UnionStrictOmit,\n} from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport { getAccount } from './getAccount.js'\n\nexport type PrepareTransactionRequestParameters<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n  request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  > = viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  >,\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: UnionCompute<\n    UnionStrictOmit<\n      viem_PrepareTransactionRequestParameters<\n        chains[key],\n        Account,\n        chains[key],\n        Account | Address,\n        request extends viem_PrepareTransactionRequestRequest<\n          chains[key],\n          chains[key]\n        >\n          ? request\n          : never\n      >,\n      'chain'\n    > &\n      ChainIdParameter<config, chainId> & {\n        to: Address\n      }\n  >\n}[number]\n\nexport type PrepareTransactionRequestReturnType<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n  request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  > = viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  >,\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: Compute<\n    viem_PrepareTransactionRequestReturnType<\n      IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined,\n      Account,\n      chains[key],\n      Account,\n      request extends viem_PrepareTransactionRequestRequest<\n        IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined,\n        chains[key]\n      >\n        ? request\n        : never\n    >\n  > & {\n    chainId: chains[key]['id']\n  }\n}[number]\n\nexport type PrepareTransactionRequestErrorType =\n  viem_PrepareTransactionRequestErrorType\n\n/** https://wagmi.sh/core/api/actions/prepareTransactionRequest */\nexport async function prepareTransactionRequest<\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n  const request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>['0'],\n    SelectChains<config, chainId>['0']\n  >,\n>(\n  config: config,\n  parameters: PrepareTransactionRequestParameters<config, chainId, request>,\n): Promise<PrepareTransactionRequestReturnType<config, chainId, request>> {\n  const { account: account_, chainId, ...rest } = parameters\n\n  const account = account_ ?? getAccount(config).address\n  const client = config.getClient({ chainId })\n\n  const action = getAction(\n    client,\n    viem_prepareTransactionRequest,\n    'prepareTransactionRequest',\n  )\n  return action({\n    ...rest,\n    ...(account ? { account } : {}),\n  } as unknown as viem_PrepareTransactionRequestParameters) as unknown as Promise<\n    PrepareTransactionRequestReturnType<config, chainId, request>\n  >\n}\n"],"mappings":"AASA,SAASA,yBAAyB,IAAIC,8BAA8B,QAAQ,cAAc;AAW1F,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,UAAU,QAAQ,iBAAiB;AA2E5C;AACA,OAAO,eAAeH,yBAAyBA,CAQ7CI,MAAc,EACdC,UAAyE;EAEzE,MAAM;IAAEC,OAAO,EAAEC,QAAQ;IAAEC,OAAO;IAAE,GAAGC;EAAI,CAAE,GAAGJ,UAAU;EAE1D,MAAMC,OAAO,GAAGC,QAAQ,IAAIJ,UAAU,CAACC,MAAM,CAAC,CAACM,OAAO;EACtD,MAAMC,MAAM,GAAGP,MAAM,CAACQ,SAAS,CAAC;IAAEJ;EAAO,CAAE,CAAC;EAE5C,MAAMK,MAAM,GAAGX,SAAS,CACtBS,MAAM,EACNV,8BAA8B,EAC9B,2BAA2B,CAC5B;EACD,OAAOY,MAAM,CAAC;IACZ,GAAGJ,IAAI;IACP,IAAIH,OAAO,GAAG;MAAEA;IAAO,CAAE,GAAG,EAAE;GACwB,CAEvD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}