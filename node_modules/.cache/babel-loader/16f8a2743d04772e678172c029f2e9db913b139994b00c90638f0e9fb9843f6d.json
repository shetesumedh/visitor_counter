{"ast":null,"code":"import { publicActions } from 'viem';\nimport { getClient } from './getClient.js';\nexport function getPublicClient(config, parameters = {}) {\n  const client = getClient(config, parameters);\n  return client?.extend(publicActions);\n}","map":{"version":3,"names":["publicActions","getClient","getPublicClient","config","parameters","client","extend"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/getPublicClient.ts"],"sourcesContent":["import { type Client, type PublicClient, publicActions } from 'viem'\n\nimport type { Config } from '../createConfig.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Compute, IsNarrowable } from '../types/utils.js'\nimport { getClient } from './getClient.js'\n\nexport type GetPublicClientParameters<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n> = ChainIdParameter<config, chainId>\n\nexport type GetPublicClientReturnType<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n  ///\n  resolvedChainId extends\n    | config['chains'][number]['id']\n    | undefined = IsNarrowable<\n    config['chains'][number]['id'],\n    number\n  > extends true\n    ? IsNarrowable<chainId, number> extends true\n      ? chainId\n      : config['chains'][number]['id']\n    : config['chains'][number]['id'] | undefined,\n> = resolvedChainId extends config['chains'][number]['id']\n  ? Compute<\n      PublicClient<\n        config['_internal']['transports'][resolvedChainId],\n        Extract<config['chains'][number], { id: resolvedChainId }>\n      >\n    >\n  : undefined\n\nexport function getPublicClient<\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | number | undefined,\n>(\n  config: config,\n  parameters: GetPublicClientParameters<config, chainId> = {},\n): GetPublicClientReturnType<config, chainId> {\n  const client = getClient(config, parameters)\n  return (client as Client)?.extend(publicActions) as GetPublicClientReturnType<\n    config,\n    chainId\n  >\n}\n"],"mappings":"AAAA,SAAyCA,aAAa,QAAQ,MAAM;AAKpE,SAASC,SAAS,QAAQ,gBAAgB;AAkC1C,OAAM,SAAUC,eAAeA,CAI7BC,MAAc,EACdC,UAAA,GAAyD,EAAE;EAE3D,MAAMC,MAAM,GAAGJ,SAAS,CAACE,MAAM,EAAEC,UAAU,CAAC;EAC5C,OAAQC,MAAiB,EAAEC,MAAM,CAACN,aAAa,CAG9C;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}