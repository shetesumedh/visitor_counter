{"ast":null,"code":"/* eslint-disable no-console */\nimport { proxy, ref } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport '@reown/appkit-common';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { AppKitError, withErrorBoundary } from '../utils/withErrorBoundary.js';\nimport { AccountController } from './AccountController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { ModalController } from './ModalController.js';\nimport { RouterController } from './RouterController.js';\nimport { TransactionsController } from './TransactionsController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  connections: new Map(),\n  wcError: false,\n  buffering: false,\n  status: 'disconnected'\n});\n// eslint-disable-next-line init-declarations\nlet wcConnectionPromise;\n// -- Controller ---------------------------------------- //\nconst controller = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  _getClient() {\n    return state._client;\n  },\n  setClient(client) {\n    state._client = ref(client);\n  },\n  async connectWalletConnect() {\n    if (CoreHelperUtil.isTelegram() || CoreHelperUtil.isSafari() && CoreHelperUtil.isIos()) {\n      if (wcConnectionPromise) {\n        await wcConnectionPromise;\n        wcConnectionPromise = undefined;\n        return;\n      }\n      if (!CoreHelperUtil.isPairingExpired(state?.wcPairingExpiry)) {\n        const link = state.wcUri;\n        state.wcUri = link;\n        return;\n      }\n      wcConnectionPromise = ConnectionController._getClient()?.connectWalletConnect?.().catch(() => undefined);\n      ConnectionController.state.status = 'connecting';\n      await wcConnectionPromise;\n      wcConnectionPromise = undefined;\n      state.wcPairingExpiry = undefined;\n      ConnectionController.state.status = 'connected';\n    } else {\n      await ConnectionController._getClient()?.connectWalletConnect?.();\n    }\n  },\n  async connectExternal(options, chain, setChain = true) {\n    await ConnectionController._getClient()?.connectExternal?.(options);\n    if (setChain) {\n      ChainController.setActiveNamespace(chain);\n    }\n  },\n  async reconnectExternal(options) {\n    await ConnectionController._getClient()?.reconnectExternal?.(options);\n    const namespace = options.chain || ChainController.state.activeChain;\n    if (namespace) {\n      ConnectorController.setConnectorId(options.id, namespace);\n    }\n  },\n  async setPreferredAccountType(accountType, namespace) {\n    ModalController.setLoading(true, ChainController.state.activeChain);\n    const authConnector = ConnectorController.getAuthConnector();\n    if (!authConnector) {\n      return;\n    }\n    AccountController.setPreferredAccountType(accountType, namespace);\n    await authConnector.provider.setPreferredAccount(accountType);\n    StorageUtil.setPreferredAccountTypes(AccountController.state.preferredAccountTypes ?? {\n      [namespace]: accountType\n    });\n    await ConnectionController.reconnectExternal(authConnector);\n    ModalController.setLoading(false, ChainController.state.activeChain);\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SET_PREFERRED_ACCOUNT_TYPE',\n      properties: {\n        accountType,\n        network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n      }\n    });\n  },\n  async signMessage(message) {\n    return ConnectionController._getClient()?.signMessage(message);\n  },\n  parseUnits(value, decimals) {\n    return ConnectionController._getClient()?.parseUnits(value, decimals);\n  },\n  formatUnits(value, decimals) {\n    return ConnectionController._getClient()?.formatUnits(value, decimals);\n  },\n  async sendTransaction(args) {\n    return ConnectionController._getClient()?.sendTransaction(args);\n  },\n  async getCapabilities(params) {\n    return ConnectionController._getClient()?.getCapabilities(params);\n  },\n  async grantPermissions(params) {\n    return ConnectionController._getClient()?.grantPermissions(params);\n  },\n  async walletGetAssets(params) {\n    return ConnectionController._getClient()?.walletGetAssets(params) ?? {};\n  },\n  async estimateGas(args) {\n    return ConnectionController._getClient()?.estimateGas(args);\n  },\n  async writeContract(args) {\n    return ConnectionController._getClient()?.writeContract(args);\n  },\n  async getEnsAddress(value) {\n    return ConnectionController._getClient()?.getEnsAddress(value);\n  },\n  async getEnsAvatar(value) {\n    return ConnectionController._getClient()?.getEnsAvatar(value);\n  },\n  checkInstalled(ids) {\n    return ConnectionController._getClient()?.checkInstalled?.(ids) || false;\n  },\n  resetWcConnection() {\n    state.wcUri = undefined;\n    state.wcPairingExpiry = undefined;\n    state.wcLinking = undefined;\n    state.recentWallet = undefined;\n    state.status = 'disconnected';\n    TransactionsController.resetTransactions();\n    StorageUtil.deleteWalletConnectDeepLink();\n  },\n  resetUri() {\n    state.wcUri = undefined;\n    state.wcPairingExpiry = undefined;\n    wcConnectionPromise = undefined;\n  },\n  finalizeWcConnection() {\n    const {\n      wcLinking,\n      recentWallet\n    } = ConnectionController.state;\n    if (wcLinking) {\n      StorageUtil.setWalletConnectDeepLink(wcLinking);\n    }\n    if (recentWallet) {\n      StorageUtil.setAppKitRecent(recentWallet);\n    }\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'CONNECT_SUCCESS',\n      properties: {\n        method: wcLinking ? 'mobile' : 'qrcode',\n        name: RouterController.state.data?.wallet?.name || 'Unknown'\n      }\n    });\n  },\n  setWcBasic(wcBasic) {\n    state.wcBasic = wcBasic;\n  },\n  setUri(uri) {\n    state.wcUri = uri;\n    state.wcPairingExpiry = CoreHelperUtil.getPairingExpiry();\n  },\n  setWcLinking(wcLinking) {\n    state.wcLinking = wcLinking;\n  },\n  setWcError(wcError) {\n    state.wcError = wcError;\n    state.buffering = false;\n  },\n  setRecentWallet(wallet) {\n    state.recentWallet = wallet;\n  },\n  setBuffering(buffering) {\n    state.buffering = buffering;\n  },\n  setStatus(status) {\n    state.status = status;\n  },\n  async disconnect(namespace) {\n    try {\n      await ConnectionController._getClient()?.disconnect(namespace);\n    } catch (error) {\n      throw new AppKitError('Failed to disconnect', 'INTERNAL_SDK_ERROR', error);\n    }\n  },\n  setConnections(connections, chainNamespace) {\n    state.connections.set(chainNamespace, connections);\n  },\n  switchAccount({\n    connection,\n    address,\n    namespace\n  }) {\n    const connectedConnectorId = ConnectorController.state.activeConnectorIds[namespace];\n    const isConnectorConnected = connectedConnectorId === connection.connectorId;\n    if (isConnectorConnected) {\n      const currentNetwork = ChainController.state.activeCaipNetwork;\n      if (currentNetwork) {\n        const caipAddress = `${namespace}:${currentNetwork.id}:${address}`;\n        AccountController.setCaipAddress(caipAddress, namespace);\n      } else {\n        console.warn(`No current network found for namespace \"${namespace}\"`);\n      }\n    } else {\n      const connector = ConnectorController.getConnector(connection.connectorId);\n      if (connector) {\n        ConnectionController.connectExternal(connector, namespace);\n      } else {\n        console.warn(`No connector found for namespace \"${namespace}\"`);\n      }\n    }\n  }\n};\n// Export the controller wrapped with our error boundary\nexport const ConnectionController = withErrorBoundary(controller);","map":{"version":3,"names":["proxy","ref","subscribeKey","subKey","CoreHelperUtil","StorageUtil","AppKitError","withErrorBoundary","AccountController","ChainController","ConnectorController","EventsController","ModalController","RouterController","TransactionsController","state","connections","Map","wcError","buffering","status","wcConnectionPromise","controller","key","callback","_getClient","_client","setClient","client","connectWalletConnect","isTelegram","isSafari","isIos","undefined","isPairingExpired","wcPairingExpiry","link","wcUri","ConnectionController","catch","connectExternal","options","chain","setChain","setActiveNamespace","reconnectExternal","namespace","activeChain","setConnectorId","id","setPreferredAccountType","accountType","setLoading","authConnector","getAuthConnector","provider","setPreferredAccount","setPreferredAccountTypes","preferredAccountTypes","sendEvent","type","event","properties","network","activeCaipNetwork","caipNetworkId","signMessage","message","parseUnits","value","decimals","formatUnits","sendTransaction","args","getCapabilities","params","grantPermissions","walletGetAssets","estimateGas","writeContract","getEnsAddress","getEnsAvatar","checkInstalled","ids","resetWcConnection","wcLinking","recentWallet","resetTransactions","deleteWalletConnectDeepLink","resetUri","finalizeWcConnection","setWalletConnectDeepLink","setAppKitRecent","method","name","data","wallet","setWcBasic","wcBasic","setUri","uri","getPairingExpiry","setWcLinking","setWcError","setRecentWallet","setBuffering","setStatus","disconnect","error","setConnections","chainNamespace","set","switchAccount","connection","address","connectedConnectorId","activeConnectorIds","isConnectorConnected","connectorId","currentNetwork","caipAddress","setCaipAddress","console","warn","connector","getConnector"],"sources":["../../../../src/controllers/ConnectionController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}