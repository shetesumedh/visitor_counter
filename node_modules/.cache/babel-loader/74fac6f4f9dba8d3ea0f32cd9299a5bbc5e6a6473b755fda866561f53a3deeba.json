{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverMessageAddress = recoverMessageAddress;\nconst hashMessage_js_1 = require(\"./hashMessage.js\");\nconst recoverAddress_js_1 = require(\"./recoverAddress.js\");\nasync function recoverMessageAddress({\n  message,\n  signature\n}) {\n  return (0, recoverAddress_js_1.recoverAddress)({\n    hash: (0, hashMessage_js_1.hashMessage)(message),\n    signature\n  });\n}","map":{"version":3,"names":["exports","recoverMessageAddress","hashMessage_js_1","require","recoverAddress_js_1","message","signature","recoverAddress","hash","hashMessage"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/signature/recoverMessageAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashMessageErrorType, hashMessage } from './hashMessage.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverMessageAddressParameters = {\n  message: SignableMessage\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverMessageAddressReturnType = Address\n\nexport type RecoverMessageAddressErrorType =\n  | HashMessageErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverMessageAddress({\n  message,\n  signature,\n}: RecoverMessageAddressParameters): Promise<RecoverMessageAddressReturnType> {\n  return recoverAddress({ hash: hashMessage(message), signature })\n}\n"],"mappings":";;;;;AA4BAA,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAlBA,MAAAC,gBAAA,GAAAC,OAAA;AACA,MAAAC,mBAAA,GAAAD,OAAA;AAiBO,eAAeF,qBAAqBA,CAAC;EAC1CI,OAAO;EACPC;AAAS,CACuB;EAChC,OAAO,IAAAF,mBAAA,CAAAG,cAAc,EAAC;IAAEC,IAAI,EAAE,IAAAN,gBAAA,CAAAO,WAAW,EAACJ,OAAO,CAAC;IAAEC;EAAS,CAAE,CAAC;AAClE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}