{"ast":null,"code":"/** @deprecated use `Number` instead */\nexport function normalizeChainId(chainId) {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  if (typeof chainId === 'bigint') return Number(chainId);\n  if (typeof chainId === 'number') return chainId;\n  throw new Error(`Cannot normalize chainId \"${chainId}\" of type \"${typeof chainId}\"`);\n}","map":{"version":3,"names":["normalizeChainId","chainId","Number","parseInt","trim","substring","Error"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/utils/normalizeChainId.ts"],"sourcesContent":["/** @deprecated use `Number` instead */\nexport function normalizeChainId(chainId: bigint | number | string | unknown) {\n  if (typeof chainId === 'string')\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === '0x' ? 16 : 10,\n    )\n  if (typeof chainId === 'bigint') return Number(chainId)\n  if (typeof chainId === 'number') return chainId\n  throw new Error(\n    `Cannot normalize chainId \"${chainId}\" of type \"${typeof chainId}\"`,\n  )\n}\n"],"mappings":"AAAA;AACA,OAAM,SAAUA,gBAAgBA,CAACC,OAA2C;EAC1E,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAC7B,OAAOC,MAAM,CAACC,QAAQ,CACpBF,OAAO,EACPA,OAAO,CAACG,IAAI,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAClD;EACH,IAAI,OAAOJ,OAAO,KAAK,QAAQ,EAAE,OAAOC,MAAM,CAACD,OAAO,CAAC;EACvD,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE,OAAOA,OAAO;EAC/C,MAAM,IAAIK,KAAK,CACb,6BAA6BL,OAAO,cAAc,OAAOA,OAAO,GAAG,CACpE;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}