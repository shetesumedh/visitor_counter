{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeErc6492Signature = serializeErc6492Signature;\nconst bytes_js_1 = require(\"../../constants/bytes.js\");\nconst encodeAbiParameters_js_1 = require(\"../abi/encodeAbiParameters.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst toBytes_js_1 = require(\"../encoding/toBytes.js\");\nfunction serializeErc6492Signature(parameters) {\n  const {\n    address,\n    data,\n    signature,\n    to = 'hex'\n  } = parameters;\n  const signature_ = (0, concat_js_1.concatHex)([(0, encodeAbiParameters_js_1.encodeAbiParameters)([{\n    type: 'address'\n  }, {\n    type: 'bytes'\n  }, {\n    type: 'bytes'\n  }], [address, data, signature]), bytes_js_1.erc6492MagicBytes]);\n  if (to === 'hex') return signature_;\n  return (0, toBytes_js_1.hexToBytes)(signature_);\n}","map":{"version":3,"names":["exports","serializeErc6492Signature","bytes_js_1","require","encodeAbiParameters_js_1","concat_js_1","toBytes_js_1","parameters","address","data","signature","to","signature_","concatHex","encodeAbiParameters","type","erc6492MagicBytes","hexToBytes"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/signature/serializeErc6492Signature.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concatHex } from '../data/concat.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeErc6492SignatureParameters<to extends To = 'hex'> = {\n  /** The ERC-4337 Account Factory address to use for counterfactual verification. */\n  address: Address\n  /** Calldata to pass to deploy account (if not deployed) for counterfactual verification. */\n  data: Hex\n  /** The original signature. */\n  signature: Hex\n  to?: to | To | undefined\n}\n\nexport type SerializeErc6492SignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeErc6492SignatureErrorType = ErrorType\n\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature<to extends To = 'hex'>(\n  parameters: SerializeErc6492SignatureParameters<to>,\n): SerializeErc6492SignatureReturnType<to> {\n  const { address, data, signature, to = 'hex' } = parameters\n  const signature_ = concatHex([\n    encodeAbiParameters(\n      [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n      [address, data, signature],\n    ),\n    erc6492MagicBytes,\n  ])\n\n  if (to === 'hex') return signature_ as SerializeErc6492SignatureReturnType<to>\n  return hexToBytes(signature_) as SerializeErc6492SignatureReturnType<to>\n}\n"],"mappings":";;;;;AAoCAA,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAnCA,MAAAC,UAAA,GAAAC,OAAA;AAGA,MAAAC,wBAAA,GAAAD,OAAA;AACA,MAAAE,WAAA,GAAAF,OAAA;AACA,MAAAG,YAAA,GAAAH,OAAA;AA8BA,SAAgBF,yBAAyBA,CACvCM,UAAmD;EAEnD,MAAM;IAAEC,OAAO;IAAEC,IAAI;IAAEC,SAAS;IAAEC,EAAE,GAAG;EAAK,CAAE,GAAGJ,UAAU;EAC3D,MAAMK,UAAU,GAAG,IAAAP,WAAA,CAAAQ,SAAS,EAAC,CAC3B,IAAAT,wBAAA,CAAAU,mBAAmB,EACjB,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAE,EAAE;IAAEA,IAAI,EAAE;EAAO,CAAE,EAAE;IAAEA,IAAI,EAAE;EAAO,CAAE,CAAC,EAC3D,CAACP,OAAO,EAAEC,IAAI,EAAEC,SAAS,CAAC,CAC3B,EACDR,UAAA,CAAAc,iBAAiB,CAClB,CAAC;EAEF,IAAIL,EAAE,KAAK,KAAK,EAAE,OAAOC,UAAqD;EAC9E,OAAO,IAAAN,YAAA,CAAAW,UAAU,EAACL,UAAU,CAA4C;AAC1E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}