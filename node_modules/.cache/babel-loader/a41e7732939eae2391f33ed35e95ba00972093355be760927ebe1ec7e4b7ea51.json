{"ast":null,"code":"import { getPublicClient } from './getPublicClient.js';\n/** https://wagmi.sh/core/api/actions/watchPublicClient */\nexport function watchPublicClient(config, parameters) {\n  const {\n    onChange\n  } = parameters;\n  return config.subscribe(() => getPublicClient(config), onChange, {\n    equalityFn(a, b) {\n      return a?.uid === b?.uid;\n    }\n  });\n}","map":{"version":3,"names":["getPublicClient","watchPublicClient","config","parameters","onChange","subscribe","equalityFn","a","b","uid"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/watchPublicClient.ts"],"sourcesContent":["import type { Config } from '../createConfig.js'\nimport {\n  type GetPublicClientReturnType,\n  getPublicClient,\n} from './getPublicClient.js'\n\nexport type WatchPublicClientParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = {\n  onChange(\n    publicClient: GetPublicClientReturnType<config, chainId>,\n    prevPublicClient: GetPublicClientReturnType<config, chainId>,\n  ): void\n}\n\nexport type WatchPublicClientReturnType = () => void\n\n/** https://wagmi.sh/core/api/actions/watchPublicClient */\nexport function watchPublicClient<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: WatchPublicClientParameters<config, chainId>,\n): WatchPublicClientReturnType {\n  const { onChange } = parameters\n  return config.subscribe(\n    () => getPublicClient(config) as GetPublicClientReturnType<config, chainId>,\n    onChange,\n    {\n      equalityFn(a, b) {\n        return a?.uid === b?.uid\n      },\n    },\n  )\n}\n"],"mappings":"AACA,SAEEA,eAAe,QACV,sBAAsB;AAe7B;AACA,OAAM,SAAUC,iBAAiBA,CAI/BC,MAAc,EACdC,UAAwD;EAExD,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAC/B,OAAOD,MAAM,CAACG,SAAS,CACrB,MAAML,eAAe,CAACE,MAAM,CAA+C,EAC3EE,QAAQ,EACR;IACEE,UAAUA,CAACC,CAAC,EAAEC,CAAC;MACb,OAAOD,CAAC,EAAEE,GAAG,KAAKD,CAAC,EAAEC,GAAG;IAC1B;GACD,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}