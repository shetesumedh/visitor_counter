{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeDeployData = encodeDeployData;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst encodeAbiParameters_js_1 = require(\"./encodeAbiParameters.js\");\nconst docsPath = '/docs/contract/encodeDeployData';\nfunction encodeDeployData(parameters) {\n  const {\n    abi,\n    args,\n    bytecode\n  } = parameters;\n  if (!args || args.length === 0) return bytecode;\n  const description = abi.find(x => 'type' in x && x.type === 'constructor');\n  if (!description) throw new abi_js_1.AbiConstructorNotFoundError({\n    docsPath\n  });\n  if (!('inputs' in description)) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  if (!description.inputs || description.inputs.length === 0) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  const data = (0, encodeAbiParameters_js_1.encodeAbiParameters)(description.inputs, args);\n  return (0, concat_js_1.concatHex)([bytecode, data]);\n}","map":{"version":3,"names":["exports","encodeDeployData","abi_js_1","require","concat_js_1","encodeAbiParameters_js_1","docsPath","parameters","abi","args","bytecode","length","description","find","x","type","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","inputs","data","encodeAbiParameters","concatHex"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/abi/encodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  hasConstructor = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [Extract<abi[number], { type: 'constructor' }>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  abi: abi\n  bytecode: Hex\n} & UnionEvaluate<\n  hasConstructor extends false\n    ? { args?: undefined }\n    : readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n>\n\nexport type EncodeDeployDataReturnType = Hex\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: EncodeDeployDataParameters<abi>,\n): EncodeDeployDataReturnType {\n  const { abi, args, bytecode } = parameters as EncodeDeployDataParameters\n  if (!args || args.length === 0) return bytecode\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(description.inputs, args)\n  return concatHex([bytecode, data!])\n}\n"],"mappings":";;;;;AAiDAA,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AA/CA,MAAAC,QAAA,GAAAC,OAAA;AASA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,wBAAA,GAAAF,OAAA;AAKA,MAAMG,QAAQ,GAAG,iCAAiC;AAgClD,SAAgBL,gBAAgBA,CAC9BM,UAA2C;EAE3C,MAAM;IAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAQ,CAAE,GAAGH,UAAwC;EACxE,IAAI,CAACE,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,OAAOD,QAAQ;EAE/C,MAAME,WAAW,GAAGJ,GAAG,CAACK,IAAI,CAAEC,CAAC,IAAK,MAAM,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,aAAa,CAAC;EAC5E,IAAI,CAACH,WAAW,EAAE,MAAM,IAAIV,QAAA,CAAAc,2BAA2B,CAAC;IAAEV;EAAQ,CAAE,CAAC;EACrE,IAAI,EAAE,QAAQ,IAAIM,WAAW,CAAC,EAC5B,MAAM,IAAIV,QAAA,CAAAe,iCAAiC,CAAC;IAAEX;EAAQ,CAAE,CAAC;EAC3D,IAAI,CAACM,WAAW,CAACM,MAAM,IAAIN,WAAW,CAACM,MAAM,CAACP,MAAM,KAAK,CAAC,EACxD,MAAM,IAAIT,QAAA,CAAAe,iCAAiC,CAAC;IAAEX;EAAQ,CAAE,CAAC;EAE3D,MAAMa,IAAI,GAAG,IAAAd,wBAAA,CAAAe,mBAAmB,EAACR,WAAW,CAACM,MAAM,EAAET,IAAI,CAAC;EAC1D,OAAO,IAAAL,WAAA,CAAAiB,SAAS,EAAC,CAACX,QAAQ,EAAES,IAAK,CAAC,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}