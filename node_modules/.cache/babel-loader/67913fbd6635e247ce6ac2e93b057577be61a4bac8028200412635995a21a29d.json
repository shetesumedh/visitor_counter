{"ast":null,"code":"import { hexToString } from 'viem';\nimport { call, getTransaction, waitForTransactionReceipt as viem_waitForTransactionReceipt } from 'viem/actions';\nimport { getAction } from '../utils/getAction.js';\nexport async function waitForTransactionReceipt(config, parameters) {\n  const {\n    chainId,\n    timeout = 0,\n    ...rest\n  } = parameters;\n  const client = config.getClient({\n    chainId\n  });\n  const action = getAction(client, viem_waitForTransactionReceipt, 'waitForTransactionReceipt');\n  const receipt = await action({\n    ...rest,\n    timeout\n  });\n  if (receipt.status === 'reverted') {\n    const action_getTransaction = getAction(client, getTransaction, 'getTransaction');\n    const txn = await action_getTransaction({\n      hash: receipt.transactionHash\n    });\n    const action_call = getAction(client, call, 'call');\n    const code = await action_call({\n      ...txn,\n      data: txn.input,\n      gasPrice: txn.type !== 'eip1559' ? txn.gasPrice : undefined,\n      maxFeePerGas: txn.type === 'eip1559' ? txn.maxFeePerGas : undefined,\n      maxPriorityFeePerGas: txn.type === 'eip1559' ? txn.maxPriorityFeePerGas : undefined\n    });\n    const reason = code?.data ? hexToString(`0x${code.data.substring(138)}`) : 'unknown reason';\n    throw new Error(reason);\n  }\n  return {\n    ...receipt,\n    chainId: client.chain.id\n  };\n}","map":{"version":3,"names":["hexToString","call","getTransaction","waitForTransactionReceipt","viem_waitForTransactionReceipt","getAction","config","parameters","chainId","timeout","rest","client","getClient","action","receipt","status","action_getTransaction","txn","hash","transactionHash","action_call","code","data","input","gasPrice","type","undefined","maxFeePerGas","maxPriorityFeePerGas","reason","substring","Error","chain","id"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/waitForTransactionReceipt.ts"],"sourcesContent":["import type { Chain } from 'viem'\nimport { hexToString } from 'viem'\nimport {\n  call,\n  getTransaction,\n  type WaitForTransactionReceiptErrorType as viem_WaitForTransactionReceiptErrorType,\n  type WaitForTransactionReceiptParameters as viem_WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType as viem_WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt as viem_waitForTransactionReceipt,\n} from 'viem/actions'\n\nimport type { Config } from '../createConfig.js'\nimport type { SelectChains } from '../types/chain.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Compute, IsNarrowable } from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\n\nexport type WaitForTransactionReceiptParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<\n  viem_WaitForTransactionReceiptParameters & ChainIdParameter<config, chainId>\n>\n\nexport type WaitForTransactionReceiptReturnType<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = Compute<\n  {\n    [key in keyof chains]: viem_WaitForTransactionReceiptReturnType<\n      IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined\n    > & { chainId: chains[key]['id'] }\n  }[number]\n>\n\nexport type WaitForTransactionReceiptErrorType =\n  viem_WaitForTransactionReceiptErrorType\n\nexport async function waitForTransactionReceipt<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: WaitForTransactionReceiptParameters<config, chainId>,\n): Promise<WaitForTransactionReceiptReturnType<config, chainId>> {\n  const { chainId, timeout = 0, ...rest } = parameters\n\n  const client = config.getClient({ chainId })\n  const action = getAction(\n    client,\n    viem_waitForTransactionReceipt,\n    'waitForTransactionReceipt',\n  )\n  const receipt = await action({ ...rest, timeout })\n\n  if (receipt.status === 'reverted') {\n    const action_getTransaction = getAction(\n      client,\n      getTransaction,\n      'getTransaction',\n    )\n    const txn = await action_getTransaction({ hash: receipt.transactionHash })\n    const action_call = getAction(client, call, 'call')\n    const code = await action_call({\n      ...(txn as any),\n      data: txn.input,\n      gasPrice: txn.type !== 'eip1559' ? txn.gasPrice : undefined,\n      maxFeePerGas: txn.type === 'eip1559' ? txn.maxFeePerGas : undefined,\n      maxPriorityFeePerGas:\n        txn.type === 'eip1559' ? txn.maxPriorityFeePerGas : undefined,\n    })\n    const reason = code?.data\n      ? hexToString(`0x${code.data.substring(138)}`)\n      : 'unknown reason'\n    throw new Error(reason)\n  }\n\n  return {\n    ...receipt,\n    chainId: client.chain.id,\n  } as WaitForTransactionReceiptReturnType<config, chainId>\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,MAAM;AAClC,SACEC,IAAI,EACJC,cAAc,EAIdC,yBAAyB,IAAIC,8BAA8B,QACtD,cAAc;AAMrB,SAASC,SAAS,QAAQ,uBAAuB;AA2BjD,OAAO,eAAeF,yBAAyBA,CAI7CG,MAAc,EACdC,UAAgE;EAEhE,MAAM;IAAEC,OAAO;IAAEC,OAAO,GAAG,CAAC;IAAE,GAAGC;EAAI,CAAE,GAAGH,UAAU;EAEpD,MAAMI,MAAM,GAAGL,MAAM,CAACM,SAAS,CAAC;IAAEJ;EAAO,CAAE,CAAC;EAC5C,MAAMK,MAAM,GAAGR,SAAS,CACtBM,MAAM,EACNP,8BAA8B,EAC9B,2BAA2B,CAC5B;EACD,MAAMU,OAAO,GAAG,MAAMD,MAAM,CAAC;IAAE,GAAGH,IAAI;IAAED;EAAO,CAAE,CAAC;EAElD,IAAIK,OAAO,CAACC,MAAM,KAAK,UAAU,EAAE;IACjC,MAAMC,qBAAqB,GAAGX,SAAS,CACrCM,MAAM,EACNT,cAAc,EACd,gBAAgB,CACjB;IACD,MAAMe,GAAG,GAAG,MAAMD,qBAAqB,CAAC;MAAEE,IAAI,EAAEJ,OAAO,CAACK;IAAe,CAAE,CAAC;IAC1E,MAAMC,WAAW,GAAGf,SAAS,CAACM,MAAM,EAAEV,IAAI,EAAE,MAAM,CAAC;IACnD,MAAMoB,IAAI,GAAG,MAAMD,WAAW,CAAC;MAC7B,GAAIH,GAAW;MACfK,IAAI,EAAEL,GAAG,CAACM,KAAK;MACfC,QAAQ,EAAEP,GAAG,CAACQ,IAAI,KAAK,SAAS,GAAGR,GAAG,CAACO,QAAQ,GAAGE,SAAS;MAC3DC,YAAY,EAAEV,GAAG,CAACQ,IAAI,KAAK,SAAS,GAAGR,GAAG,CAACU,YAAY,GAAGD,SAAS;MACnEE,oBAAoB,EAClBX,GAAG,CAACQ,IAAI,KAAK,SAAS,GAAGR,GAAG,CAACW,oBAAoB,GAAGF;KACvD,CAAC;IACF,MAAMG,MAAM,GAAGR,IAAI,EAAEC,IAAI,GACrBtB,WAAW,CAAC,KAAKqB,IAAI,CAACC,IAAI,CAACQ,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAC5C,gBAAgB;IACpB,MAAM,IAAIC,KAAK,CAACF,MAAM,CAAC;EACzB;EAEA,OAAO;IACL,GAAGf,OAAO;IACVN,OAAO,EAAEG,MAAM,CAACqB,KAAK,CAACC;GACiC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}