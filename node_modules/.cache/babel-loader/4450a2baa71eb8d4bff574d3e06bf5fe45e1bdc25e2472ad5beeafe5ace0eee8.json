{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeStateMapping = serializeStateMapping;\nexports.serializeAccountStateOverride = serializeAccountStateOverride;\nexports.serializeStateOverride = serializeStateOverride;\nconst address_js_1 = require(\"../errors/address.js\");\nconst data_js_1 = require(\"../errors/data.js\");\nconst stateOverride_js_1 = require(\"../errors/stateOverride.js\");\nconst isAddress_js_1 = require(\"./address/isAddress.js\");\nconst toHex_js_1 = require(\"./encoding/toHex.js\");\nfunction serializeStateMapping(stateMapping) {\n  if (!stateMapping || stateMapping.length === 0) return undefined;\n  return stateMapping.reduce((acc, {\n    slot,\n    value\n  }) => {\n    if (slot.length !== 66) throw new data_js_1.InvalidBytesLengthError({\n      size: slot.length,\n      targetSize: 66,\n      type: 'hex'\n    });\n    if (value.length !== 66) throw new data_js_1.InvalidBytesLengthError({\n      size: value.length,\n      targetSize: 66,\n      type: 'hex'\n    });\n    acc[slot] = value;\n    return acc;\n  }, {});\n}\nfunction serializeAccountStateOverride(parameters) {\n  const {\n    balance,\n    nonce,\n    state,\n    stateDiff,\n    code\n  } = parameters;\n  const rpcAccountStateOverride = {};\n  if (code !== undefined) rpcAccountStateOverride.code = code;\n  if (balance !== undefined) rpcAccountStateOverride.balance = (0, toHex_js_1.numberToHex)(balance);\n  if (nonce !== undefined) rpcAccountStateOverride.nonce = (0, toHex_js_1.numberToHex)(nonce);\n  if (state !== undefined) rpcAccountStateOverride.state = serializeStateMapping(state);\n  if (stateDiff !== undefined) {\n    if (rpcAccountStateOverride.state) throw new stateOverride_js_1.StateAssignmentConflictError();\n    rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff);\n  }\n  return rpcAccountStateOverride;\n}\nfunction serializeStateOverride(parameters) {\n  if (!parameters) return undefined;\n  const rpcStateOverride = {};\n  for (const {\n    address,\n    ...accountState\n  } of parameters) {\n    if (!(0, isAddress_js_1.isAddress)(address, {\n      strict: false\n    })) throw new address_js_1.InvalidAddressError({\n      address\n    });\n    if (rpcStateOverride[address]) throw new stateOverride_js_1.AccountStateConflictError({\n      address: address\n    });\n    rpcStateOverride[address] = serializeAccountStateOverride(accountState);\n  }\n  return rpcStateOverride;\n}","map":{"version":3,"names":["exports","serializeStateMapping","serializeAccountStateOverride","serializeStateOverride","address_js_1","require","data_js_1","stateOverride_js_1","isAddress_js_1","toHex_js_1","stateMapping","length","undefined","reduce","acc","slot","value","InvalidBytesLengthError","size","targetSize","type","parameters","balance","nonce","state","stateDiff","code","rpcAccountStateOverride","numberToHex","StateAssignmentConflictError","rpcStateOverride","address","accountState","isAddress","strict","InvalidAddressError","AccountStateConflictError"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/stateOverride.ts"],"sourcesContent":["import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport {\n  InvalidBytesLengthError,\n  type InvalidBytesLengthErrorType,\n} from '../errors/data.js'\nimport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from '../errors/stateOverride.js'\nimport type {\n  RpcAccountStateOverride,\n  RpcStateMapping,\n  RpcStateOverride,\n} from '../types/rpc.js'\nimport type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { isAddress } from './address/isAddress.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\n\ntype SerializeStateMappingParameters = StateMapping | undefined\n\ntype SerializeStateMappingErrorType = InvalidBytesLengthErrorType\n\n/** @internal */\nexport function serializeStateMapping(\n  stateMapping: SerializeStateMappingParameters,\n): RpcStateMapping | undefined {\n  if (!stateMapping || stateMapping.length === 0) return undefined\n  return stateMapping.reduce((acc, { slot, value }) => {\n    if (slot.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: slot.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    if (value.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: value.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    acc[slot] = value\n    return acc\n  }, {} as RpcStateMapping)\n}\n\ntype SerializeAccountStateOverrideParameters = Omit<\n  StateOverride[number],\n  'address'\n>\n\ntype SerializeAccountStateOverrideErrorType =\n  | NumberToHexErrorType\n  | StateAssignmentConflictErrorType\n  | SerializeStateMappingErrorType\n\n/** @internal */\nexport function serializeAccountStateOverride(\n  parameters: SerializeAccountStateOverrideParameters,\n): RpcAccountStateOverride {\n  const { balance, nonce, state, stateDiff, code } = parameters\n  const rpcAccountStateOverride: RpcAccountStateOverride = {}\n  if (code !== undefined) rpcAccountStateOverride.code = code\n  if (balance !== undefined)\n    rpcAccountStateOverride.balance = numberToHex(balance)\n  if (nonce !== undefined) rpcAccountStateOverride.nonce = numberToHex(nonce)\n  if (state !== undefined)\n    rpcAccountStateOverride.state = serializeStateMapping(state)\n  if (stateDiff !== undefined) {\n    if (rpcAccountStateOverride.state) throw new StateAssignmentConflictError()\n    rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff)\n  }\n  return rpcAccountStateOverride\n}\n\ntype SerializeStateOverrideParameters = StateOverride | undefined\n\nexport type SerializeStateOverrideErrorType =\n  | InvalidAddressErrorType\n  | AccountStateConflictErrorType\n  | SerializeAccountStateOverrideErrorType\n\n/** @internal */\nexport function serializeStateOverride(\n  parameters?: SerializeStateOverrideParameters,\n): RpcStateOverride | undefined {\n  if (!parameters) return undefined\n  const rpcStateOverride: RpcStateOverride = {}\n  for (const { address, ...accountState } of parameters) {\n    if (!isAddress(address, { strict: false }))\n      throw new InvalidAddressError({ address })\n    if (rpcStateOverride[address])\n      throw new AccountStateConflictError({ address: address })\n    rpcStateOverride[address] = serializeAccountStateOverride(accountState)\n  }\n  return rpcStateOverride\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}