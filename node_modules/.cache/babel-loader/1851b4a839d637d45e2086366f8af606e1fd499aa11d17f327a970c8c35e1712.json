{"ast":null,"code":"'use client';\n\nimport { getChainId, watchChainId } from '@wagmi/core';\nimport { useSyncExternalStore } from 'react';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useChainId */\nexport function useChainId(parameters = {}) {\n  const config = useConfig(parameters);\n  return useSyncExternalStore(onChange => watchChainId(config, {\n    onChange\n  }), () => getChainId(config), () => getChainId(config));\n}","map":{"version":3,"names":["getChainId","watchChainId","useSyncExternalStore","useConfig","useChainId","parameters","config","onChange"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useChainId.ts"],"sourcesContent":["'use client'\n\nimport {\n  type Config,\n  type GetChainIdReturnType,\n  type ResolvedRegister,\n  getChainId,\n  watchChainId,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseChainIdParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseChainIdReturnType<config extends Config = Config> =\n  GetChainIdReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useChainId */\nexport function useChainId<config extends Config = ResolvedRegister['config']>(\n  parameters: UseChainIdParameters<config> = {},\n): UseChainIdReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchChainId(config, { onChange }),\n    () => getChainId(config),\n    () => getChainId(config),\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAIEA,UAAU,EACVC,YAAY,QACP,aAAa;AACpB,SAASC,oBAAoB,QAAQ,OAAO;AAG5C,SAASC,SAAS,QAAQ,gBAAgB;AAQ1C;AACA,OAAM,SAAUC,UAAUA,CACxBC,UAAA,GAA2C,EAAE;EAE7C,MAAMC,MAAM,GAAGH,SAAS,CAACE,UAAU,CAAC;EAEpC,OAAOH,oBAAoB,CACxBK,QAAQ,IAAKN,YAAY,CAACK,MAAM,EAAE;IAAEC;EAAQ,CAAE,CAAC,EAChD,MAAMP,UAAU,CAACM,MAAM,CAAC,EACxB,MAAMN,UAAU,CAACM,MAAM,CAAC,CACzB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}