{"ast":null,"code":"import { secp256k1 } from '@noble/curves/secp256k1';\nimport { bytesToHex } from '../../utils/encoding/toHex.js';\nimport { publicKeyToAddress } from './publicKeyToAddress.js';\n/**\n * @description Converts an ECDSA private key to an address.\n *\n * @param privateKey The private key to convert.\n *\n * @returns The address.\n */\nexport function privateKeyToAddress(privateKey) {\n  const publicKey = bytesToHex(secp256k1.getPublicKey(privateKey.slice(2), false));\n  return publicKeyToAddress(publicKey);\n}","map":{"version":3,"names":["secp256k1","bytesToHex","publicKeyToAddress","privateKeyToAddress","privateKey","publicKey","getPublicKey","slice"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/accounts/utils/privateKeyToAddress.ts"],"sourcesContent":["import { secp256k1 } from '@noble/curves/secp256k1'\nimport type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type BytesToHexErrorType,\n  bytesToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type PublicKeyToAddressErrorType,\n  publicKeyToAddress,\n} from './publicKeyToAddress.js'\n\nexport type PrivateKeyToAddressErrorType =\n  | BytesToHexErrorType\n  | PublicKeyToAddressErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA private key to an address.\n *\n * @param privateKey The private key to convert.\n *\n * @returns The address.\n */\nexport function privateKeyToAddress(privateKey: Hex): Address {\n  const publicKey = bytesToHex(\n    secp256k1.getPublicKey(privateKey.slice(2), false),\n  )\n  return publicKeyToAddress(publicKey)\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AAKnD,SAEEC,UAAU,QACL,+BAA+B;AACtC,SAEEC,kBAAkB,QACb,yBAAyB;AAOhC;;;;;;;AAOA,OAAM,SAAUC,mBAAmBA,CAACC,UAAe;EACjD,MAAMC,SAAS,GAAGJ,UAAU,CAC1BD,SAAS,CAACM,YAAY,CAACF,UAAU,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CACnD;EACD,OAAOL,kBAAkB,CAACG,SAAS,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}