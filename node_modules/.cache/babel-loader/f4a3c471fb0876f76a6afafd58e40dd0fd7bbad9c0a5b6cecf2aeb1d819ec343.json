{"ast":null,"code":"'use client';\n\nimport { useMutation } from '@tanstack/react-query';\nimport { showCallsStatusMutationOptions } from '@wagmi/core/query';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useShowCallsStatus */\nexport function useShowCallsStatus(parameters = {}) {\n  const {\n    mutation\n  } = parameters;\n  const config = useConfig(parameters);\n  const mutationOptions = showCallsStatusMutationOptions(config);\n  const {\n    mutate,\n    mutateAsync,\n    ...result\n  } = useMutation({\n    ...mutation,\n    ...mutationOptions\n  });\n  return {\n    ...result,\n    showCallsStatus: mutate,\n    showCallsStatusAsync: mutateAsync\n  };\n}","map":{"version":3,"names":["useMutation","showCallsStatusMutationOptions","useConfig","useShowCallsStatus","parameters","mutation","config","mutationOptions","mutate","mutateAsync","result","showCallsStatus","showCallsStatusAsync"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useShowCallsStatus.ts"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type {\n  Config,\n  ResolvedRegister,\n  ShowCallsStatusErrorType,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type ShowCallsStatusData,\n  type ShowCallsStatusMutate,\n  type ShowCallsStatusMutateAsync,\n  type ShowCallsStatusVariables,\n  showCallsStatusMutationOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseShowCallsStatusParameters<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  ConfigParameter<config> & {\n    mutation?:\n      | UseMutationParameters<\n          ShowCallsStatusData,\n          ShowCallsStatusErrorType,\n          ShowCallsStatusVariables,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseShowCallsStatusReturnType<context = unknown> = Compute<\n  UseMutationReturnType<\n    ShowCallsStatusData,\n    ShowCallsStatusErrorType,\n    ShowCallsStatusVariables,\n    context\n  > & {\n    showCallsStatus: ShowCallsStatusMutate\n    showCallsStatusAsync: ShowCallsStatusMutateAsync\n  }\n>\n\n/** https://wagmi.sh/react/api/hooks/useShowCallsStatus */\nexport function useShowCallsStatus<\n  config extends Config = ResolvedRegister['config'],\n  context = unknown,\n>(\n  parameters: UseShowCallsStatusParameters<config, context> = {},\n): UseShowCallsStatusReturnType<context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = showCallsStatusMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  type Return = UseShowCallsStatusReturnType\n  return {\n    ...result,\n    showCallsStatus: mutate as Return['showCallsStatus'],\n    showCallsStatusAsync: mutateAsync as Return['showCallsStatusAsync'],\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,uBAAuB;AAOnD,SAKEC,8BAA8B,QACzB,mBAAmB;AAO1B,SAASC,SAAS,QAAQ,gBAAgB;AA8B1C;AACA,OAAM,SAAUC,kBAAkBA,CAIhCC,UAAA,GAA4D,EAAE;EAE9D,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAE/B,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMG,eAAe,GAAGN,8BAA8B,CAACK,MAAM,CAAC;EAC9D,MAAM;IAAEE,MAAM;IAAEC,WAAW;IAAE,GAAGC;EAAM,CAAE,GAAGV,WAAW,CAAC;IACrD,GAAGK,QAAQ;IACX,GAAGE;GACJ,CAAC;EAGF,OAAO;IACL,GAAGG,MAAM;IACTC,eAAe,EAAEH,MAAmC;IACpDI,oBAAoB,EAAEH;GACvB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}