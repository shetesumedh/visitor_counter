{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockNotFoundError = void 0;\nconst base_js_1 = require(\"./base.js\");\nclass BlockNotFoundError extends base_js_1.BaseError {\n  constructor({\n    blockHash,\n    blockNumber\n  }) {\n    let identifier = 'Block';\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`;\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`;\n    super(`${identifier} could not be found.`, {\n      name: 'BlockNotFoundError'\n    });\n  }\n}\nexports.BlockNotFoundError = BlockNotFoundError;","map":{"version":3,"names":["base_js_1","require","BlockNotFoundError","BaseError","constructor","blockHash","blockNumber","identifier","name","exports"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/errors/block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAKA,MAAaC,kBAAmB,SAAQF,SAAA,CAAAG,SAAS;EAC/CC,YAAY;IACVC,SAAS;IACTC;EAAW,CAIZ;IACC,IAAIC,UAAU,GAAG,OAAO;IACxB,IAAIF,SAAS,EAAEE,UAAU,GAAG,kBAAkBF,SAAS,GAAG;IAC1D,IAAIC,WAAW,EAAEC,UAAU,GAAG,oBAAoBD,WAAW,GAAG;IAChE,KAAK,CAAC,GAAGC,UAAU,sBAAsB,EAAE;MAAEC,IAAI,EAAE;IAAoB,CAAE,CAAC;EAC5E;;AAZFC,OAAA,CAAAP,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}