{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeFunctionData = decodeFunctionData;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst slice_js_1 = require(\"../data/slice.js\");\nconst toFunctionSelector_js_1 = require(\"../hash/toFunctionSelector.js\");\nconst decodeAbiParameters_js_1 = require(\"./decodeAbiParameters.js\");\nconst formatAbiItem_js_1 = require(\"./formatAbiItem.js\");\nfunction decodeFunctionData(parameters) {\n  const {\n    abi,\n    data\n  } = parameters;\n  const signature = (0, slice_js_1.slice)(data, 0, 4);\n  const description = abi.find(x => x.type === 'function' && signature === (0, toFunctionSelector_js_1.toFunctionSelector)((0, formatAbiItem_js_1.formatAbiItem)(x)));\n  if (!description) throw new abi_js_1.AbiFunctionSignatureNotFoundError(signature, {\n    docsPath: '/docs/contract/decodeFunctionData'\n  });\n  return {\n    functionName: description.name,\n    args: 'inputs' in description && description.inputs && description.inputs.length > 0 ? (0, decodeAbiParameters_js_1.decodeAbiParameters)(description.inputs, (0, slice_js_1.slice)(data, 4)) : undefined\n  };\n}","map":{"version":3,"names":["exports","decodeFunctionData","abi_js_1","require","slice_js_1","toFunctionSelector_js_1","decodeAbiParameters_js_1","formatAbiItem_js_1","parameters","abi","data","signature","slice","description","find","x","type","toFunctionSelector","formatAbiItem","AbiFunctionSignatureNotFoundError","docsPath","functionName","name","args","inputs","length","decodeAbiParameters","undefined"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/abi/decodeFunctionData.ts"],"sourcesContent":["import type { Abi, AbiStateMutability } from 'abitype'\n\nimport { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: abi\n  data: Hex\n}\n\nexport type DecodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allFunctionNames extends\n    ContractFunctionName<abi> = ContractFunctionName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [functionName in allFunctionNames]: {\n          args: ContractFunctionArgs<abi, AbiStateMutability, functionName>\n          functionName: functionName\n        }\n      }[allFunctionNames]\n    >\n  : {\n      args: readonly unknown[] | undefined\n      functionName: string\n    }\n\nexport type DecodeFunctionDataErrorType =\n  | AbiFunctionSignatureNotFoundError\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | SliceErrorType\n  | ErrorType\n\nexport function decodeFunctionData<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeFunctionDataParameters<abi>,\n) {\n  const { abi, data } = parameters as DecodeFunctionDataParameters\n  const signature = slice(data, 0, 4)\n  const description = abi.find(\n    (x) =>\n      x.type === 'function' &&\n      signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!description)\n    throw new AbiFunctionSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeFunctionData',\n    })\n  return {\n    functionName: (description as { name: string }).name,\n    args: ('inputs' in description &&\n    description.inputs &&\n    description.inputs.length > 0\n      ? decodeAbiParameters(description.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n  } as DecodeFunctionDataReturnType<abi>\n}\n"],"mappings":";;;;;AAuDAA,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AArDA,MAAAC,QAAA,GAAAC,OAAA;AAQA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,uBAAA,GAAAF,OAAA;AAIA,MAAAG,wBAAA,GAAAH,OAAA;AAIA,MAAAI,kBAAA,GAAAJ,OAAA;AAoCA,SAAgBF,kBAAkBA,CAChCO,UAA6C;EAE7C,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAE,GAAGF,UAA0C;EAChE,MAAMG,SAAS,GAAG,IAAAP,UAAA,CAAAQ,KAAK,EAACF,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACnC,MAAMG,WAAW,GAAGJ,GAAG,CAACK,IAAI,CACzBC,CAAC,IACAA,CAAC,CAACC,IAAI,KAAK,UAAU,IACrBL,SAAS,KAAK,IAAAN,uBAAA,CAAAY,kBAAkB,EAAC,IAAAV,kBAAA,CAAAW,aAAa,EAACH,CAAC,CAAC,CAAC,CACrD;EACD,IAAI,CAACF,WAAW,EACd,MAAM,IAAIX,QAAA,CAAAiB,iCAAiC,CAACR,SAAS,EAAE;IACrDS,QAAQ,EAAE;GACX,CAAC;EACJ,OAAO;IACLC,YAAY,EAAGR,WAAgC,CAACS,IAAI;IACpDC,IAAI,EAAG,QAAQ,IAAIV,WAAW,IAC9BA,WAAW,CAACW,MAAM,IAClBX,WAAW,CAACW,MAAM,CAACC,MAAM,GAAG,CAAC,GACzB,IAAAnB,wBAAA,CAAAoB,mBAAmB,EAACb,WAAW,CAACW,MAAM,EAAE,IAAApB,UAAA,CAAAQ,KAAK,EAACF,IAAI,EAAE,CAAC,CAAC,CAAC,GACvDiB;GACgC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}