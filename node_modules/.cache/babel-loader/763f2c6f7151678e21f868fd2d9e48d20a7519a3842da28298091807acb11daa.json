{"ast":null,"code":"import { standardErrorCodes } from './constants.js';\nimport { getMessageFromCode } from './utils.js';\nexport const standardErrors = {\n  rpc: {\n    parse: arg => getEthJsonRpcError(standardErrorCodes.rpc.parse, arg),\n    invalidRequest: arg => getEthJsonRpcError(standardErrorCodes.rpc.invalidRequest, arg),\n    invalidParams: arg => getEthJsonRpcError(standardErrorCodes.rpc.invalidParams, arg),\n    methodNotFound: arg => getEthJsonRpcError(standardErrorCodes.rpc.methodNotFound, arg),\n    internal: arg => getEthJsonRpcError(standardErrorCodes.rpc.internal, arg),\n    server: opts => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.');\n      }\n      const {\n        code\n      } = opts;\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n      }\n      return getEthJsonRpcError(code, opts);\n    },\n    invalidInput: arg => getEthJsonRpcError(standardErrorCodes.rpc.invalidInput, arg),\n    resourceNotFound: arg => getEthJsonRpcError(standardErrorCodes.rpc.resourceNotFound, arg),\n    resourceUnavailable: arg => getEthJsonRpcError(standardErrorCodes.rpc.resourceUnavailable, arg),\n    transactionRejected: arg => getEthJsonRpcError(standardErrorCodes.rpc.transactionRejected, arg),\n    methodNotSupported: arg => getEthJsonRpcError(standardErrorCodes.rpc.methodNotSupported, arg),\n    limitExceeded: arg => getEthJsonRpcError(standardErrorCodes.rpc.limitExceeded, arg)\n  },\n  provider: {\n    userRejectedRequest: arg => {\n      return getEthProviderError(standardErrorCodes.provider.userRejectedRequest, arg);\n    },\n    unauthorized: arg => {\n      return getEthProviderError(standardErrorCodes.provider.unauthorized, arg);\n    },\n    unsupportedMethod: arg => {\n      return getEthProviderError(standardErrorCodes.provider.unsupportedMethod, arg);\n    },\n    disconnected: arg => {\n      return getEthProviderError(standardErrorCodes.provider.disconnected, arg);\n    },\n    chainDisconnected: arg => {\n      return getEthProviderError(standardErrorCodes.provider.chainDisconnected, arg);\n    },\n    unsupportedChain: arg => {\n      return getEthProviderError(standardErrorCodes.provider.unsupportedChain, arg);\n    },\n    custom: opts => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.');\n      }\n      const {\n        code,\n        message,\n        data\n      } = opts;\n      if (!message || typeof message !== 'string') {\n        throw new Error('\"message\" must be a nonempty string');\n      }\n      return new EthereumProviderError(code, message, data);\n    }\n  }\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new EthereumRpcError(code, message || getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new EthereumProviderError(code, message || getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n  if (arg) {\n    if (typeof arg === 'string') {\n      return [arg];\n    }\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      const {\n        message,\n        data\n      } = arg;\n      if (message && typeof message !== 'string') {\n        throw new Error('Must specify string message.');\n      }\n      return [message || undefined, data];\n    }\n  }\n  return [];\n}\nclass EthereumRpcError extends Error {\n  constructor(code, message, data) {\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== 'string') {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n}\nclass EthereumProviderError extends EthereumRpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor(code, message, data) {\n    if (!isValidEthProviderCode(code)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(code, message, data);\n  }\n}\nclass ActionableInsufficientBalanceError extends EthereumRpcError {}\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nexport function isActionableHttpRequestError(errorObject) {\n  return typeof errorObject === 'object' && errorObject !== null && 'code' in errorObject && 'data' in errorObject && errorObject.code === -32090 && typeof errorObject.data === 'object' && errorObject.data !== null && 'type' in errorObject.data && errorObject.data.type === 'INSUFFICIENT_FUNDS';\n}\nexport function isViemError(error) {\n  // Check if object and has code, message, and details\n  return typeof error === 'object' && error !== null && 'details' in error;\n}\nexport function viemHttpErrorToProviderError(error) {\n  try {\n    const details = JSON.parse(error.details);\n    return new EthereumRpcError(details.code, details.message, details.data);\n  } catch (_) {\n    return null;\n  }\n}","map":{"version":3,"names":["standardErrorCodes","getMessageFromCode","standardErrors","rpc","parse","arg","getEthJsonRpcError","invalidRequest","invalidParams","methodNotFound","internal","server","opts","Array","isArray","Error","code","Number","isInteger","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","provider","userRejectedRequest","getEthProviderError","unauthorized","unsupportedMethod","disconnected","chainDisconnected","unsupportedChain","custom","message","data","EthereumProviderError","parseOpts","EthereumRpcError","undefined","constructor","isValidEthProviderCode","ActionableInsufficientBalanceError","isActionableHttpRequestError","errorObject","type","isViemError","error","viemHttpErrorToProviderError","details","JSON","_"],"sources":["../../../src/core/error/errors.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}