{"ast":null,"code":"import { reconnect } from '../actions/reconnect.js';\nexport function reconnectMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return reconnect(config, variables);\n    },\n    mutationKey: ['reconnect']\n  };\n}","map":{"version":3,"names":["reconnect","reconnectMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/query/reconnect.ts"],"sourcesContent":["import type { MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type ReconnectErrorType,\n  type ReconnectParameters,\n  type ReconnectReturnType,\n  reconnect,\n} from '../actions/reconnect.js'\nimport type { Config } from '../createConfig.js'\nimport type { Compute } from '../types/utils.js'\nimport type { Mutate, MutateAsync } from './types.js'\n\nexport function reconnectMutationOptions(config: Config) {\n  return {\n    mutationFn(variables) {\n      return reconnect(config, variables)\n    },\n    mutationKey: ['reconnect'],\n  } as const satisfies MutationOptions<\n    ReconnectData,\n    ReconnectErrorType,\n    ReconnectVariables\n  >\n}\n\nexport type ReconnectData = Compute<ReconnectReturnType>\n\nexport type ReconnectVariables = ReconnectParameters | undefined\n\nexport type ReconnectMutate<context = unknown> = Mutate<\n  ReconnectData,\n  ReconnectErrorType,\n  ReconnectVariables,\n  context\n>\n\nexport type ReconnectMutateAsync<context = unknown> = MutateAsync<\n  ReconnectData,\n  ReconnectErrorType,\n  ReconnectVariables,\n  context\n>\n"],"mappings":"AAEA,SAIEA,SAAS,QACJ,yBAAyB;AAKhC,OAAM,SAAUC,wBAAwBA,CAACC,MAAc;EACrD,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,SAAS,CAACE,MAAM,EAAEE,SAAS,CAAC;IACrC,CAAC;IACDC,WAAW,EAAE,CAAC,WAAW;GAK1B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}