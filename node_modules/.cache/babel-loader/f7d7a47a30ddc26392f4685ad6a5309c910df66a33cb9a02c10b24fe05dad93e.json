{"ast":null,"code":"'use client';\n\nimport { useMutation } from '@tanstack/react-query';\nimport { sendCallsMutationOptions } from '@wagmi/core/query';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useSendCalls */\nexport function useSendCalls(parameters = {}) {\n  const {\n    mutation\n  } = parameters;\n  const config = useConfig(parameters);\n  const mutationOptions = sendCallsMutationOptions(config);\n  const {\n    mutate,\n    mutateAsync,\n    ...result\n  } = useMutation({\n    ...mutation,\n    ...mutationOptions\n  });\n  return {\n    ...result,\n    sendCalls: mutate,\n    sendCallsAsync: mutateAsync\n  };\n}","map":{"version":3,"names":["useMutation","sendCallsMutationOptions","useConfig","useSendCalls","parameters","mutation","config","mutationOptions","mutate","mutateAsync","result","sendCalls","sendCallsAsync"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useSendCalls.ts"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type { Config, ResolvedRegister, SendCallsErrorType } from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type SendCallsData,\n  type SendCallsMutate,\n  type SendCallsMutateAsync,\n  type SendCallsVariables,\n  sendCallsMutationOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseSendCallsParameters<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  ConfigParameter<config> & {\n    mutation?:\n      | UseMutationParameters<\n          SendCallsData,\n          SendCallsErrorType,\n          SendCallsVariables<config, config['chains'][number]['id']>,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseSendCallsReturnType<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  UseMutationReturnType<\n    SendCallsData,\n    SendCallsErrorType,\n    SendCallsVariables<config, config['chains'][number]['id']>,\n    context\n  > & {\n    sendCalls: SendCallsMutate<config, context>\n    sendCallsAsync: SendCallsMutateAsync<config, context>\n  }\n>\n\n/** https://wagmi.sh/react/api/hooks/useSendCalls */\nexport function useSendCalls<\n  config extends Config = ResolvedRegister['config'],\n  context = unknown,\n>(\n  parameters: UseSendCallsParameters<config, context> = {},\n): UseSendCallsReturnType<config, context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = sendCallsMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  type Return = UseSendCallsReturnType<config, context>\n  return {\n    ...result,\n    sendCalls: mutate as Return['sendCalls'],\n    sendCallsAsync: mutateAsync as Return['sendCallsAsync'],\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,uBAAuB;AAGnD,SAKEC,wBAAwB,QACnB,mBAAmB;AAO1B,SAASC,SAAS,QAAQ,gBAAgB;AAiC1C;AACA,OAAM,SAAUC,YAAYA,CAI1BC,UAAA,GAAsD,EAAE;EAExD,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAE/B,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMG,eAAe,GAAGN,wBAAwB,CAACK,MAAM,CAAC;EACxD,MAAM;IAAEE,MAAM;IAAEC,WAAW;IAAE,GAAGC;EAAM,CAAE,GAAGV,WAAW,CAAC;IACrD,GAAGK,QAAQ;IACX,GAAGE;GACJ,CAAC;EAGF,OAAO;IACL,GAAGG,MAAM;IACTC,SAAS,EAAEH,MAA6B;IACxCI,cAAc,EAAEH;GACjB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}