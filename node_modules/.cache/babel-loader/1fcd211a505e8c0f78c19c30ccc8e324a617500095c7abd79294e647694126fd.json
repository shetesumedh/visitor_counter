{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MobileRelay = void 0;\nconst util_1 = require(\"../../core/util\");\nconst WalletLinkRelay_1 = require(\"../walletlink/WalletLinkRelay\");\nconst MobileRelayUI_1 = require(\"./MobileRelayUI\");\nclass MobileRelay extends WalletLinkRelay_1.WalletLinkRelay {\n  constructor(options) {\n    var _a;\n    super(options);\n    this._enableMobileWalletLink = (_a = options.enableMobileWalletLink) !== null && _a !== void 0 ? _a : false;\n  }\n  // override\n  requestEthereumAccounts() {\n    if (this._enableMobileWalletLink) {\n      return super.requestEthereumAccounts();\n    }\n    // TODO: Implement & present in-page wallet picker instead of navigating to www.coinbase.com/connect-dapp\n    return {\n      promise: new Promise(() => {\n        const location = (0, util_1.getLocation)();\n        location.href = `https://go.cb-w.com/dapp?cb_url=${encodeURIComponent(location.href)}`;\n      }),\n      cancel: () => {}\n    };\n  }\n  // override\n  publishWeb3RequestEvent(id, request) {\n    super.publishWeb3RequestEvent(id, request);\n    if (!(this._enableMobileWalletLink && this.ui instanceof MobileRelayUI_1.MobileRelayUI)) return;\n    let navigatedToCBW = false;\n    // For mobile relay requests, open the Coinbase Wallet app\n    switch (request.method) {\n      case 'requestEthereumAccounts':\n      case 'connectAndSignIn':\n        navigatedToCBW = true;\n        this.ui.openCoinbaseWalletDeeplink(this.getQRCodeUrl());\n        break;\n      case 'switchEthereumChain':\n        // switchEthereumChain doesn't need to open the app\n        return;\n      default:\n        navigatedToCBW = true;\n        this.ui.openCoinbaseWalletDeeplink();\n        break;\n    }\n    // If the user navigated to the Coinbase Wallet app, then we need to check\n    // for unseen events once the user returns to the browser\n    if (navigatedToCBW) {\n      window.addEventListener('blur', () => {\n        window.addEventListener('focus', () => {\n          this.connection.checkUnseenEvents();\n        }, {\n          once: true\n        });\n      }, {\n        once: true\n      });\n    }\n  }\n  // override\n  handleWeb3ResponseMessage(message) {\n    super.handleWeb3ResponseMessage(message);\n  }\n  connectAndSignIn(params) {\n    if (!this._enableMobileWalletLink) {\n      throw new Error('connectAndSignIn is supported only when enableMobileWalletLink is on');\n    }\n    return this.sendRequest({\n      method: 'connectAndSignIn',\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl,\n        domain: window.location.hostname,\n        aud: window.location.href,\n        version: '1',\n        type: 'eip4361',\n        nonce: params.nonce,\n        iat: new Date().toISOString(),\n        chainId: `eip155:${this.dappDefaultChain}`,\n        statement: params.statement,\n        resources: params.resources\n      }\n    });\n  }\n}\nexports.MobileRelay = MobileRelay;","map":{"version":3,"names":["Object","defineProperty","exports","value","MobileRelay","util_1","require","WalletLinkRelay_1","MobileRelayUI_1","WalletLinkRelay","constructor","options","_a","_enableMobileWalletLink","enableMobileWalletLink","requestEthereumAccounts","promise","Promise","location","getLocation","href","encodeURIComponent","cancel","publishWeb3RequestEvent","id","request","ui","MobileRelayUI","navigatedToCBW","method","openCoinbaseWalletDeeplink","getQRCodeUrl","window","addEventListener","connection","checkUnseenEvents","once","handleWeb3ResponseMessage","message","connectAndSignIn","params","Error","sendRequest","appName","appLogoUrl","domain","hostname","aud","version","type","nonce","iat","Date","toISOString","chainId","dappDefaultChain","statement","resources"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/cbw-sdk/dist/relay/mobile/MobileRelay.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MobileRelay = void 0;\nconst util_1 = require(\"../../core/util\");\nconst WalletLinkRelay_1 = require(\"../walletlink/WalletLinkRelay\");\nconst MobileRelayUI_1 = require(\"./MobileRelayUI\");\nclass MobileRelay extends WalletLinkRelay_1.WalletLinkRelay {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._enableMobileWalletLink = (_a = options.enableMobileWalletLink) !== null && _a !== void 0 ? _a : false;\n    }\n    // override\n    requestEthereumAccounts() {\n        if (this._enableMobileWalletLink) {\n            return super.requestEthereumAccounts();\n        }\n        // TODO: Implement & present in-page wallet picker instead of navigating to www.coinbase.com/connect-dapp\n        return {\n            promise: new Promise(() => {\n                const location = (0, util_1.getLocation)();\n                location.href = `https://go.cb-w.com/dapp?cb_url=${encodeURIComponent(location.href)}`;\n            }),\n            cancel: () => { },\n        };\n    }\n    // override\n    publishWeb3RequestEvent(id, request) {\n        super.publishWeb3RequestEvent(id, request);\n        if (!(this._enableMobileWalletLink && this.ui instanceof MobileRelayUI_1.MobileRelayUI))\n            return;\n        let navigatedToCBW = false;\n        // For mobile relay requests, open the Coinbase Wallet app\n        switch (request.method) {\n            case 'requestEthereumAccounts':\n            case 'connectAndSignIn':\n                navigatedToCBW = true;\n                this.ui.openCoinbaseWalletDeeplink(this.getQRCodeUrl());\n                break;\n            case 'switchEthereumChain':\n                // switchEthereumChain doesn't need to open the app\n                return;\n            default:\n                navigatedToCBW = true;\n                this.ui.openCoinbaseWalletDeeplink();\n                break;\n        }\n        // If the user navigated to the Coinbase Wallet app, then we need to check\n        // for unseen events once the user returns to the browser\n        if (navigatedToCBW) {\n            window.addEventListener('blur', () => {\n                window.addEventListener('focus', () => {\n                    this.connection.checkUnseenEvents();\n                }, { once: true });\n            }, { once: true });\n        }\n    }\n    // override\n    handleWeb3ResponseMessage(message) {\n        super.handleWeb3ResponseMessage(message);\n    }\n    connectAndSignIn(params) {\n        if (!this._enableMobileWalletLink) {\n            throw new Error('connectAndSignIn is supported only when enableMobileWalletLink is on');\n        }\n        return this.sendRequest({\n            method: 'connectAndSignIn',\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl,\n                domain: window.location.hostname,\n                aud: window.location.href,\n                version: '1',\n                type: 'eip4361',\n                nonce: params.nonce,\n                iat: new Date().toISOString(),\n                chainId: `eip155:${this.dappDefaultChain}`,\n                statement: params.statement,\n                resources: params.resources,\n            },\n        });\n    }\n}\nexports.MobileRelay = MobileRelay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}