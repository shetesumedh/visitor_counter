{"ast":null,"code":"'use client';\n\nimport { getCapabilitiesQueryOptions } from '@wagmi/core/query';\nimport { useQuery } from '../utils/query.js';\nimport { useAccount } from './useAccount.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useCapabilities */\nexport function useCapabilities(parameters = {}) {\n  const {\n    account,\n    query = {}\n  } = parameters;\n  const {\n    address\n  } = useAccount();\n  const config = useConfig(parameters);\n  const options = getCapabilitiesQueryOptions(config, {\n    ...parameters,\n    account: account ?? address\n  });\n  return useQuery({\n    ...query,\n    ...options\n  });\n}","map":{"version":3,"names":["getCapabilitiesQueryOptions","useQuery","useAccount","useConfig","useCapabilities","parameters","account","query","address","config","options"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useCapabilities.ts"],"sourcesContent":["'use client'\n\nimport type {\n  Config,\n  GetCapabilitiesErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type GetCapabilitiesData,\n  type GetCapabilitiesOptions,\n  type GetCapabilitiesQueryFnData,\n  type GetCapabilitiesQueryKey,\n  getCapabilitiesQueryOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter, QueryParameter } from '../types/properties.js'\nimport { type UseQueryReturnType, useQuery } from '../utils/query.js'\nimport { useAccount } from './useAccount.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseCapabilitiesParameters<\n  config extends Config = Config,\n  chainId extends config['chains'][number]['id'] | undefined = undefined,\n  selectData = GetCapabilitiesData<config, chainId>,\n> = Compute<\n  GetCapabilitiesOptions<config, chainId> &\n    ConfigParameter<config> &\n    QueryParameter<\n      GetCapabilitiesQueryFnData<config, chainId>,\n      GetCapabilitiesErrorType,\n      selectData,\n      GetCapabilitiesQueryKey<config, chainId>\n    >\n>\n\nexport type UseCapabilitiesReturnType<\n  config extends Config = Config,\n  chainId extends config['chains'][number]['id'] | undefined = undefined,\n  selectData = GetCapabilitiesData<config, chainId>,\n> = UseQueryReturnType<selectData, GetCapabilitiesErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useCapabilities */\nexport function useCapabilities<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends config['chains'][number]['id'] | undefined = undefined,\n  selectData = GetCapabilitiesData<config, chainId>,\n>(\n  parameters: UseCapabilitiesParameters<config, chainId, selectData> = {},\n): UseCapabilitiesReturnType<config, chainId, selectData> {\n  const { account, query = {} } = parameters\n\n  const { address } = useAccount()\n  const config = useConfig(parameters)\n\n  const options = getCapabilitiesQueryOptions(config, {\n    ...parameters,\n    account: account ?? address,\n  })\n\n  return useQuery({ ...query, ...options })\n}\n"],"mappings":"AAAA,YAAY;;AAQZ,SAKEA,2BAA2B,QACtB,mBAAmB;AAG1B,SAAkCC,QAAQ,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAuB1C;AACA,OAAM,SAAUC,eAAeA,CAK7BC,UAAA,GAAqE,EAAE;EAEvE,MAAM;IAAEC,OAAO;IAAEC,KAAK,GAAG;EAAE,CAAE,GAAGF,UAAU;EAE1C,MAAM;IAAEG;EAAO,CAAE,GAAGN,UAAU,EAAE;EAChC,MAAMO,MAAM,GAAGN,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMK,OAAO,GAAGV,2BAA2B,CAACS,MAAM,EAAE;IAClD,GAAGJ,UAAU;IACbC,OAAO,EAAEA,OAAO,IAAIE;GACrB,CAAC;EAEF,OAAOP,QAAQ,CAAC;IAAE,GAAGM,KAAK;IAAE,GAAGG;EAAO,CAAE,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}