{"ast":null,"code":"import { BaseError } from '../../errors/base.js';\nimport { prettyPrint } from '../../errors/transaction.js';\nimport { formatGwei } from '../../utils/index.js';\nexport class UserOperationExecutionError extends BaseError {\n  constructor(cause, {\n    callData,\n    callGasLimit,\n    docsPath,\n    factory,\n    factoryData,\n    initCode,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    paymaster,\n    paymasterAndData,\n    paymasterData,\n    paymasterPostOpGasLimit,\n    paymasterVerificationGasLimit,\n    preVerificationGas,\n    sender,\n    signature,\n    verificationGasLimit\n  }) {\n    const prettyArgs = prettyPrint({\n      callData,\n      callGasLimit,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas: typeof maxFeePerGas !== 'undefined' && `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' && `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit\n    });\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [...(cause.metaMessages ? [...cause.metaMessages, ' '] : []), 'Request Arguments:', prettyArgs].filter(Boolean),\n      name: 'UserOperationExecutionError'\n    });\n    Object.defineProperty(this, \"cause\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.cause = cause;\n  }\n}\nexport class UserOperationReceiptNotFoundError extends BaseError {\n  constructor({\n    hash\n  }) {\n    super(`User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`, {\n      name: 'UserOperationReceiptNotFoundError'\n    });\n  }\n}\nexport class UserOperationNotFoundError extends BaseError {\n  constructor({\n    hash\n  }) {\n    super(`User Operation with hash \"${hash}\" could not be found.`, {\n      name: 'UserOperationNotFoundError'\n    });\n  }\n}\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n  constructor({\n    hash\n  }) {\n    super(`Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`, {\n      name: 'WaitForUserOperationReceiptTimeoutError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","prettyPrint","formatGwei","UserOperationExecutionError","constructor","cause","callData","callGasLimit","docsPath","factory","factoryData","initCode","maxFeePerGas","maxPriorityFeePerGas","nonce","paymaster","paymasterAndData","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","preVerificationGas","sender","signature","verificationGasLimit","prettyArgs","shortMessage","metaMessages","filter","Boolean","name","Object","defineProperty","UserOperationReceiptNotFoundError","hash","UserOperationNotFoundError","WaitForUserOperationReceiptTimeoutError"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/account-abstraction/errors/userOperation.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport { prettyPrint } from '../../errors/transaction.js'\nimport type { Hash } from '../../types/misc.js'\nimport { formatGwei } from '../../utils/index.js'\nimport type { UserOperation } from '../types/userOperation.js'\n\nexport type UserOperationExecutionErrorType = UserOperationExecutionError & {\n  name: 'UserOperationExecutionError'\n}\nexport class UserOperationExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      callData,\n      callGasLimit,\n      docsPath,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    }: UserOperation & {\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      callData,\n      callGasLimit,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'UserOperationExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type UserOperationReceiptNotFoundErrorType =\n  UserOperationReceiptNotFoundError & {\n    name: 'UserOperationReceiptNotFoundError'\n  }\nexport class UserOperationReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`,\n      { name: 'UserOperationReceiptNotFoundError' },\n    )\n  }\n}\n\nexport type UserOperationNotFoundErrorType = UserOperationNotFoundError & {\n  name: 'UserOperationNotFoundError'\n}\nexport class UserOperationNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(`User Operation with hash \"${hash}\" could not be found.`, {\n      name: 'UserOperationNotFoundError',\n    })\n  }\n}\n\nexport type WaitForUserOperationReceiptTimeoutErrorType =\n  WaitForUserOperationReceiptTimeoutError & {\n    name: 'WaitForUserOperationReceiptTimeoutError'\n  }\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForUserOperationReceiptTimeoutError' },\n    )\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,SAASC,UAAU,QAAQ,sBAAsB;AAMjD,OAAM,MAAOC,2BAA4B,SAAQH,SAAS;EAGxDI,YACEC,KAAgB,EAChB;IACEC,QAAQ;IACRC,YAAY;IACZC,QAAQ;IACRC,OAAO;IACPC,WAAW;IACXC,QAAQ;IACRC,YAAY;IACZC,oBAAoB;IACpBC,KAAK;IACLC,SAAS;IACTC,gBAAgB;IAChBC,aAAa;IACbC,uBAAuB;IACvBC,6BAA6B;IAC7BC,kBAAkB;IAClBC,MAAM;IACNC,SAAS;IACTC;EAAoB,CAGrB;IAED,MAAMC,UAAU,GAAGvB,WAAW,CAAC;MAC7BK,QAAQ;MACRC,YAAY;MACZE,OAAO;MACPC,WAAW;MACXC,QAAQ;MACRC,YAAY,EACV,OAAOA,YAAY,KAAK,WAAW,IACnC,GAAGV,UAAU,CAACU,YAAY,CAAC,OAAO;MACpCC,oBAAoB,EAClB,OAAOA,oBAAoB,KAAK,WAAW,IAC3C,GAAGX,UAAU,CAACW,oBAAoB,CAAC,OAAO;MAC5CC,KAAK;MACLC,SAAS;MACTC,gBAAgB;MAChBC,aAAa;MACbC,uBAAuB;MACvBC,6BAA6B;MAC7BC,kBAAkB;MAClBC,MAAM;MACNC,SAAS;MACTC;KACD,CAAC;IAEF,KAAK,CAAClB,KAAK,CAACoB,YAAY,EAAE;MACxBpB,KAAK;MACLG,QAAQ;MACRkB,YAAY,EAAE,CACZ,IAAIrB,KAAK,CAACqB,YAAY,GAAG,CAAC,GAAGrB,KAAK,CAACqB,YAAY,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAC3D,oBAAoB,EACpBF,UAAU,CACX,CAACG,MAAM,CAACC,OAAO,CAAa;MAC7BC,IAAI,EAAE;KACP,CAAC;IA5DKC,MAAA,CAAAC,cAAA;;;;;;IA6DP,IAAI,CAAC1B,KAAK,GAAGA,KAAK;EACpB;;AAOF,OAAM,MAAO2B,iCAAkC,SAAQhC,SAAS;EAC9DI,YAAY;IAAE6B;EAAI,CAAkB;IAClC,KAAK,CACH,qCAAqCA,IAAI,2EAA2E,EACpH;MAAEJ,IAAI,EAAE;IAAmC,CAAE,CAC9C;EACH;;AAMF,OAAM,MAAOK,0BAA2B,SAAQlC,SAAS;EACvDI,YAAY;IAAE6B;EAAI,CAAkB;IAClC,KAAK,CAAC,6BAA6BA,IAAI,uBAAuB,EAAE;MAC9DJ,IAAI,EAAE;KACP,CAAC;EACJ;;AAOF,OAAM,MAAOM,uCAAwC,SAAQnC,SAAS;EACpEI,YAAY;IAAE6B;EAAI,CAAkB;IAClC,KAAK,CACH,yDAAyDA,IAAI,oBAAoB,EACjF;MAAEJ,IAAI,EAAE;IAAyC,CAAE,CACpD;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}