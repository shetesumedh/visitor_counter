{"ast":null,"code":"'use client';\n\nimport { createContext, createElement } from 'react';\nimport { Hydrate } from './hydrate.js';\nexport const WagmiContext = createContext(undefined);\nexport function WagmiProvider(parameters) {\n  const {\n    children,\n    config\n  } = parameters;\n  const props = {\n    value: config\n  };\n  return createElement(Hydrate, parameters, createElement(WagmiContext.Provider, props, children));\n}","map":{"version":3,"names":["createContext","createElement","Hydrate","WagmiContext","undefined","WagmiProvider","parameters","children","config","props","value","Provider"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/context.ts"],"sourcesContent":["'use client'\n\nimport type { ResolvedRegister, State } from '@wagmi/core'\nimport { createContext, createElement } from 'react'\nimport { Hydrate } from './hydrate.js'\n\nexport const WagmiContext = createContext<\n  ResolvedRegister['config'] | undefined\n>(undefined)\n\nexport type WagmiProviderProps = {\n  config: ResolvedRegister['config']\n  initialState?: State | undefined\n  reconnectOnMount?: boolean | undefined\n}\n\nexport function WagmiProvider(\n  parameters: React.PropsWithChildren<WagmiProviderProps>,\n) {\n  const { children, config } = parameters\n\n  const props = { value: config }\n  return createElement(\n    Hydrate,\n    parameters,\n    createElement(WagmiContext.Provider, props, children),\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAGZ,SAASA,aAAa,EAAEC,aAAa,QAAQ,OAAO;AACpD,SAASC,OAAO,QAAQ,cAAc;AAEtC,OAAO,MAAMC,YAAY,GAAGH,aAAa,CAEvCI,SAAS,CAAC;AAQZ,OAAM,SAAUC,aAAaA,CAC3BC,UAAuD;EAEvD,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAE,GAAGF,UAAU;EAEvC,MAAMG,KAAK,GAAG;IAAEC,KAAK,EAAEF;EAAM,CAAE;EAC/B,OAAOP,aAAa,CAClBC,OAAO,EACPI,UAAU,EACVL,aAAa,CAACE,YAAY,CAACQ,QAAQ,EAAEF,KAAK,EAAEF,QAAQ,CAAC,CACtD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}