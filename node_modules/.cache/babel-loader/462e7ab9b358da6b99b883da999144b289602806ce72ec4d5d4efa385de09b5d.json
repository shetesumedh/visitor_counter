{"ast":null,"code":"import { simulateContract } from '../actions/simulateContract.js';\nimport { filterQueryOptions } from './utils.js';\nexport function simulateContractQueryOptions(config, options = {}) {\n  return {\n    async queryFn({\n      queryKey\n    }) {\n      const {\n        abi,\n        connector\n      } = options;\n      if (!abi) throw new Error('abi is required');\n      const {\n        scopeKey: _,\n        ...parameters\n      } = queryKey[1];\n      const {\n        address,\n        functionName\n      } = parameters;\n      if (!address) throw new Error('address is required');\n      if (!functionName) throw new Error('functionName is required');\n      return simulateContract(config, {\n        abi,\n        connector,\n        ...parameters\n      });\n    },\n    queryKey: simulateContractQueryKey(options)\n  };\n}\nexport function simulateContractQueryKey(options = {}) {\n  const {\n    abi: _,\n    connector: _c,\n    ...rest\n  } = options;\n  return ['simulateContract', filterQueryOptions(rest)];\n}","map":{"version":3,"names":["simulateContract","filterQueryOptions","simulateContractQueryOptions","config","options","queryFn","queryKey","abi","connector","Error","scopeKey","_","parameters","address","functionName","simulateContractQueryKey","_c","rest"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/query/simulateContract.ts"],"sourcesContent":["import type { QueryOptions } from '@tanstack/query-core'\nimport type { Abi, ContractFunctionArgs, ContractFunctionName } from 'viem'\n\nimport {\n  type SimulateContractErrorType,\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../actions/simulateContract.js'\nimport type { Config } from '../createConfig.js'\nimport type { ScopeKeyParameter } from '../types/properties.js'\nimport type { UnionExactPartial } from '../types/utils.js'\nimport { filterQueryOptions } from './utils.js'\n\nexport type SimulateContractOptions<\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n> = UnionExactPartial<\n  SimulateContractParameters<abi, functionName, args, config, chainId>\n> &\n  ScopeKeyParameter\n\nexport function simulateContractQueryOptions<\n  config extends Config,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainId extends config['chains'][number]['id'] | undefined,\n>(\n  config: config,\n  options: SimulateContractOptions<\n    abi,\n    functionName,\n    args,\n    config,\n    chainId\n  > = {} as any,\n) {\n  return {\n    async queryFn({ queryKey }) {\n      const { abi, connector } = options\n      if (!abi) throw new Error('abi is required')\n      const { scopeKey: _, ...parameters } = queryKey[1]\n      const { address, functionName } = parameters\n      if (!address) throw new Error('address is required')\n      if (!functionName) throw new Error('functionName is required')\n      return simulateContract(config, {\n        abi,\n        connector,\n        ...(parameters as any),\n      })\n    },\n    queryKey: simulateContractQueryKey(options),\n  } as const satisfies QueryOptions<\n    SimulateContractQueryFnData<abi, functionName, args, config, chainId>,\n    SimulateContractErrorType,\n    SimulateContractData<abi, functionName, args, config, chainId>,\n    SimulateContractQueryKey<abi, functionName, args, config, chainId>\n  >\n}\n\nexport type SimulateContractQueryFnData<\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n> = SimulateContractReturnType<abi, functionName, args, config, chainId>\n\nexport type SimulateContractData<\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n> = SimulateContractQueryFnData<abi, functionName, args, config, chainId>\n\nexport function simulateContractQueryKey<\n  config extends Config,\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainId extends config['chains'][number]['id'] | undefined,\n>(\n  options: SimulateContractOptions<\n    abi,\n    functionName,\n    args,\n    config,\n    chainId\n  > = {} as any,\n) {\n  const { abi: _, connector: _c, ...rest } = options\n  return ['simulateContract', filterQueryOptions(rest)] as const\n}\n\nexport type SimulateContractQueryKey<\n  abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n> = ReturnType<\n  typeof simulateContractQueryKey<config, abi, functionName, args, chainId>\n>\n"],"mappings":"AAGA,SAIEA,gBAAgB,QACX,gCAAgC;AAIvC,SAASC,kBAAkB,QAAQ,YAAY;AAiB/C,OAAM,SAAUC,4BAA4BA,CAW1CC,MAAc,EACdC,OAAA,GAMI,EAAS;EAEb,OAAO;IACL,MAAMC,OAAOA,CAAC;MAAEC;IAAQ,CAAE;MACxB,MAAM;QAAEC,GAAG;QAAEC;MAAS,CAAE,GAAGJ,OAAO;MAClC,IAAI,CAACG,GAAG,EAAE,MAAM,IAAIE,KAAK,CAAC,iBAAiB,CAAC;MAC5C,MAAM;QAAEC,QAAQ,EAAEC,CAAC;QAAE,GAAGC;MAAU,CAAE,GAAGN,QAAQ,CAAC,CAAC,CAAC;MAClD,MAAM;QAAEO,OAAO;QAAEC;MAAY,CAAE,GAAGF,UAAU;MAC5C,IAAI,CAACC,OAAO,EAAE,MAAM,IAAIJ,KAAK,CAAC,qBAAqB,CAAC;MACpD,IAAI,CAACK,YAAY,EAAE,MAAM,IAAIL,KAAK,CAAC,0BAA0B,CAAC;MAC9D,OAAOT,gBAAgB,CAACG,MAAM,EAAE;QAC9BI,GAAG;QACHC,SAAS;QACT,GAAII;OACL,CAAC;IACJ,CAAC;IACDN,QAAQ,EAAES,wBAAwB,CAACX,OAAO;GAM3C;AACH;AA0BA,OAAM,SAAUW,wBAAwBA,CAWtCX,OAAA,GAMI,EAAS;EAEb,MAAM;IAAEG,GAAG,EAAEI,CAAC;IAAEH,SAAS,EAAEQ,EAAE;IAAE,GAAGC;EAAI,CAAE,GAAGb,OAAO;EAClD,OAAO,CAAC,kBAAkB,EAAEH,kBAAkB,CAACgB,IAAI,CAAC,CAAU;AAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}