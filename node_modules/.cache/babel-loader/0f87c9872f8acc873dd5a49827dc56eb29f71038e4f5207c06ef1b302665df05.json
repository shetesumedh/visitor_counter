{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\n// prototype class for hash functions\nfunction Hash(blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize);\n  this._finalSize = finalSize;\n  this._blockSize = blockSize;\n  this._len = 0;\n}\nHash.prototype.update = function (data, enc) {\n  /* eslint no-param-reassign: 0 */\n  data = toBuffer(data, enc || 'utf8');\n  var block = this._block;\n  var blockSize = this._blockSize;\n  var length = data.length;\n  var accum = this._len;\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize;\n    var remainder = Math.min(length - offset, blockSize - assigned);\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i];\n    }\n    accum += remainder;\n    offset += remainder;\n    if (accum % blockSize === 0) {\n      this._update(block);\n    }\n  }\n  this._len += length;\n  return this;\n};\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize;\n  this._block[rem] = 0x80;\n\n  /*\n   * zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n   * non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n   */\n  this._block.fill(0, rem + 1);\n  if (rem >= this._finalSize) {\n    this._update(this._block);\n    this._block.fill(0);\n  }\n  var bits = this._len * 8;\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4);\n\n    // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0;\n    var highBits = (bits - lowBits) / 0x100000000;\n    this._block.writeUInt32BE(highBits, this._blockSize - 8);\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n  }\n  this._update(this._block);\n  var hash = this._hash();\n  return enc ? hash.toString(enc) : hash;\n};\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass');\n};\nmodule.exports = Hash;","map":{"version":3,"names":["Buffer","require","toBuffer","Hash","blockSize","finalSize","_block","alloc","_finalSize","_blockSize","_len","prototype","update","data","enc","block","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","rem","fill","bits","writeUInt32BE","lowBits","highBits","hash","_hash","toString","Error","module","exports"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/sha.js/hash.js"],"sourcesContent":["'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\n// prototype class for hash functions\nfunction Hash(blockSize, finalSize) {\n\tthis._block = Buffer.alloc(blockSize);\n\tthis._finalSize = finalSize;\n\tthis._blockSize = blockSize;\n\tthis._len = 0;\n}\n\nHash.prototype.update = function (data, enc) {\n\t/* eslint no-param-reassign: 0 */\n\tdata = toBuffer(data, enc || 'utf8');\n\n\tvar block = this._block;\n\tvar blockSize = this._blockSize;\n\tvar length = data.length;\n\tvar accum = this._len;\n\n\tfor (var offset = 0; offset < length;) {\n\t\tvar assigned = accum % blockSize;\n\t\tvar remainder = Math.min(length - offset, blockSize - assigned);\n\n\t\tfor (var i = 0; i < remainder; i++) {\n\t\t\tblock[assigned + i] = data[offset + i];\n\t\t}\n\n\t\taccum += remainder;\n\t\toffset += remainder;\n\n\t\tif ((accum % blockSize) === 0) {\n\t\t\tthis._update(block);\n\t\t}\n\t}\n\n\tthis._len += length;\n\treturn this;\n};\n\nHash.prototype.digest = function (enc) {\n\tvar rem = this._len % this._blockSize;\n\n\tthis._block[rem] = 0x80;\n\n\t/*\n\t * zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n\t * non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n\t */\n\tthis._block.fill(0, rem + 1);\n\n\tif (rem >= this._finalSize) {\n\t\tthis._update(this._block);\n\t\tthis._block.fill(0);\n\t}\n\n\tvar bits = this._len * 8;\n\n\t// uint32\n\tif (bits <= 0xffffffff) {\n\t\tthis._block.writeUInt32BE(bits, this._blockSize - 4);\n\n\t\t// uint64\n\t} else {\n\t\tvar lowBits = (bits & 0xffffffff) >>> 0;\n\t\tvar highBits = (bits - lowBits) / 0x100000000;\n\n\t\tthis._block.writeUInt32BE(highBits, this._blockSize - 8);\n\t\tthis._block.writeUInt32BE(lowBits, this._blockSize - 4);\n\t}\n\n\tthis._update(this._block);\n\tvar hash = this._hash();\n\n\treturn enc ? hash.toString(enc) : hash;\n};\n\nHash.prototype._update = function () {\n\tthrow new Error('_update must be implemented by subclass');\n};\n\nmodule.exports = Hash;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}