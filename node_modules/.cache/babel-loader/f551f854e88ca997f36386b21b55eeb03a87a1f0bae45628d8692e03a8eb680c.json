{"ast":null,"code":"import { hexToBigInt, isAddress } from 'viem';\nimport { keccak256, numberToHex, slice, toHex } from 'viem';\nimport { standardErrors } from '../../core/error/errors.js';\nimport { logDialogActionClicked, logDialogDismissed, logDialogShown } from '../../core/telemetry/events/dialog.js';\nimport { config, store } from '../../store/store.js';\nimport { initDialog } from '../../ui/Dialog/index.js';\nimport { get } from '../../util/get.js';\nimport { waitForCallsStatus } from 'viem/actions';\nimport { getCryptoKeyAccount } from '../../kms/crypto-key/index.js';\nimport { spendPermissionManagerAddress } from './utils/constants.js';\n// ***************************************************************\n// Utility\n// ***************************************************************\nexport function getSenderFromRequest(request) {\n  var _a;\n  if (!Array.isArray(request.params)) {\n    return null;\n  }\n  switch (request.method) {\n    case 'personal_sign':\n      return request.params[1];\n    case 'eth_signTypedData_v4':\n      return request.params[0];\n    case 'eth_signTransaction':\n    case 'eth_sendTransaction':\n    case 'wallet_sendCalls':\n      return (_a = request.params[0]) === null || _a === void 0 ? void 0 : _a.from;\n    default:\n      return null;\n  }\n}\nexport function addSenderToRequest(request, sender) {\n  if (!Array.isArray(request.params)) {\n    throw standardErrors.rpc.invalidParams();\n  }\n  const params = [...request.params];\n  switch (request.method) {\n    case 'eth_signTransaction':\n    case 'eth_sendTransaction':\n    case 'wallet_sendCalls':\n      params[0].from = sender;\n      break;\n    case 'eth_signTypedData_v4':\n      params[0] = sender;\n      break;\n    case 'personal_sign':\n      params[1] = sender;\n      break;\n    default:\n      break;\n  }\n  return Object.assign(Object.assign({}, request), {\n    params\n  });\n}\nexport function assertParamsChainId(params) {\n  var _a;\n  if (!params || !Array.isArray(params) || !((_a = params[0]) === null || _a === void 0 ? void 0 : _a.chainId)) {\n    throw standardErrors.rpc.invalidParams();\n  }\n  if (typeof params[0].chainId !== 'string' && typeof params[0].chainId !== 'number') {\n    throw standardErrors.rpc.invalidParams();\n  }\n}\nexport function assertGetCapabilitiesParams(params) {\n  if (!params || !Array.isArray(params) || params.length !== 1 && params.length !== 2) {\n    throw standardErrors.rpc.invalidParams();\n  }\n  if (typeof params[0] !== 'string' || !isAddress(params[0])) {\n    throw standardErrors.rpc.invalidParams();\n  }\n  if (params.length === 2) {\n    if (!Array.isArray(params[1])) {\n      throw standardErrors.rpc.invalidParams();\n    }\n    for (const param of params[1]) {\n      if (typeof param !== 'string' || !param.startsWith('0x')) {\n        throw standardErrors.rpc.invalidParams();\n      }\n    }\n  }\n}\nexport function injectRequestCapabilities(request, capabilities) {\n  // Modify request to include auto sub account capabilities\n  const modifiedRequest = Object.assign({}, request);\n  if (capabilities && request.method.startsWith('wallet_')) {\n    let requestCapabilities = get(modifiedRequest, 'params.0.capabilities');\n    if (typeof requestCapabilities === 'undefined') {\n      requestCapabilities = {};\n    }\n    if (typeof requestCapabilities !== 'object') {\n      throw standardErrors.rpc.invalidParams();\n    }\n    requestCapabilities = Object.assign(Object.assign({}, capabilities), requestCapabilities);\n    if (modifiedRequest.params && Array.isArray(modifiedRequest.params)) {\n      modifiedRequest.params[0] = Object.assign(Object.assign({}, modifiedRequest.params[0]), {\n        capabilities: requestCapabilities\n      });\n    }\n  }\n  return modifiedRequest;\n}\n/**\n * Initializes the `subAccountConfig` store with the owner account function and capabilities\n * @returns void\n */\nexport async function initSubAccountConfig() {\n  var _a;\n  const config = (_a = store.subAccountsConfig.get()) !== null && _a !== void 0 ? _a : {};\n  const capabilities = {};\n  if (config.enableAutoSubAccounts) {\n    // Get the owner account\n    const {\n      account: owner\n    } = config.toOwnerAccount ? await config.toOwnerAccount() : await getCryptoKeyAccount();\n    if (!owner) {\n      throw standardErrors.provider.unauthorized('No owner account found');\n    }\n    capabilities.addSubAccount = {\n      account: {\n        type: 'create',\n        keys: [{\n          type: owner.address ? 'address' : 'webauthn-p256',\n          publicKey: owner.address || owner.publicKey\n        }]\n      }\n    };\n  }\n  // Store the owner account and capabilities in the non-persisted config\n  store.subAccountsConfig.set({\n    capabilities\n  });\n}\nexport function assertFetchPermissionsRequest(request) {\n  if (request.method === 'coinbase_fetchPermissions' && request.params === undefined) {\n    return;\n  }\n  if (request.method === 'coinbase_fetchPermissions' && Array.isArray(request.params) && request.params.length === 1 && typeof request.params[0] === 'object') {\n    if (typeof request.params[0].account !== 'string' || !request.params[0].chainId.startsWith('0x')) {\n      throw standardErrors.rpc.invalidParams('FetchPermissions - Invalid params: params[0].account must be a hex string');\n    }\n    if (typeof request.params[0].chainId !== 'string' || !request.params[0].chainId.startsWith('0x')) {\n      throw standardErrors.rpc.invalidParams('FetchPermissions - Invalid params: params[0].chainId must be a hex string');\n    }\n    if (typeof request.params[0].spender !== 'string' || !request.params[0].spender.startsWith('0x')) {\n      throw standardErrors.rpc.invalidParams('FetchPermissions - Invalid params: params[0].spender must be a hex string');\n    }\n    return;\n  }\n  throw standardErrors.rpc.invalidParams();\n}\nexport function fillMissingParamsForFetchPermissions(request) {\n  var _a, _b, _c;\n  if (request.params !== undefined) {\n    return request;\n  }\n  // this is based on the assumption that the first account is the active account\n  // it could change in the context of multi-(universal)-account\n  const accountFromStore = (_a = store.getState().account.accounts) === null || _a === void 0 ? void 0 : _a[0];\n  const chainId = (_b = store.getState().account.chain) === null || _b === void 0 ? void 0 : _b.id;\n  const subAccountFromStore = (_c = store.getState().subAccount) === null || _c === void 0 ? void 0 : _c.address;\n  if (!accountFromStore || !subAccountFromStore || !chainId) {\n    throw standardErrors.rpc.invalidParams('FetchPermissions - one or more of account, sub account, or chain id is missing, connect to sub account via wallet_connect first');\n  }\n  return {\n    method: 'coinbase_fetchPermissions',\n    params: [{\n      account: accountFromStore,\n      chainId: numberToHex(chainId),\n      spender: subAccountFromStore\n    }]\n  };\n}\nexport function createSpendPermissionMessage({\n  spendPermission,\n  chainId\n}) {\n  return {\n    domain: {\n      name: 'Spend Permission Manager',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: spendPermissionManagerAddress\n    },\n    types: {\n      SpendPermission: [{\n        name: 'account',\n        type: 'address'\n      }, {\n        name: 'spender',\n        type: 'address'\n      }, {\n        name: 'token',\n        type: 'address'\n      }, {\n        name: 'allowance',\n        type: 'uint160'\n      }, {\n        name: 'period',\n        type: 'uint48'\n      }, {\n        name: 'start',\n        type: 'uint48'\n      }, {\n        name: 'end',\n        type: 'uint48'\n      }, {\n        name: 'salt',\n        type: 'uint256'\n      }, {\n        name: 'extraData',\n        type: 'bytes'\n      }]\n    },\n    primaryType: 'SpendPermission',\n    message: {\n      account: spendPermission.account,\n      spender: spendPermission.spender,\n      token: spendPermission.token,\n      allowance: spendPermission.allowance,\n      period: spendPermission.period,\n      start: spendPermission.start,\n      end: spendPermission.end,\n      salt: spendPermission.salt,\n      extraData: spendPermission.extraData\n    }\n  };\n}\nexport function createSpendPermissionBatchMessage({\n  spendPermissionBatch,\n  chainId\n}) {\n  return {\n    domain: {\n      name: 'Spend Permission Manager',\n      version: '1',\n      chainId,\n      verifyingContract: spendPermissionManagerAddress\n    },\n    types: {\n      SpendPermissionBatch: [{\n        name: 'account',\n        type: 'address'\n      }, {\n        name: 'period',\n        type: 'uint48'\n      }, {\n        name: 'start',\n        type: 'uint48'\n      }, {\n        name: 'end',\n        type: 'uint48'\n      }, {\n        name: 'permissions',\n        type: 'PermissionDetails[]'\n      }],\n      PermissionDetails: [{\n        name: 'spender',\n        type: 'address'\n      }, {\n        name: 'token',\n        type: 'address'\n      }, {\n        name: 'allowance',\n        type: 'uint160'\n      }, {\n        name: 'salt',\n        type: 'uint256'\n      }, {\n        name: 'extraData',\n        type: 'bytes'\n      }]\n    },\n    primaryType: 'SpendPermissionBatch',\n    message: {\n      account: spendPermissionBatch.account,\n      period: spendPermissionBatch.period,\n      start: spendPermissionBatch.start,\n      end: spendPermissionBatch.end,\n      permissions: spendPermissionBatch.permissions.map(p => ({\n        spender: p.spender,\n        token: p.token,\n        allowance: p.allowance,\n        salt: p.salt,\n        extraData: p.extraData\n      }))\n    }\n  };\n}\nexport async function waitForCallsTransactionHash({\n  client,\n  id\n}) {\n  var _a;\n  const result = await waitForCallsStatus(client, {\n    id\n  });\n  if (result.status === 'success') {\n    return (_a = result.receipts) === null || _a === void 0 ? void 0 : _a[0].transactionHash;\n  }\n  throw standardErrors.rpc.internal('failed to send transaction');\n}\nexport function createWalletSendCallsRequest({\n  calls,\n  from,\n  chainId,\n  capabilities\n}) {\n  const paymasterUrls = config.get().paymasterUrls;\n  let request = {\n    method: 'wallet_sendCalls',\n    params: [{\n      version: '1.0',\n      calls,\n      chainId: numberToHex(chainId),\n      from,\n      atomicRequired: true,\n      capabilities\n    }]\n  };\n  if (paymasterUrls === null || paymasterUrls === void 0 ? void 0 : paymasterUrls[chainId]) {\n    request = injectRequestCapabilities(request, {\n      paymasterService: {\n        url: paymasterUrls === null || paymasterUrls === void 0 ? void 0 : paymasterUrls[chainId]\n      }\n    });\n  }\n  return request;\n}\nexport async function presentSubAccountFundingDialog() {\n  const dialog = initDialog();\n  const userChoice = await new Promise(resolve => {\n    logDialogShown({\n      dialogContext: 'sub_account_insufficient_balance'\n    });\n    dialog.presentItem({\n      title: 'Insufficient spend permission',\n      message: \"Your spend permission's remaining balance cannot cover this transaction. Please choose how to proceed:\",\n      onClose: () => {\n        logDialogDismissed({\n          dialogContext: 'sub_account_insufficient_balance'\n        });\n        dialog.clear();\n      },\n      actionItems: [{\n        text: 'Edit spend permission',\n        variant: 'primary',\n        onClick: () => {\n          logDialogActionClicked({\n            dialogContext: 'sub_account_insufficient_balance',\n            dialogAction: 'create_permission'\n          });\n          dialog.clear();\n          resolve('update_permission');\n        }\n      }, {\n        text: 'Use primary account',\n        variant: 'secondary',\n        onClick: () => {\n          logDialogActionClicked({\n            dialogContext: 'sub_account_insufficient_balance',\n            dialogAction: 'continue_in_popup'\n          });\n          dialog.clear();\n          resolve('continue_popup');\n        }\n      }]\n    });\n  });\n  return userChoice;\n}\nexport function parseFundingOptions({\n  errorData,\n  sourceAddress\n}) {\n  var _a;\n  const spendPermissionRequests = [];\n  for (const [token, {\n    amount,\n    sources\n  }] of Object.entries((_a = errorData === null || errorData === void 0 ? void 0 : errorData.required) !== null && _a !== void 0 ? _a : {})) {\n    const sourcesWithSufficientBalance = sources.filter(source => {\n      return hexToBigInt(source.balance) >= hexToBigInt(amount) && source.address.toLowerCase() === (sourceAddress === null || sourceAddress === void 0 ? void 0 : sourceAddress.toLowerCase());\n    });\n    if (sourcesWithSufficientBalance.length === 0) {\n      throw new Error('Source address has insufficient balance for a token');\n    }\n    spendPermissionRequests.push({\n      token: token,\n      requiredAmount: hexToBigInt(amount)\n    });\n  }\n  return spendPermissionRequests;\n}\nexport function isSendCallsParams(params) {\n  return typeof params === 'object' && params !== null && 'calls' in params;\n}\nexport function isEthSendTransactionParams(params) {\n  return Array.isArray(params) && params.length === 1 && typeof params[0] === 'object' && params[0] !== null && 'to' in params[0];\n}\nexport function compute16ByteHash(input) {\n  return slice(keccak256(toHex(input)), 0, 16);\n}\nexport function makeDataSuffix({\n  attribution,\n  dappOrigin\n}) {\n  if (!attribution) {\n    return;\n  }\n  if ('auto' in attribution && attribution.auto && dappOrigin) {\n    return compute16ByteHash(dappOrigin);\n  }\n  if ('dataSuffix' in attribution) {\n    return attribution.dataSuffix;\n  }\n  return;\n}\n/**\n * Checks if a specific capability is present in a request's params\n * @param request The request object to check\n * @param capabilityName The name of the capability to check for\n * @returns boolean indicating if the capability is present\n */\nexport function requestHasCapability(request, capabilityName) {\n  var _a;\n  if (!Array.isArray(request === null || request === void 0 ? void 0 : request.params)) return false;\n  const capabilities = (_a = request.params[0]) === null || _a === void 0 ? void 0 : _a.capabilities;\n  if (!capabilities || typeof capabilities !== 'object') return false;\n  return capabilityName in capabilities;\n}\n/**\n * Prepends an item to an array without duplicates\n * @param array The array to prepend to\n * @param item The item to prepend\n * @returns The array with the item prepended\n */\nexport function prependWithoutDuplicates(array, item) {\n  const filtered = array.filter(i => i !== item);\n  return [item, ...filtered];\n}\n/**\n * Appends an item to an array without duplicates\n * @param array The array to append to\n * @param item The item to append\n * @returns The array with the item appended\n */\nexport function appendWithoutDuplicates(array, item) {\n  const filtered = array.filter(i => i !== item);\n  return [...filtered, item];\n}\nexport async function getCachedWalletConnectResponse() {\n  const spendPermissions = store.spendPermissions.get();\n  const subAccount = store.subAccounts.get();\n  const accounts = store.account.get().accounts;\n  if (!accounts) {\n    return null;\n  }\n  const walletConnectAccounts = accounts === null || accounts === void 0 ? void 0 : accounts.map(account => ({\n    address: account,\n    capabilities: {\n      subAccounts: subAccount ? [subAccount] : undefined,\n      spendPermissions: spendPermissions.length > 0 ? {\n        permissions: spendPermissions\n      } : undefined\n    }\n  }));\n  return {\n    accounts: walletConnectAccounts\n  };\n}","map":{"version":3,"names":["hexToBigInt","isAddress","keccak256","numberToHex","slice","toHex","standardErrors","logDialogActionClicked","logDialogDismissed","logDialogShown","config","store","initDialog","get","waitForCallsStatus","getCryptoKeyAccount","spendPermissionManagerAddress","getSenderFromRequest","request","Array","isArray","params","method","_a","from","addSenderToRequest","sender","rpc","invalidParams","Object","assign","assertParamsChainId","chainId","assertGetCapabilitiesParams","length","param","startsWith","injectRequestCapabilities","capabilities","modifiedRequest","requestCapabilities","initSubAccountConfig","subAccountsConfig","enableAutoSubAccounts","account","owner","toOwnerAccount","provider","unauthorized","addSubAccount","type","keys","address","publicKey","set","assertFetchPermissionsRequest","undefined","spender","fillMissingParamsForFetchPermissions","accountFromStore","getState","accounts","_b","chain","id","subAccountFromStore","_c","subAccount","createSpendPermissionMessage","spendPermission","domain","name","version","verifyingContract","types","SpendPermission","primaryType","message","token","allowance","period","start","end","salt","extraData","createSpendPermissionBatchMessage","spendPermissionBatch","SpendPermissionBatch","PermissionDetails","permissions","map","p","waitForCallsTransactionHash","client","result","status","receipts","transactionHash","internal","createWalletSendCallsRequest","calls","paymasterUrls","atomicRequired","paymasterService","url","presentSubAccountFundingDialog","dialog","userChoice","Promise","resolve","dialogContext","presentItem","title","onClose","clear","actionItems","text","variant","onClick","dialogAction","parseFundingOptions","errorData","sourceAddress","spendPermissionRequests","amount","sources","entries","required","sourcesWithSufficientBalance","filter","source","balance","toLowerCase","Error","push","requiredAmount","isSendCallsParams","isEthSendTransactionParams","compute16ByteHash","input","makeDataSuffix","attribution","dappOrigin","auto","dataSuffix","requestHasCapability","capabilityName","prependWithoutDuplicates","array","item","filtered","i","appendWithoutDuplicates","getCachedWalletConnectResponse","spendPermissions","subAccounts","walletConnectAccounts"],"sources":["../../../src/sign/base-account/utils.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}