{"ast":null,"code":"import { proxy, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { NumberUtil } from '@reown/appkit-common';\nimport { ConstantsUtil as CommonConstantsUtil } from '@reown/appkit-common';\nimport { W3mFrameRpcConstants } from '@reown/appkit-wallet/utils';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { SendApiUtil } from '../utils/SendApiUtil.js';\nimport { SwapApiUtil } from '../utils/SwapApiUtil.js';\nimport { SwapCalculationUtil } from '../utils/SwapCalculationUtil.js';\nimport { withErrorBoundary } from '../utils/withErrorBoundary.js';\nimport { AccountController } from './AccountController.js';\nimport { AlertController } from './AlertController.js';\nimport { BlockchainApiController } from './BlockchainApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectionController } from './ConnectionController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { RouterController } from './RouterController.js';\nimport { SnackController } from './SnackController.js';\n// -- Constants ---------------------------------------- //\nexport const INITIAL_GAS_LIMIT = 150000;\nexport const TO_AMOUNT_DECIMALS = 6;\nclass TransactionError extends Error {\n  constructor(message, shortMessage) {\n    super(message);\n    this.name = 'TransactionError';\n    this.shortMessage = shortMessage;\n  }\n}\n// -- State --------------------------------------------- //\nconst initialState = {\n  // Loading states\n  initializing: false,\n  initialized: false,\n  loadingPrices: false,\n  loadingQuote: false,\n  loadingApprovalTransaction: false,\n  loadingBuildTransaction: false,\n  loadingTransaction: false,\n  // Error states\n  fetchError: false,\n  // Approval & Swap transaction states\n  approvalTransaction: undefined,\n  swapTransaction: undefined,\n  transactionError: undefined,\n  // Input values\n  sourceToken: undefined,\n  sourceTokenAmount: '',\n  sourceTokenPriceInUSD: 0,\n  toToken: undefined,\n  toTokenAmount: '',\n  toTokenPriceInUSD: 0,\n  networkPrice: '0',\n  networkBalanceInUSD: '0',\n  networkTokenSymbol: '',\n  inputError: undefined,\n  // Request values\n  slippage: ConstantsUtil.CONVERT_SLIPPAGE_TOLERANCE,\n  // Tokens\n  tokens: undefined,\n  popularTokens: undefined,\n  suggestedTokens: undefined,\n  foundTokens: undefined,\n  myTokensWithBalance: undefined,\n  tokensPriceMap: {},\n  // Calculations\n  gasFee: '0',\n  gasPriceInUSD: 0,\n  priceImpact: undefined,\n  maxSlippage: undefined,\n  providerFee: undefined\n};\nconst state = proxy(initialState);\n// -- Controller ---------------------------------------- //\nconst controller = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  getParams() {\n    const caipAddress = ChainController.state.activeCaipAddress;\n    const namespace = ChainController.state.activeChain;\n    const address = CoreHelperUtil.getPlainAddress(caipAddress);\n    const networkAddress = ChainController.getActiveNetworkTokenAddress();\n    const connectorId = ConnectorController.getConnectorId(namespace);\n    if (!address) {\n      throw new Error('No address found to swap the tokens from.');\n    }\n    const invalidToToken = !state.toToken?.address || !state.toToken?.decimals;\n    const invalidSourceToken = !state.sourceToken?.address || !state.sourceToken?.decimals || !NumberUtil.bigNumber(state.sourceTokenAmount).gt(0);\n    const invalidSourceTokenAmount = !state.sourceTokenAmount;\n    return {\n      networkAddress,\n      fromAddress: address,\n      fromCaipAddress: caipAddress,\n      sourceTokenAddress: state.sourceToken?.address,\n      toTokenAddress: state.toToken?.address,\n      toTokenAmount: state.toTokenAmount,\n      toTokenDecimals: state.toToken?.decimals,\n      sourceTokenAmount: state.sourceTokenAmount,\n      sourceTokenDecimals: state.sourceToken?.decimals,\n      invalidToToken,\n      invalidSourceToken,\n      invalidSourceTokenAmount,\n      availableToSwap: caipAddress && !invalidToToken && !invalidSourceToken && !invalidSourceTokenAmount,\n      isAuthConnector: connectorId === CommonConstantsUtil.CONNECTOR_ID.AUTH\n    };\n  },\n  setSourceToken(sourceToken) {\n    if (!sourceToken) {\n      state.sourceToken = sourceToken;\n      state.sourceTokenAmount = '';\n      state.sourceTokenPriceInUSD = 0;\n      return;\n    }\n    state.sourceToken = sourceToken;\n    SwapController.setTokenPrice(sourceToken.address, 'sourceToken');\n  },\n  setSourceTokenAmount(amount) {\n    state.sourceTokenAmount = amount;\n  },\n  setToToken(toToken) {\n    if (!toToken) {\n      state.toToken = toToken;\n      state.toTokenAmount = '';\n      state.toTokenPriceInUSD = 0;\n      return;\n    }\n    state.toToken = toToken;\n    SwapController.setTokenPrice(toToken.address, 'toToken');\n  },\n  setToTokenAmount(amount) {\n    state.toTokenAmount = amount ? NumberUtil.formatNumberToLocalString(amount, TO_AMOUNT_DECIMALS) : '';\n  },\n  async setTokenPrice(address, target) {\n    let price = state.tokensPriceMap[address] || 0;\n    if (!price) {\n      state.loadingPrices = true;\n      price = await SwapController.getAddressPrice(address);\n    }\n    if (target === 'sourceToken') {\n      state.sourceTokenPriceInUSD = price;\n    } else if (target === 'toToken') {\n      state.toTokenPriceInUSD = price;\n    }\n    if (state.loadingPrices) {\n      state.loadingPrices = false;\n    }\n    if (SwapController.getParams().availableToSwap) {\n      SwapController.swapTokens();\n    }\n  },\n  switchTokens() {\n    if (state.initializing || !state.initialized) {\n      return;\n    }\n    const newSourceToken = state.toToken ? {\n      ...state.toToken\n    } : undefined;\n    const newToToken = state.sourceToken ? {\n      ...state.sourceToken\n    } : undefined;\n    const newSourceTokenAmount = newSourceToken && state.toTokenAmount === '' ? '1' : state.toTokenAmount;\n    SwapController.setSourceToken(newSourceToken);\n    SwapController.setToToken(newToToken);\n    SwapController.setSourceTokenAmount(newSourceTokenAmount);\n    SwapController.setToTokenAmount('');\n    SwapController.swapTokens();\n  },\n  resetState() {\n    state.myTokensWithBalance = initialState.myTokensWithBalance;\n    state.tokensPriceMap = initialState.tokensPriceMap;\n    state.initialized = initialState.initialized;\n    state.sourceToken = initialState.sourceToken;\n    state.sourceTokenAmount = initialState.sourceTokenAmount;\n    state.sourceTokenPriceInUSD = initialState.sourceTokenPriceInUSD;\n    state.toToken = initialState.toToken;\n    state.toTokenAmount = initialState.toTokenAmount;\n    state.toTokenPriceInUSD = initialState.toTokenPriceInUSD;\n    state.networkPrice = initialState.networkPrice;\n    state.networkTokenSymbol = initialState.networkTokenSymbol;\n    state.networkBalanceInUSD = initialState.networkBalanceInUSD;\n    state.inputError = initialState.inputError;\n    state.myTokensWithBalance = initialState.myTokensWithBalance;\n  },\n  resetValues() {\n    const {\n      networkAddress\n    } = SwapController.getParams();\n    const networkToken = state.tokens?.find(token => token.address === networkAddress);\n    SwapController.setSourceToken(networkToken);\n    SwapController.setToToken(undefined);\n  },\n  getApprovalLoadingState() {\n    return state.loadingApprovalTransaction;\n  },\n  clearError() {\n    state.transactionError = undefined;\n  },\n  async initializeState() {\n    if (state.initializing) {\n      return;\n    }\n    state.initializing = true;\n    if (!state.initialized) {\n      try {\n        await SwapController.fetchTokens();\n        state.initialized = true;\n      } catch (error) {\n        state.initialized = false;\n        SnackController.showError('Failed to initialize swap');\n        RouterController.goBack();\n      }\n    }\n    state.initializing = false;\n  },\n  async fetchTokens() {\n    const {\n      networkAddress\n    } = SwapController.getParams();\n    await SwapController.getTokenList();\n    await SwapController.getNetworkTokenPrice();\n    await SwapController.getMyTokensWithBalance();\n    const networkToken = state.tokens?.find(token => token.address === networkAddress);\n    if (networkToken) {\n      state.networkTokenSymbol = networkToken.symbol;\n      SwapController.setSourceToken(networkToken);\n      SwapController.setSourceTokenAmount('1');\n    }\n  },\n  async getTokenList() {\n    const tokens = await SwapApiUtil.getTokenList();\n    state.tokens = tokens;\n    state.popularTokens = tokens.sort((aTokenInfo, bTokenInfo) => {\n      if (aTokenInfo.symbol < bTokenInfo.symbol) {\n        return -1;\n      }\n      if (aTokenInfo.symbol > bTokenInfo.symbol) {\n        return 1;\n      }\n      return 0;\n    });\n    state.suggestedTokens = tokens.filter(token => {\n      if (ConstantsUtil.SWAP_SUGGESTED_TOKENS.includes(token.symbol)) {\n        return true;\n      }\n      return false;\n    }, {});\n  },\n  async getAddressPrice(address) {\n    const existPrice = state.tokensPriceMap[address];\n    if (existPrice) {\n      return existPrice;\n    }\n    const response = await BlockchainApiController.fetchTokenPrice({\n      addresses: [address]\n    });\n    const fungibles = response?.fungibles || [];\n    const allTokens = [...(state.tokens || []), ...(state.myTokensWithBalance || [])];\n    const symbol = allTokens?.find(token => token.address === address)?.symbol;\n    const price = fungibles.find(p => p.symbol.toLowerCase() === symbol?.toLowerCase())?.price || 0;\n    const priceAsFloat = parseFloat(price.toString());\n    state.tokensPriceMap[address] = priceAsFloat;\n    return priceAsFloat;\n  },\n  async getNetworkTokenPrice() {\n    const {\n      networkAddress\n    } = SwapController.getParams();\n    const response = await BlockchainApiController.fetchTokenPrice({\n      addresses: [networkAddress]\n    }).catch(() => {\n      SnackController.showError('Failed to fetch network token price');\n      return {\n        fungibles: []\n      };\n    });\n    const token = response.fungibles?.[0];\n    const price = token?.price.toString() || '0';\n    state.tokensPriceMap[networkAddress] = parseFloat(price);\n    state.networkTokenSymbol = token?.symbol || '';\n    state.networkPrice = price;\n  },\n  async getMyTokensWithBalance(forceUpdate) {\n    const balances = await SendApiUtil.getMyTokensWithBalance(forceUpdate);\n    const swapBalances = SendApiUtil.mapBalancesToSwapTokens(balances);\n    if (!swapBalances) {\n      return;\n    }\n    await SwapController.getInitialGasPrice();\n    SwapController.setBalances(swapBalances);\n  },\n  setBalances(balances) {\n    const {\n      networkAddress\n    } = SwapController.getParams();\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    if (!caipNetwork) {\n      return;\n    }\n    const networkToken = balances.find(token => token.address === networkAddress);\n    balances.forEach(token => {\n      state.tokensPriceMap[token.address] = token.price || 0;\n    });\n    state.myTokensWithBalance = balances.filter(token => token.address.startsWith(caipNetwork.caipNetworkId));\n    state.networkBalanceInUSD = networkToken ? NumberUtil.multiply(networkToken.quantity.numeric, networkToken.price).toString() : '0';\n  },\n  async getInitialGasPrice() {\n    const res = await SwapApiUtil.fetchGasPrice();\n    if (!res) {\n      return {\n        gasPrice: null,\n        gasPriceInUSD: null\n      };\n    }\n    switch (ChainController.state?.activeCaipNetwork?.chainNamespace) {\n      case 'solana':\n        state.gasFee = res.standard ?? '0';\n        state.gasPriceInUSD = NumberUtil.multiply(res.standard, state.networkPrice).div(1e9).toNumber();\n        return {\n          gasPrice: BigInt(state.gasFee),\n          gasPriceInUSD: Number(state.gasPriceInUSD)\n        };\n      case 'eip155':\n      default:\n        // eslint-disable-next-line no-case-declarations\n        const value = res.standard ?? '0';\n        // eslint-disable-next-line no-case-declarations\n        const gasFee = BigInt(value);\n        // eslint-disable-next-line no-case-declarations\n        const gasLimit = BigInt(INITIAL_GAS_LIMIT);\n        // eslint-disable-next-line no-case-declarations\n        const gasPrice = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, gasLimit, gasFee);\n        state.gasFee = value;\n        state.gasPriceInUSD = gasPrice;\n        return {\n          gasPrice: gasFee,\n          gasPriceInUSD: gasPrice\n        };\n    }\n  },\n  // -- Swap -------------------------------------- //\n  async swapTokens() {\n    const address = AccountController.state.address;\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    const haveSourceTokenAmount = NumberUtil.bigNumber(state.sourceTokenAmount).gt(0);\n    if (!haveSourceTokenAmount) {\n      SwapController.setToTokenAmount('');\n    }\n    if (!toToken || !sourceToken || state.loadingPrices || !haveSourceTokenAmount) {\n      return;\n    }\n    state.loadingQuote = true;\n    const amountDecimal = NumberUtil.bigNumber(state.sourceTokenAmount).times(10 ** sourceToken.decimals).round(0);\n    try {\n      const quoteResponse = await BlockchainApiController.fetchSwapQuote({\n        userAddress: address,\n        from: sourceToken.address,\n        to: toToken.address,\n        gasPrice: state.gasFee,\n        amount: amountDecimal.toString()\n      });\n      state.loadingQuote = false;\n      const quoteToAmount = quoteResponse?.quotes?.[0]?.toAmount;\n      if (!quoteToAmount) {\n        AlertController.open({\n          shortMessage: 'Incorrect amount',\n          longMessage: 'Please enter a valid amount'\n        }, 'error');\n        return;\n      }\n      const toTokenAmount = NumberUtil.bigNumber(quoteToAmount).div(10 ** toToken.decimals).toString();\n      SwapController.setToTokenAmount(toTokenAmount);\n      const isInsufficientToken = SwapController.hasInsufficientToken(state.sourceTokenAmount, sourceToken.address);\n      if (isInsufficientToken) {\n        state.inputError = 'Insufficient balance';\n      } else {\n        state.inputError = undefined;\n        SwapController.setTransactionDetails();\n      }\n    } catch (error) {\n      state.loadingQuote = false;\n      state.inputError = 'Insufficient balance';\n    }\n  },\n  // -- Create Transactions -------------------------------------- //\n  async getTransaction() {\n    const {\n      fromCaipAddress,\n      availableToSwap\n    } = SwapController.getParams();\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    if (!fromCaipAddress || !availableToSwap || !sourceToken || !toToken || state.loadingQuote) {\n      return undefined;\n    }\n    try {\n      state.loadingBuildTransaction = true;\n      const hasAllowance = await SwapApiUtil.fetchSwapAllowance({\n        userAddress: fromCaipAddress,\n        tokenAddress: sourceToken.address,\n        sourceTokenAmount: state.sourceTokenAmount,\n        sourceTokenDecimals: sourceToken.decimals\n      });\n      let transaction = undefined;\n      if (hasAllowance) {\n        transaction = await SwapController.createSwapTransaction();\n      } else {\n        transaction = await SwapController.createAllowanceTransaction();\n      }\n      state.loadingBuildTransaction = false;\n      state.fetchError = false;\n      return transaction;\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to check allowance');\n      state.loadingBuildTransaction = false;\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  async createAllowanceTransaction() {\n    const {\n      fromCaipAddress,\n      sourceTokenAddress,\n      toTokenAddress\n    } = SwapController.getParams();\n    if (!fromCaipAddress || !toTokenAddress) {\n      return undefined;\n    }\n    if (!sourceTokenAddress) {\n      throw new Error('createAllowanceTransaction - No source token address found.');\n    }\n    try {\n      const response = await BlockchainApiController.generateApproveCalldata({\n        from: sourceTokenAddress,\n        to: toTokenAddress,\n        userAddress: fromCaipAddress\n      });\n      const transaction = {\n        data: response.tx.data,\n        to: CoreHelperUtil.getPlainAddress(response.tx.from),\n        gasPrice: BigInt(response.tx.eip155.gasPrice),\n        value: BigInt(response.tx.value),\n        toAmount: state.toTokenAmount\n      };\n      state.swapTransaction = undefined;\n      state.approvalTransaction = {\n        data: transaction.data,\n        to: transaction.to,\n        gasPrice: transaction.gasPrice,\n        value: transaction.value,\n        toAmount: transaction.toAmount\n      };\n      return {\n        data: transaction.data,\n        to: transaction.to,\n        gasPrice: transaction.gasPrice,\n        value: transaction.value,\n        toAmount: transaction.toAmount\n      };\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to create approval transaction');\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  async createSwapTransaction() {\n    const {\n      networkAddress,\n      fromCaipAddress,\n      sourceTokenAmount\n    } = SwapController.getParams();\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    if (!fromCaipAddress || !sourceTokenAmount || !sourceToken || !toToken) {\n      return undefined;\n    }\n    const amount = ConnectionController.parseUnits(sourceTokenAmount, sourceToken.decimals)?.toString();\n    try {\n      const response = await BlockchainApiController.generateSwapCalldata({\n        userAddress: fromCaipAddress,\n        from: sourceToken.address,\n        to: toToken.address,\n        amount: amount,\n        disableEstimate: true\n      });\n      const isSourceTokenIsNetworkToken = sourceToken.address === networkAddress;\n      const gas = BigInt(response.tx.eip155.gas);\n      const gasPrice = BigInt(response.tx.eip155.gasPrice);\n      const transaction = {\n        data: response.tx.data,\n        to: CoreHelperUtil.getPlainAddress(response.tx.to),\n        gas,\n        gasPrice,\n        value: isSourceTokenIsNetworkToken ? BigInt(amount ?? '0') : BigInt('0'),\n        toAmount: state.toTokenAmount\n      };\n      state.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, gas, gasPrice);\n      state.approvalTransaction = undefined;\n      state.swapTransaction = transaction;\n      return transaction;\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to create transaction');\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  // -- Send Transactions --------------------------------- //\n  async sendTransactionForApproval(data) {\n    const {\n      fromAddress,\n      isAuthConnector\n    } = SwapController.getParams();\n    state.loadingApprovalTransaction = true;\n    const approveLimitMessage = `Approve limit increase in your wallet`;\n    if (isAuthConnector) {\n      RouterController.pushTransactionStack({\n        onSuccess() {\n          SnackController.showLoading(approveLimitMessage);\n        }\n      });\n    } else {\n      SnackController.showLoading(approveLimitMessage);\n    }\n    try {\n      await ConnectionController.sendTransaction({\n        address: fromAddress,\n        to: data.to,\n        data: data.data,\n        value: data.value,\n        chainNamespace: 'eip155'\n      });\n      await SwapController.swapTokens();\n      await SwapController.getTransaction();\n      state.approvalTransaction = undefined;\n      state.loadingApprovalTransaction = false;\n    } catch (err) {\n      const error = err;\n      state.transactionError = error?.shortMessage;\n      state.loadingApprovalTransaction = false;\n      SnackController.showError(error?.shortMessage || 'Transaction error');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_APPROVAL_ERROR',\n        properties: {\n          message: error?.shortMessage || error?.message || 'Unknown',\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: SwapController.state.sourceToken?.symbol || '',\n          swapToToken: SwapController.state.toToken?.symbol || '',\n          swapFromAmount: SwapController.state.sourceTokenAmount || '',\n          swapToAmount: SwapController.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountTypes?.eip155 === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n    }\n  },\n  async sendTransactionForSwap(data) {\n    if (!data) {\n      return undefined;\n    }\n    const {\n      fromAddress,\n      toTokenAmount,\n      isAuthConnector\n    } = SwapController.getParams();\n    state.loadingTransaction = true;\n    const snackbarPendingMessage = `Swapping ${state.sourceToken?.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${state.toToken?.symbol}`;\n    const snackbarSuccessMessage = `Swapped ${state.sourceToken?.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${state.toToken?.symbol}`;\n    if (isAuthConnector) {\n      RouterController.pushTransactionStack({\n        onSuccess() {\n          RouterController.replace('Account');\n          SnackController.showLoading(snackbarPendingMessage);\n          controller.resetState();\n        }\n      });\n    } else {\n      SnackController.showLoading('Confirm transaction in your wallet');\n    }\n    try {\n      const forceUpdateAddresses = [state.sourceToken?.address, state.toToken?.address].join(',');\n      const transactionHash = await ConnectionController.sendTransaction({\n        address: fromAddress,\n        to: data.to,\n        data: data.data,\n        value: data.value,\n        chainNamespace: 'eip155'\n      });\n      state.loadingTransaction = false;\n      SnackController.showSuccess(snackbarSuccessMessage);\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_SUCCESS',\n        properties: {\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: SwapController.state.sourceToken?.symbol || '',\n          swapToToken: SwapController.state.toToken?.symbol || '',\n          swapFromAmount: SwapController.state.sourceTokenAmount || '',\n          swapToAmount: SwapController.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountTypes?.eip155 === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n      controller.resetState();\n      if (!isAuthConnector) {\n        RouterController.replace('Account');\n      }\n      controller.getMyTokensWithBalance(forceUpdateAddresses);\n      return transactionHash;\n    } catch (err) {\n      const error = err;\n      state.transactionError = error?.shortMessage;\n      state.loadingTransaction = false;\n      SnackController.showError(error?.shortMessage || 'Transaction error');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_ERROR',\n        properties: {\n          message: error?.shortMessage || error?.message || 'Unknown',\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: SwapController.state.sourceToken?.symbol || '',\n          swapToToken: SwapController.state.toToken?.symbol || '',\n          swapFromAmount: SwapController.state.sourceTokenAmount || '',\n          swapToAmount: SwapController.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountTypes?.eip155 === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n      return undefined;\n    }\n  },\n  // -- Checks -------------------------------------------- //\n  hasInsufficientToken(sourceTokenAmount, sourceTokenAddress) {\n    const isInsufficientSourceTokenForSwap = SwapCalculationUtil.isInsufficientSourceTokenForSwap(sourceTokenAmount, sourceTokenAddress, state.myTokensWithBalance);\n    return isInsufficientSourceTokenForSwap;\n  },\n  // -- Calculations -------------------------------------- //\n  setTransactionDetails() {\n    const {\n      toTokenAddress,\n      toTokenDecimals\n    } = SwapController.getParams();\n    if (!toTokenAddress || !toTokenDecimals) {\n      return;\n    }\n    state.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, BigInt(state.gasFee), BigInt(INITIAL_GAS_LIMIT));\n    state.priceImpact = SwapCalculationUtil.getPriceImpact({\n      sourceTokenAmount: state.sourceTokenAmount,\n      sourceTokenPriceInUSD: state.sourceTokenPriceInUSD,\n      toTokenPriceInUSD: state.toTokenPriceInUSD,\n      toTokenAmount: state.toTokenAmount\n    });\n    state.maxSlippage = SwapCalculationUtil.getMaxSlippage(state.slippage, state.toTokenAmount);\n    state.providerFee = SwapCalculationUtil.getProviderFee(state.sourceTokenAmount);\n  }\n};\n// Export the controller wrapped with our error boundary\nexport const SwapController = withErrorBoundary(controller);","map":{"version":3,"names":["proxy","subscribe","sub","subscribeKey","subKey","NumberUtil","ConstantsUtil","CommonConstantsUtil","W3mFrameRpcConstants","CoreHelperUtil","SendApiUtil","SwapApiUtil","SwapCalculationUtil","withErrorBoundary","AccountController","AlertController","BlockchainApiController","ChainController","ConnectionController","ConnectorController","EventsController","RouterController","SnackController","INITIAL_GAS_LIMIT","TO_AMOUNT_DECIMALS","TransactionError","Error","constructor","message","shortMessage","name","initialState","initializing","initialized","loadingPrices","loadingQuote","loadingApprovalTransaction","loadingBuildTransaction","loadingTransaction","fetchError","approvalTransaction","undefined","swapTransaction","transactionError","sourceToken","sourceTokenAmount","sourceTokenPriceInUSD","toToken","toTokenAmount","toTokenPriceInUSD","networkPrice","networkBalanceInUSD","networkTokenSymbol","inputError","slippage","CONVERT_SLIPPAGE_TOLERANCE","tokens","popularTokens","suggestedTokens","foundTokens","myTokensWithBalance","tokensPriceMap","gasFee","gasPriceInUSD","priceImpact","maxSlippage","providerFee","state","controller","callback","key","getParams","caipAddress","activeCaipAddress","namespace","activeChain","address","getPlainAddress","networkAddress","getActiveNetworkTokenAddress","connectorId","getConnectorId","invalidToToken","decimals","invalidSourceToken","bigNumber","gt","invalidSourceTokenAmount","fromAddress","fromCaipAddress","sourceTokenAddress","toTokenAddress","toTokenDecimals","sourceTokenDecimals","availableToSwap","isAuthConnector","CONNECTOR_ID","AUTH","setSourceToken","SwapController","setTokenPrice","setSourceTokenAmount","amount","setToToken","setToTokenAmount","formatNumberToLocalString","target","price","getAddressPrice","swapTokens","switchTokens","newSourceToken","newToToken","newSourceTokenAmount","resetState","resetValues","networkToken","find","token","getApprovalLoadingState","clearError","initializeState","fetchTokens","error","showError","goBack","getTokenList","getNetworkTokenPrice","getMyTokensWithBalance","symbol","sort","aTokenInfo","bTokenInfo","filter","SWAP_SUGGESTED_TOKENS","includes","existPrice","response","fetchTokenPrice","addresses","fungibles","allTokens","p","toLowerCase","priceAsFloat","parseFloat","toString","catch","forceUpdate","balances","swapBalances","mapBalancesToSwapTokens","getInitialGasPrice","setBalances","caipNetwork","activeCaipNetwork","forEach","startsWith","caipNetworkId","multiply","quantity","numeric","res","fetchGasPrice","gasPrice","chainNamespace","standard","div","toNumber","BigInt","Number","value","gasLimit","getGasPriceInUSD","haveSourceTokenAmount","amountDecimal","times","round","quoteResponse","fetchSwapQuote","userAddress","from","to","quoteToAmount","quotes","toAmount","open","longMessage","isInsufficientToken","hasInsufficientToken","setTransactionDetails","getTransaction","hasAllowance","fetchSwapAllowance","tokenAddress","transaction","createSwapTransaction","createAllowanceTransaction","generateApproveCalldata","data","tx","eip155","parseUnits","generateSwapCalldata","disableEstimate","isSourceTokenIsNetworkToken","gas","sendTransactionForApproval","approveLimitMessage","pushTransactionStack","onSuccess","showLoading","sendTransaction","err","sendEvent","type","event","properties","network","swapFromToken","swapToToken","swapFromAmount","swapToAmount","isSmartAccount","preferredAccountTypes","ACCOUNT_TYPES","SMART_ACCOUNT","sendTransactionForSwap","snackbarPendingMessage","snackbarSuccessMessage","replace","forceUpdateAddresses","join","transactionHash","showSuccess","isInsufficientSourceTokenForSwap","getPriceImpact","getMaxSlippage","getProviderFee"],"sources":["../../../../src/controllers/SwapController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}