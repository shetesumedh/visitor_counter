{"ast":null,"code":"import { store } from '../../store/store.js';\nimport { TELEMETRY_SCRIPT_CONTENT } from './telemetry-content.js';\nexport const loadTelemetryScript = () => {\n  return new Promise((resolve, reject) => {\n    if (window.ClientAnalytics) {\n      return resolve();\n    }\n    try {\n      const script = document.createElement('script');\n      script.textContent = TELEMETRY_SCRIPT_CONTENT;\n      script.type = 'text/javascript';\n      document.head.appendChild(script);\n      initCCA();\n      document.head.removeChild(script);\n      resolve();\n    } catch (_a) {\n      console.error('Failed to execute inlined telemetry script');\n      reject();\n    }\n  });\n};\nconst initCCA = () => {\n  var _a, _b, _c;\n  if (typeof window !== 'undefined') {\n    const deviceId = (_c = (_a = store.config.get().deviceId) !== null && _a !== void 0 ? _a : (_b = window.crypto) === null || _b === void 0 ? void 0 : _b.randomUUID()) !== null && _c !== void 0 ? _c : '';\n    if (window.ClientAnalytics) {\n      const {\n        init,\n        identify,\n        PlatformName\n      } = window.ClientAnalytics;\n      init({\n        isProd: true,\n        amplitudeApiKey: 'c66737ad47ec354ced777935b0af822e',\n        platform: PlatformName.web,\n        projectName: 'base_account_sdk',\n        showDebugLogging: false,\n        version: '1.0.0',\n        apiEndpoint: 'https://cca-lite.coinbase.com'\n      });\n      identify({\n        deviceId\n      });\n      store.config.set({\n        deviceId\n      });\n    }\n  }\n};","map":{"version":3,"names":["store","TELEMETRY_SCRIPT_CONTENT","loadTelemetryScript","Promise","resolve","reject","window","ClientAnalytics","script","document","createElement","textContent","type","head","appendChild","initCCA","removeChild","_a","console","error","deviceId","_c","config","get","_b","crypto","randomUUID","init","identify","PlatformName","isProd","amplitudeApiKey","platform","web","projectName","showDebugLogging","version","apiEndpoint","set"],"sources":["../../../src/core/telemetry/initCCA.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,QAAQ,sBAAkB;AACxC,SAASC,wBAAwB,QAAQ,wBAAwB;AAEjE,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAoB;EACrD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,IAAIC,MAAM,CAACC,eAAe,EAAE;MAC1B,OAAOH,OAAO,EAAE;IAClB;IAEA,IAAI;MACF,MAAMI,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,WAAW,GAAGV,wBAAwB;MAC7CO,MAAM,CAACI,IAAI,GAAG,iBAAiB;MAC/BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;MAEjCO,OAAO,EAAE;MAETN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,MAAM,CAAC;MACjCJ,OAAO,EAAE;IACX,CAAC,CAAC,OAAAa,EAAA,EAAM;MACNC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC3Dd,MAAM,EAAE;IACV;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMU,OAAO,GAAGA,CAAA,KAAK;;EACnB,IAAI,OAAOT,MAAM,KAAK,WAAW,EAAE;IACjC,MAAMc,QAAQ,GAAG,CAAAC,EAAA,IAAAJ,EAAA,GAAAjB,KAAK,CAACsB,MAAM,CAACC,GAAG,EAAE,CAACH,QAAQ,cAAAH,EAAA,cAAAA,EAAA,GAAI,CAAAO,EAAA,GAAAlB,MAAM,CAACmB,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,UAAU,EAAE,cAAAL,EAAA,cAAAA,EAAA,GAAI,EAAE;IAEjF,IAAIf,MAAM,CAACC,eAAe,EAAE;MAC1B,MAAM;QAAEoB,IAAI;QAAEC,QAAQ;QAAEC;MAAY,CAAE,GAAGvB,MAAM,CAACC,eAAe;MAE/DoB,IAAI,CAAC;QACHG,MAAM,EAAE,IAAI;QACZC,eAAe,EAAE,kCAAkC;QACnDC,QAAQ,EAAEH,YAAY,CAACI,GAAG;QAC1BC,WAAW,EAAE,kBAAkB;QAC/BC,gBAAgB,EAAE,KAAK;QACvBC,OAAO,EAAE,OAAO;QAChBC,WAAW,EAAE;OACd,CAAC;MAEFT,QAAQ,CAAC;QAAER;MAAQ,CAAE,CAAC;MACtBpB,KAAK,CAACsB,MAAM,CAACgB,GAAG,CAAC;QAAElB;MAAQ,CAAE,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}