{"ast":null,"code":"import { BaseError } from '../../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError } from '../../../errors/contract.js';\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js';\nimport { ExecutionRevertedError } from '../../errors/bundler.js';\nimport { UserOperationExecutionError } from '../../errors/userOperation.js';\nimport { getBundlerError } from './getBundlerError.js';\nexport function getUserOperationError(err, {\n  calls,\n  docsPath,\n  ...args\n}) {\n  const cause = (() => {\n    const cause = getBundlerError(err, args);\n    if (calls && cause instanceof ExecutionRevertedError) {\n      const revertData = getRevertData(cause);\n      const contractCalls = calls?.filter(call => call.abi);\n      if (revertData && contractCalls.length > 0) return getContractError({\n        calls: contractCalls,\n        revertData\n      });\n    }\n    return cause;\n  })();\n  return new UserOperationExecutionError(cause, {\n    docsPath,\n    ...args\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////\nfunction getRevertData(error) {\n  let revertData;\n  error.walk(e => {\n    const error = e;\n    if (typeof error.data === 'string' || typeof error.data?.revertData === 'string' || !(error instanceof BaseError) && typeof error.message === 'string') {\n      const match = (error.data?.revertData || error.data || error.message).match?.(/(0x[A-Za-z0-9]*)/);\n      if (match) {\n        revertData = match[1];\n        return true;\n      }\n    }\n    return false;\n  });\n  return revertData;\n}\nfunction getContractError(parameters) {\n  const {\n    calls,\n    revertData\n  } = parameters;\n  const {\n    abi,\n    functionName,\n    args,\n    to\n  } = (() => {\n    const contractCalls = calls?.filter(call => Boolean(call.abi));\n    if (contractCalls.length === 1) return contractCalls[0];\n    const compatContractCalls = contractCalls.filter(call => {\n      try {\n        return Boolean(decodeErrorResult({\n          abi: call.abi,\n          data: revertData\n        }));\n      } catch {\n        return false;\n      }\n    });\n    if (compatContractCalls.length === 1) return compatContractCalls[0];\n    return {\n      abi: [],\n      functionName: contractCalls.reduce((acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`, ''),\n      args: undefined,\n      to: undefined\n    };\n  })();\n  const cause = (() => {\n    if (revertData === '0x') return new ContractFunctionZeroDataError({\n      functionName\n    });\n    return new ContractFunctionRevertedError({\n      abi,\n      data: revertData,\n      functionName\n    });\n  })();\n  return new ContractFunctionExecutionError(cause, {\n    abi,\n    args,\n    contractAddress: to,\n    functionName\n  });\n}","map":{"version":3,"names":["BaseError","ContractFunctionExecutionError","ContractFunctionRevertedError","ContractFunctionZeroDataError","decodeErrorResult","ExecutionRevertedError","UserOperationExecutionError","getBundlerError","getUserOperationError","err","calls","docsPath","args","cause","revertData","getRevertData","contractCalls","filter","call","abi","length","getContractError","error","walk","e","data","message","match","parameters","functionName","to","Boolean","compatContractCalls","reduce","acc","undefined","contractAddress"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/account-abstraction/utils/errors/getUserOperationError.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\nimport { BaseError } from '../../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  ContractFunctionRevertedError,\n  ContractFunctionZeroDataError,\n} from '../../../errors/contract.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Call } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js'\nimport type { GetContractErrorReturnType } from '../../../utils/errors/getContractError.js'\nimport { ExecutionRevertedError } from '../../errors/bundler.js'\nimport {\n  UserOperationExecutionError,\n  type UserOperationExecutionErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type GetBundlerErrorParameters,\n  getBundlerError,\n} from './getBundlerError.js'\n\ntype GetNodeErrorReturnType = ErrorType\n\nexport type GetUserOperationErrorParameters = UserOperation & {\n  calls?: readonly unknown[] | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetUserOperationErrorReturnType<cause = ErrorType> = Omit<\n  UserOperationExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport type GetUserOperationErrorErrorType = ErrorType\n\nexport function getUserOperationError<err extends ErrorType<string>>(\n  err: err,\n  { calls, docsPath, ...args }: GetUserOperationErrorParameters,\n): GetUserOperationErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getBundlerError(\n      err as {} as BaseError,\n      args as GetBundlerErrorParameters,\n    )\n    if (calls && cause instanceof ExecutionRevertedError) {\n      const revertData = getRevertData(cause)\n      const contractCalls = calls?.filter(\n        (call: any) => call.abi,\n      ) as readonly Call[]\n      if (revertData && contractCalls.length > 0)\n        return getContractError({ calls: contractCalls, revertData })\n    }\n    return cause\n  })()\n  return new UserOperationExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetUserOperationErrorReturnType<err>\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\nfunction getRevertData(error: BaseError) {\n  let revertData: Hex | undefined\n  error.walk((e) => {\n    const error = e as any\n    if (\n      typeof error.data === 'string' ||\n      typeof error.data?.revertData === 'string' ||\n      (!(error instanceof BaseError) && typeof error.message === 'string')\n    ) {\n      const match = (\n        error.data?.revertData ||\n        error.data ||\n        error.message\n      ).match?.(/(0x[A-Za-z0-9]*)/)\n      if (match) {\n        revertData = match[1]\n        return true\n      }\n    }\n    return false\n  })\n  return revertData\n}\n\nfunction getContractError(parameters: {\n  calls: readonly Call[]\n  revertData: Hex\n}) {\n  const { calls, revertData } = parameters\n\n  const { abi, functionName, args, to } = (() => {\n    const contractCalls = calls?.filter((call) =>\n      Boolean(call.abi),\n    ) as readonly Call[]\n\n    if (contractCalls.length === 1) return contractCalls[0]\n\n    const compatContractCalls = contractCalls.filter((call) => {\n      try {\n        return Boolean(\n          decodeErrorResult({\n            abi: call.abi,\n            data: revertData,\n          }),\n        )\n      } catch {\n        return false\n      }\n    })\n    if (compatContractCalls.length === 1) return compatContractCalls[0]\n\n    return {\n      abi: [],\n      functionName: contractCalls.reduce(\n        (acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`,\n        '',\n      ),\n      args: undefined,\n      to: undefined,\n    }\n  })() as {\n    abi: Abi\n    functionName: string\n    args: unknown[]\n    to: Address\n  }\n\n  const cause = (() => {\n    if (revertData === '0x')\n      return new ContractFunctionZeroDataError({ functionName })\n    return new ContractFunctionRevertedError({\n      abi,\n      data: revertData,\n      functionName,\n    })\n  })()\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: to,\n    functionName,\n  }) as GetContractErrorReturnType\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}