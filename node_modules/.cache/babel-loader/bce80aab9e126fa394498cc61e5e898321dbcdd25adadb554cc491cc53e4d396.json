{"ast":null,"code":"/**\n * NIST secp256r1 aka p256.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport \"./abstract/hash-to-curve.js\";\nimport { p256_hasher, p256 as p256n } from \"./nist.js\";\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const p256 = p256n;\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const secp256r1 = p256n;\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const hashToCurve = /* @__PURE__ */(() => p256_hasher.hashToCurve)();\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const encodeToCurve = /* @__PURE__ */(() => p256_hasher.encodeToCurve)();","map":{"version":3,"names":["p256_hasher","p256","p256n","secp256r1","hashToCurve","encodeToCurve"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/ox/node_modules/@noble/curves/src/p256.ts"],"sourcesContent":["/**\n * NIST secp256r1 aka p256.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type H2CMethod } from './abstract/hash-to-curve.ts';\nimport { p256_hasher, p256 as p256n } from './nist.ts';\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const p256: typeof p256n = p256n;\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const secp256r1: typeof p256n = p256n;\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const hashToCurve: H2CMethod<bigint> = /* @__PURE__ */ (() => p256_hasher.hashToCurve)();\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const encodeToCurve: H2CMethod<bigint> = /* @__PURE__ */ (() => p256_hasher.encodeToCurve)();\n"],"mappings":"AAAA;;;;AAIA;AACA,OAA+B,6BAA6B;AAC5D,SAASA,WAAW,EAAEC,IAAI,IAAIC,KAAK,QAAQ,WAAW;AACtD;AACA,OAAO,MAAMD,IAAI,GAAiBC,KAAK;AACvC;AACA,OAAO,MAAMC,SAAS,GAAiBD,KAAK;AAC5C;AACA,OAAO,MAAME,WAAW,GAAsB,eAAgB,CAAC,MAAMJ,WAAW,CAACI,WAAW,EAAC,CAAE;AAC/F;AACA,OAAO,MAAMC,aAAa,GAAsB,eAAgB,CAAC,MAAML,WAAW,CAACK,aAAa,EAAC,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}