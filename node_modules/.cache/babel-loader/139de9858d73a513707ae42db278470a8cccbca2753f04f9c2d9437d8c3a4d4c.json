{"ast":null,"code":"import { loadTelemetryScript } from './core/telemetry/initCCA.js';\nimport { getFavicon } from './core/type/util.js';\nimport { store } from './store/store.js';\nimport { checkCrossOriginOpenerPolicy } from './util/checkCrossOriginOpenerPolicy.js';\nimport { getCoinbaseInjectedProvider } from './util/provider.js';\nimport { validatePreferences } from './util/validatePreferences.js';\nimport { CoinbaseWalletProvider } from './CoinbaseWalletProvider.js';\nimport { walletLogo } from './assets/wallet-logo.js';\n/**\n * CoinbaseWalletSDK\n *\n * @deprecated CoinbaseWalletSDK is deprecated and will likely be removed in a future major version release.\n * It's recommended to use `createCoinbaseWalletSDK` instead.\n */\nexport class CoinbaseWalletSDK {\n  constructor(metadata) {\n    void store.persist.rehydrate();\n    this.metadata = {\n      appName: metadata.appName || 'Dapp',\n      appLogoUrl: metadata.appLogoUrl || getFavicon(),\n      appChainIds: metadata.appChainIds || []\n    };\n    store.config.set({\n      metadata: this.metadata\n    });\n    void checkCrossOriginOpenerPolicy();\n  }\n  makeWeb3Provider(preference = {\n    options: 'all'\n  }) {\n    var _a;\n    validatePreferences(preference);\n    if (preference.telemetry !== false) {\n      void loadTelemetryScript();\n    }\n    store.config.set({\n      preference\n    });\n    const params = {\n      metadata: this.metadata,\n      preference\n    };\n    return (_a = getCoinbaseInjectedProvider(params)) !== null && _a !== void 0 ? _a : new CoinbaseWalletProvider(params);\n  }\n  /**\n   * Official Coinbase Wallet logo for developers to use on their frontend\n   * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n   * @param width Width of the logo (Optional)\n   * @returns SVG Data URI\n   */\n  getCoinbaseWalletLogo(type, width = 240) {\n    return walletLogo(type, width);\n  }\n}","map":{"version":3,"names":["loadTelemetryScript","getFavicon","store","checkCrossOriginOpenerPolicy","getCoinbaseInjectedProvider","validatePreferences","CoinbaseWalletProvider","walletLogo","CoinbaseWalletSDK","constructor","metadata","persist","rehydrate","appName","appLogoUrl","appChainIds","config","set","makeWeb3Provider","preference","options","telemetry","params","_a","getCoinbaseWalletLogo","type","width"],"sources":["../src/CoinbaseWalletSDK.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,6BAA6B;AACjE,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,4BAA4B,QAAQ,wCAAwC;AACrF,SAASC,2BAA2B,QAAQ,oBAAoB;AAChE,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAAmBC,UAAU,QAAQ,yBAAyB;AAM9D;;;;;;AAMA,OAAM,MAAOC,iBAAiB;EAG5BC,YAAYC,QAA4C;IACtD,KAAKR,KAAK,CAACS,OAAO,CAACC,SAAS,EAAE;IAE9B,IAAI,CAACF,QAAQ,GAAG;MACdG,OAAO,EAAEH,QAAQ,CAACG,OAAO,IAAI,MAAM;MACnCC,UAAU,EAAEJ,QAAQ,CAACI,UAAU,IAAIb,UAAU,EAAE;MAC/Cc,WAAW,EAAEL,QAAQ,CAACK,WAAW,IAAI;KACtC;IAEDb,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC;MACfP,QAAQ,EAAE,IAAI,CAACA;KAChB,CAAC;IAEF,KAAKP,4BAA4B,EAAE;EACrC;EAEOe,gBAAgBA,CACrBC,UAAA,GAAyB;IACvBC,OAAO,EAAE;GACV;;IAEDf,mBAAmB,CAACc,UAAU,CAAC;IAC/B,IAAIA,UAAU,CAACE,SAAS,KAAK,KAAK,EAAE;MAClC,KAAKrB,mBAAmB,EAAE;IAC5B;IACAE,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC;MACfE;KACD,CAAC;IACF,MAAMG,MAAM,GAAG;MAAEZ,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAES;IAAU,CAAE;IACtD,OAAO,CAAAI,EAAA,GAAAnB,2BAA2B,CAACkB,MAAM,CAAC,cAAAC,EAAA,cAAAA,EAAA,GAAI,IAAIjB,sBAAsB,CAACgB,MAAM,CAAC;EAClF;EAEA;;;;;;EAMOE,qBAAqBA,CAACC,IAAc,EAAEC,KAAK,GAAG,GAAG;IACtD,OAAOnB,UAAU,CAACkB,IAAI,EAAEC,KAAK,CAAC;EAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}