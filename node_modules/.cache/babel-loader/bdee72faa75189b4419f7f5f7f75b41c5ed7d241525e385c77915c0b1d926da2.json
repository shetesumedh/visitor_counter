{"ast":null,"code":"import { ChainNotConfiguredError, createConnector } from '@wagmi/core';\nimport { SwitchChainError, UserRejectedRequestError, getAddress, numberToHex } from 'viem';\nexport function baseAccountConnector(parameters) {\n  let walletProvider;\n  let accountsChanged;\n  let chainChanged;\n  let disconnect;\n  return createConnector(config => ({\n    id: 'baseAccountSDK',\n    name: 'Base Account',\n    rdns: 'app.base.account',\n    type: 'baseAccount',\n    async connect({\n      chainId\n    } = {}) {\n      var _a;\n      try {\n        const provider = await this.getProvider();\n        const accounts = (await provider.request({\n          method: 'eth_requestAccounts',\n          params: []\n        })).map(x => getAddress(x));\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this);\n          provider.on('accountsChanged', accountsChanged);\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this);\n          provider.on('chainChanged', chainChanged);\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this);\n          provider.on('disconnect', disconnect);\n        }\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId();\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain({\n            chainId\n          }).catch(error => {\n            if (error.code === UserRejectedRequestError.code) throw error;\n            return {\n              id: currentChainId\n            };\n          });\n          currentChainId = (_a = chain === null || chain === void 0 ? void 0 : chain.id) !== null && _a !== void 0 ? _a : currentChainId;\n        }\n        return {\n          accounts,\n          chainId: currentChainId\n        };\n      } catch (error) {\n        if (/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(error.message)) throw new UserRejectedRequestError(error);\n        throw error;\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n      await provider.disconnect();\n    },\n    async getAccounts() {\n      const provider = await this.getProvider();\n      return (await provider.request({\n        method: 'eth_accounts'\n      })).map(x => getAddress(x));\n    },\n    async getChainId() {\n      const provider = await this.getProvider();\n      const chainId = await provider.request({\n        method: 'eth_chainId'\n      });\n      return Number(chainId);\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        const preference = (() => {\n          var _a, _b;\n          if (typeof parameters.preference === 'string') return {\n            options: parameters.preference\n          };\n          return Object.assign(Object.assign({}, parameters.preference), {\n            options: (_b = (_a = parameters.preference) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : 'all'\n          });\n        })();\n        const {\n          createBaseAccountSDK\n        } = await import('@base-org/account');\n        const sdk = createBaseAccountSDK(Object.assign(Object.assign({}, parameters), {\n          appChainIds: config.chains.map(x => x.id),\n          preference\n        }));\n        walletProvider = sdk.getProvider();\n      }\n      return walletProvider;\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts();\n        return !!accounts.length;\n      } catch (_a) {\n        return false;\n      }\n    },\n    async switchChain({\n      addEthereumChainParameter,\n      chainId\n    }) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      const chain = config.chains.find(chain => chain.id === chainId);\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError());\n      const provider = await this.getProvider();\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: numberToHex(chain.id)\n          }]\n        });\n        return chain;\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if (error.code === 4902) {\n          try {\n            let blockExplorerUrls;\n            if (addEthereumChainParameter === null || addEthereumChainParameter === void 0 ? void 0 : addEthereumChainParameter.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;else blockExplorerUrls = ((_a = chain.blockExplorers) === null || _a === void 0 ? void 0 : _a.default.url) ? [(_b = chain.blockExplorers) === null || _b === void 0 ? void 0 : _b.default.url] : [];\n            let rpcUrls;\n            if ((_c = addEthereumChainParameter === null || addEthereumChainParameter === void 0 ? void 0 : addEthereumChainParameter.rpcUrls) === null || _c === void 0 ? void 0 : _c.length) rpcUrls = addEthereumChainParameter.rpcUrls;else rpcUrls = [(_e = (_d = chain.rpcUrls.default) === null || _d === void 0 ? void 0 : _d.http[0]) !== null && _e !== void 0 ? _e : ''];\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: (_f = addEthereumChainParameter === null || addEthereumChainParameter === void 0 ? void 0 : addEthereumChainParameter.chainName) !== null && _f !== void 0 ? _f : chain.name,\n              iconUrls: addEthereumChainParameter === null || addEthereumChainParameter === void 0 ? void 0 : addEthereumChainParameter.iconUrls,\n              nativeCurrency: (_g = addEthereumChainParameter === null || addEthereumChainParameter === void 0 ? void 0 : addEthereumChainParameter.nativeCurrency) !== null && _g !== void 0 ? _g : chain.nativeCurrency,\n              rpcUrls\n            };\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain]\n            });\n            return chain;\n          } catch (error) {\n            throw new UserRejectedRequestError(error);\n          }\n        }\n        throw new SwitchChainError(error);\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect();else config.emitter.emit('change', {\n        accounts: accounts.map(x => getAddress(x))\n      });\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain);\n      config.emitter.emit('change', {\n        chainId\n      });\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect');\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n    }\n  }));\n}","map":{"version":3,"names":["ChainNotConfiguredError","createConnector","SwitchChainError","UserRejectedRequestError","getAddress","numberToHex","baseAccountConnector","parameters","walletProvider","accountsChanged","chainChanged","disconnect","config","id","name","rdns","type","connect","chainId","provider","getProvider","accounts","request","method","params","map","x","onAccountsChanged","bind","on","onChainChanged","onDisconnect","currentChainId","getChainId","chain","switchChain","catch","error","code","_a","test","message","removeListener","undefined","getAccounts","Number","preference","options","Object","assign","_b","createBaseAccountSDK","sdk","appChainIds","chains","isAuthorized","length","addEthereumChainParameter","find","blockExplorerUrls","blockExplorers","default","url","rpcUrls","_c","_e","_d","http","addEthereumChain","chainName","_f","iconUrls","nativeCurrency","_g","emitter","emit","_error"],"sources":["../../../../src/interface/builder/core/wagmiConnector.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}