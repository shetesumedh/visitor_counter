{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RecursiveReadLimitExceededError = exports.PositionOutOfBoundsError = exports.NegativeOffsetError = void 0;\nconst base_js_1 = require(\"./base.js\");\nclass NegativeOffsetError extends base_js_1.BaseError {\n  constructor({\n    offset\n  }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError'\n    });\n  }\n}\nexports.NegativeOffsetError = NegativeOffsetError;\nclass PositionOutOfBoundsError extends base_js_1.BaseError {\n  constructor({\n    length,\n    position\n  }) {\n    super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, {\n      name: 'PositionOutOfBoundsError'\n    });\n  }\n}\nexports.PositionOutOfBoundsError = PositionOutOfBoundsError;\nclass RecursiveReadLimitExceededError extends base_js_1.BaseError {\n  constructor({\n    count,\n    limit\n  }) {\n    super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, {\n      name: 'RecursiveReadLimitExceededError'\n    });\n  }\n}\nexports.RecursiveReadLimitExceededError = RecursiveReadLimitExceededError;","map":{"version":3,"names":["base_js_1","require","NegativeOffsetError","BaseError","constructor","offset","name","exports","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/errors/cursor.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError',\n    })\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n      { name: 'PositionOutOfBoundsError' },\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n      { name: 'RecursiveReadLimitExceededError' },\n    )\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAKA,MAAaC,mBAAoB,SAAQF,SAAA,CAAAG,SAAS;EAChDC,YAAY;IAAEC;EAAM,CAAsB;IACxC,KAAK,CAAC,YAAYA,MAAM,wBAAwB,EAAE;MAChDC,IAAI,EAAE;KACP,CAAC;EACJ;;AALFC,OAAA,CAAAL,mBAAA,GAAAA,mBAAA;AAWA,MAAaM,wBAAyB,SAAQR,SAAA,CAAAG,SAAS;EACrDC,YAAY;IAAEK,MAAM;IAAEC;EAAQ,CAAwC;IACpE,KAAK,CACH,cAAcA,QAAQ,yCAAyCD,MAAM,MAAM,EAC3E;MAAEH,IAAI,EAAE;IAA0B,CAAE,CACrC;EACH;;AANFC,OAAA,CAAAC,wBAAA,GAAAA,wBAAA;AAaA,MAAaG,+BAAgC,SAAQX,SAAA,CAAAG,SAAS;EAC5DC,YAAY;IAAEQ,KAAK;IAAEC;EAAK,CAAoC;IAC5D,KAAK,CACH,6BAA6BA,KAAK,wCAAwCD,KAAK,MAAM,EACrF;MAAEN,IAAI,EAAE;IAAiC,CAAE,CAC5C;EACH;;AANFC,OAAA,CAAAI,+BAAA,GAAAA,+BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}