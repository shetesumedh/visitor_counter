{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateAssignmentConflictError = exports.AccountStateConflictError = void 0;\nexports.prettyStateMapping = prettyStateMapping;\nexports.prettyStateOverride = prettyStateOverride;\nconst base_js_1 = require(\"./base.js\");\nclass AccountStateConflictError extends base_js_1.BaseError {\n  constructor({\n    address\n  }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError'\n    });\n  }\n}\nexports.AccountStateConflictError = AccountStateConflictError;\nclass StateAssignmentConflictError extends base_js_1.BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError'\n    });\n  }\n}\nexports.StateAssignmentConflictError = StateAssignmentConflictError;\nfunction prettyStateMapping(stateMapping) {\n  return stateMapping.reduce((pretty, {\n    slot,\n    value\n  }) => {\n    return `${pretty}        ${slot}: ${value}\\n`;\n  }, '');\n}\nfunction prettyStateOverride(stateOverride) {\n  return stateOverride.reduce((pretty, {\n    address,\n    ...state\n  }) => {\n    let val = `${pretty}    ${address}:\\n`;\n    if (state.nonce) val += `      nonce: ${state.nonce}\\n`;\n    if (state.balance) val += `      balance: ${state.balance}\\n`;\n    if (state.code) val += `      code: ${state.code}\\n`;\n    if (state.state) {\n      val += '      state:\\n';\n      val += prettyStateMapping(state.state);\n    }\n    if (state.stateDiff) {\n      val += '      stateDiff:\\n';\n      val += prettyStateMapping(state.stateDiff);\n    }\n    return val;\n  }, '  State Override:\\n').slice(0, -1);\n}","map":{"version":3,"names":["exports","prettyStateMapping","prettyStateOverride","base_js_1","require","AccountStateConflictError","BaseError","constructor","address","name","StateAssignmentConflictError","stateMapping","reduce","pretty","slot","value","stateOverride","state","val","nonce","balance","code","stateDiff","slice"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/errors/stateOverride.ts"],"sourcesContent":["import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n"],"mappings":";;;;;;AA4BAA,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAMAD,OAAA,CAAAE,mBAAA,GAAAA,mBAAA;AAjCA,MAAAC,SAAA,GAAAC,OAAA;AAMA,MAAaC,yBAA0B,SAAQF,SAAA,CAAAG,SAAS;EACtDC,YAAY;IAAEC;EAAO,CAAuB;IAC1C,KAAK,CAAC,sBAAsBA,OAAO,0BAA0B,EAAE;MAC7DC,IAAI,EAAE;KACP,CAAC;EACJ;;AALFT,OAAA,CAAAK,yBAAA,GAAAA,yBAAA;AAYA,MAAaK,4BAA6B,SAAQP,SAAA,CAAAG,SAAS;EACzDC,YAAA;IACE,KAAK,CAAC,kDAAkD,EAAE;MACxDE,IAAI,EAAE;KACP,CAAC;EACJ;;AALFT,OAAA,CAAAU,4BAAA,GAAAA,4BAAA;AASA,SAAgBT,kBAAkBA,CAACU,YAA0B;EAC3D,OAAOA,YAAY,CAACC,MAAM,CAAC,CAACC,MAAM,EAAE;IAAEC,IAAI;IAAEC;EAAK,CAAE,KAAI;IACrD,OAAO,GAAGF,MAAM,WAAWC,IAAI,KAAKC,KAAK,IAAI;EAC/C,CAAC,EAAE,EAAE,CAAC;AACR;AAEA,SAAgBb,mBAAmBA,CAACc,aAA4B;EAC9D,OAAOA,aAAa,CACjBJ,MAAM,CAAC,CAACC,MAAM,EAAE;IAAEL,OAAO;IAAE,GAAGS;EAAK,CAAE,KAAI;IACxC,IAAIC,GAAG,GAAG,GAAGL,MAAM,OAAOL,OAAO,KAAK;IACtC,IAAIS,KAAK,CAACE,KAAK,EAAED,GAAG,IAAI,gBAAgBD,KAAK,CAACE,KAAK,IAAI;IACvD,IAAIF,KAAK,CAACG,OAAO,EAAEF,GAAG,IAAI,kBAAkBD,KAAK,CAACG,OAAO,IAAI;IAC7D,IAAIH,KAAK,CAACI,IAAI,EAAEH,GAAG,IAAI,eAAeD,KAAK,CAACI,IAAI,IAAI;IACpD,IAAIJ,KAAK,CAACA,KAAK,EAAE;MACfC,GAAG,IAAI,gBAAgB;MACvBA,GAAG,IAAIjB,kBAAkB,CAACgB,KAAK,CAACA,KAAK,CAAC;IACxC;IACA,IAAIA,KAAK,CAACK,SAAS,EAAE;MACnBJ,GAAG,IAAI,oBAAoB;MAC3BA,GAAG,IAAIjB,kBAAkB,CAACgB,KAAK,CAACK,SAAS,CAAC;IAC5C;IACA,OAAOJ,GAAG;EACZ,CAAC,EAAE,qBAAqB,CAAC,CACxBK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}