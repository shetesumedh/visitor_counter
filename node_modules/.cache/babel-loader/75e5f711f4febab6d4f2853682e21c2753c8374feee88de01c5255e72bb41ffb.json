{"ast":null,"code":"import * as AbiParameters from 'ox/AbiParameters';\nimport { encodeFunctionData } from '../../../utils/abi/encodeFunctionData.js';\nexport function encodeCalls(calls_, opData) {\n  const calls = calls_.map(call_ => {\n    const call = call_;\n    return {\n      data: call.abi ? encodeFunctionData(call) : call.data ?? '0x',\n      value: call.value ?? 0n,\n      target: call.to\n    };\n  });\n  return AbiParameters.encode(AbiParameters.from(['struct Call { address target; uint256 value; bytes data; }', 'Call[] calls', ...(opData ? ['bytes opData'] : [])]), [calls, ...(opData ? [opData] : [])]);\n}","map":{"version":3,"names":["AbiParameters","encodeFunctionData","encodeCalls","calls_","opData","calls","map","call_","call","data","abi","value","target","to","encode","from"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/experimental/erc7821/utils/encodeCalls.ts"],"sourcesContent":["import * as AbiParameters from 'ox/AbiParameters'\n\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Call, Calls } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../../utils/abi/encodeFunctionData.js'\n\nexport type EncodeCallsErrorType =\n  | AbiParameters.encode.ErrorType\n  | AbiParameters.from.ErrorType\n  | EncodeFunctionDataErrorType\n  | ErrorType\n\nexport function encodeCalls(\n  calls_: Calls<readonly unknown[]>,\n  opData?: Hex | undefined,\n) {\n  const calls = calls_.map((call_) => {\n    const call = call_ as Call\n    return {\n      data: call.abi ? encodeFunctionData(call) : (call.data ?? '0x'),\n      value: call.value ?? 0n,\n      target: call.to,\n    }\n  })\n\n  return AbiParameters.encode(\n    AbiParameters.from([\n      'struct Call { address target; uint256 value; bytes data; }',\n      'Call[] calls',\n      ...(opData ? ['bytes opData'] : []),\n    ]),\n    [calls, ...(opData ? [opData] : [])] as any,\n  )\n}\n"],"mappings":"AAAA,OAAO,KAAKA,aAAa,MAAM,kBAAkB;AAKjD,SAEEC,kBAAkB,QACb,0CAA0C;AAQjD,OAAM,SAAUC,WAAWA,CACzBC,MAAiC,EACjCC,MAAwB;EAExB,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAG,CAAEC,KAAK,IAAI;IACjC,MAAMC,IAAI,GAAGD,KAAa;IAC1B,OAAO;MACLE,IAAI,EAAED,IAAI,CAACE,GAAG,GAAGT,kBAAkB,CAACO,IAAI,CAAC,GAAIA,IAAI,CAACC,IAAI,IAAI,IAAK;MAC/DE,KAAK,EAAEH,IAAI,CAACG,KAAK,IAAI,EAAE;MACvBC,MAAM,EAAEJ,IAAI,CAACK;KACd;EACH,CAAC,CAAC;EAEF,OAAOb,aAAa,CAACc,MAAM,CACzBd,aAAa,CAACe,IAAI,CAAC,CACjB,4DAA4D,EAC5D,cAAc,EACd,IAAIX,MAAM,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,CACpC,CAAC,EACF,CAACC,KAAK,EAAE,IAAID,MAAM,GAAG,CAACA,MAAM,CAAC,GAAG,EAAE,CAAC,CAAQ,CAC5C;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}