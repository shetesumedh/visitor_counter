{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeDeployData = decodeDeployData;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst decodeAbiParameters_js_1 = require(\"./decodeAbiParameters.js\");\nconst docsPath = '/docs/contract/decodeDeployData';\nfunction decodeDeployData(parameters) {\n  const {\n    abi,\n    bytecode,\n    data\n  } = parameters;\n  if (data === bytecode) return {\n    bytecode\n  };\n  const description = abi.find(x => 'type' in x && x.type === 'constructor');\n  if (!description) throw new abi_js_1.AbiConstructorNotFoundError({\n    docsPath\n  });\n  if (!('inputs' in description)) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  if (!description.inputs || description.inputs.length === 0) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  const args = (0, decodeAbiParameters_js_1.decodeAbiParameters)(description.inputs, `0x${data.replace(bytecode, '')}`);\n  return {\n    args,\n    bytecode\n  };\n}","map":{"version":3,"names":["exports","decodeDeployData","abi_js_1","require","decodeAbiParameters_js_1","docsPath","parameters","abi","bytecode","data","description","find","x","type","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","inputs","length","args","decodeAbiParameters","replace"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/abi/decodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/decodeDeployData'\n\nexport type DecodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: abi\n  bytecode: Hex\n  data: Hex\n}\n\nexport type DecodeDeployDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  bytecode: Hex\n  args: allArgs\n}\n\nexport type DecodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | AbiConstructorParamsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | ErrorType\n\nexport function decodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeDeployDataParameters<abi>,\n): DecodeDeployDataReturnType<abi> {\n  const { abi, bytecode, data } = parameters as DecodeDeployDataParameters\n  if (data === bytecode) return { bytecode } as DecodeDeployDataReturnType<abi>\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const args = decodeAbiParameters(\n    description.inputs,\n    `0x${data.replace(bytecode, '')}`,\n  )\n  return { args, bytecode } as unknown as DecodeDeployDataReturnType<abi>\n}\n"],"mappings":";;;;;AA0CAA,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAxCA,MAAAC,QAAA,GAAAC,OAAA;AAUA,MAAAC,wBAAA,GAAAD,OAAA;AAKA,MAAME,QAAQ,GAAG,iCAAiC;AAyBlD,SAAgBJ,gBAAgBA,CAC9BK,UAA2C;EAE3C,MAAM;IAAEC,GAAG;IAAEC,QAAQ;IAAEC;EAAI,CAAE,GAAGH,UAAwC;EACxE,IAAIG,IAAI,KAAKD,QAAQ,EAAE,OAAO;IAAEA;EAAQ,CAAqC;EAE7E,MAAME,WAAW,GAAGH,GAAG,CAACI,IAAI,CAAEC,CAAC,IAAK,MAAM,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,aAAa,CAAC;EAC5E,IAAI,CAACH,WAAW,EAAE,MAAM,IAAIR,QAAA,CAAAY,2BAA2B,CAAC;IAAET;EAAQ,CAAE,CAAC;EACrE,IAAI,EAAE,QAAQ,IAAIK,WAAW,CAAC,EAC5B,MAAM,IAAIR,QAAA,CAAAa,iCAAiC,CAAC;IAAEV;EAAQ,CAAE,CAAC;EAC3D,IAAI,CAACK,WAAW,CAACM,MAAM,IAAIN,WAAW,CAACM,MAAM,CAACC,MAAM,KAAK,CAAC,EACxD,MAAM,IAAIf,QAAA,CAAAa,iCAAiC,CAAC;IAAEV;EAAQ,CAAE,CAAC;EAE3D,MAAMa,IAAI,GAAG,IAAAd,wBAAA,CAAAe,mBAAmB,EAC9BT,WAAW,CAACM,MAAM,EAClB,KAAKP,IAAI,CAACW,OAAO,CAACZ,QAAQ,EAAE,EAAE,CAAC,EAAE,CAClC;EACD,OAAO;IAAEU,IAAI;IAAEV;EAAQ,CAAgD;AACzE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}