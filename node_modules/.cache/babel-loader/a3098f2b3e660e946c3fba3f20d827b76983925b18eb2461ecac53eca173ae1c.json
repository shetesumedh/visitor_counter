{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.labelhash = labelhash;\nconst toBytes_js_1 = require(\"../encoding/toBytes.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst encodedLabelToLabelhash_js_1 = require(\"./encodedLabelToLabelhash.js\");\nfunction labelhash(label) {\n  const result = new Uint8Array(32).fill(0);\n  if (!label) return (0, toHex_js_1.bytesToHex)(result);\n  return (0, encodedLabelToLabelhash_js_1.encodedLabelToLabelhash)(label) || (0, keccak256_js_1.keccak256)((0, toBytes_js_1.stringToBytes)(label));\n}","map":{"version":3,"names":["exports","labelhash","toBytes_js_1","require","toHex_js_1","keccak256_js_1","encodedLabelToLabelhash_js_1","label","result","Uint8Array","fill","bytesToHex","encodedLabelToLabelhash","keccak256","stringToBytes"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/ens/labelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n"],"mappings":";;;;;AA4BAA,OAAA,CAAAC,SAAA,GAAAA,SAAA;AA3BA,MAAAC,YAAA,GAAAC,OAAA;AAIA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,cAAA,GAAAF,OAAA;AACA,MAAAG,4BAAA,GAAAH,OAAA;AAqBA,SAAgBF,SAASA,CAACM,KAAa;EACrC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACzC,IAAI,CAACH,KAAK,EAAE,OAAO,IAAAH,UAAA,CAAAO,UAAU,EAACH,MAAM,CAAC;EACrC,OAAO,IAAAF,4BAAA,CAAAM,uBAAuB,EAACL,KAAK,CAAC,IAAI,IAAAF,cAAA,CAAAQ,SAAS,EAAC,IAAAX,YAAA,CAAAY,aAAa,EAACP,KAAK,CAAC,CAAC;AAC1E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}