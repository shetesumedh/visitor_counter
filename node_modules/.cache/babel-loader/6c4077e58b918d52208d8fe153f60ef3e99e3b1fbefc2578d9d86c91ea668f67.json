{"ast":null,"code":"import { addSubAccount } from '../actions/addSubAccount.js';\n/**\n * A suite of ERC-7895 Wallet Actions.\n *\n * @example\n * import { createPublicClient, createWalletClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { erc7895Actions } from 'viem/experimental'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * }).extend(erc7895Actions())\n *\n * const response = await client.addSubAccount({\n *   keys: [{ key: '0x0000000000000000000000000000000000000000', type: 'address' }],\n *   type: 'create',\n * })\n */\nexport function erc7895Actions() {\n  return client => {\n    return {\n      addSubAccount: parameters => addSubAccount(client, parameters)\n    };\n  };\n}","map":{"version":3,"names":["addSubAccount","erc7895Actions","client","parameters"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/experimental/erc7895/decorators/erc7895.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport {\n  type AddSubAccountParameters,\n  type AddSubAccountReturnType,\n  addSubAccount,\n} from '../actions/addSubAccount.js'\n\nexport type Erc7895Actions = {\n  /**\n   * Requests to add a Sub Account.\n   *\n   * - Docs: https://viem.sh/experimental/erc7895/addSubAccount\n   * - JSON-RPC Methods: [`wallet_addSubAccount`](https://github.com/ethereum/ERCs/blob/abd1c9f4eda2d6ad06ade0e3af314637a27d1ee7/ERCS/erc-7895.md)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link AddSubAccountParameters}\n   * @returns Sub Account. {@link AddSubAccountReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { erc7895Actions } from 'viem/experimental'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * }).extend(erc7895Actions())\n   *\n   * const response = await client.addSubAccount({\n   *   keys: [{ key: '0x0000000000000000000000000000000000000000', type: 'address' }],\n   *   type: 'create',\n   * })\n   */\n  addSubAccount: (\n    parameters: AddSubAccountParameters,\n  ) => Promise<AddSubAccountReturnType>\n}\n\n/**\n * A suite of ERC-7895 Wallet Actions.\n *\n * @example\n * import { createPublicClient, createWalletClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { erc7895Actions } from 'viem/experimental'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * }).extend(erc7895Actions())\n *\n * const response = await client.addSubAccount({\n *   keys: [{ key: '0x0000000000000000000000000000000000000000', type: 'address' }],\n *   type: 'create',\n * })\n */\nexport function erc7895Actions() {\n  return <\n    transport extends Transport,\n    chain extends Chain | undefined = Chain | undefined,\n  >(\n    client: Client<transport, chain>,\n  ): Erc7895Actions => {\n    return {\n      addSubAccount: (parameters) => addSubAccount(client, parameters),\n    }\n  }\n}\n"],"mappings":"AAGA,SAGEA,aAAa,QACR,6BAA6B;AAiCpC;;;;;;;;;;;;;;;;;;AAkBA,OAAM,SAAUC,cAAcA,CAAA;EAC5B,OAIEC,MAAgC,IACd;IAClB,OAAO;MACLF,aAAa,EAAGG,UAAU,IAAKH,aAAa,CAACE,MAAM,EAAEC,UAAU;KAChE;EACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}