{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkRelay = void 0;\nconst error_1 = require(\"../../core/error\");\nconst type_1 = require(\"../../core/type\");\nconst util_1 = require(\"../../core/util\");\nconst DiagnosticLogger_1 = require(\"../../provider/DiagnosticLogger\");\nconst RelayAbstract_1 = require(\"../RelayAbstract\");\nconst Session_1 = require(\"../Session\");\nconst WalletLinkConnection_1 = require(\"./connection/WalletLinkConnection\");\nconst Web3Response_1 = require(\"./type/Web3Response\");\nconst WalletLinkRelayUI_1 = require(\"./ui/WalletLinkRelayUI\");\nclass WalletLinkRelay extends RelayAbstract_1.RelayAbstract {\n  constructor(options) {\n    var _a;\n    super();\n    this.accountsCallback = null;\n    this.chainCallbackParams = {\n      chainId: '',\n      jsonRpcUrl: ''\n    }; // to implement distinctUntilChanged\n    this.chainCallback = null;\n    this.dappDefaultChain = 1;\n    this.appName = '';\n    this.appLogoUrl = null;\n    this.linkedUpdated = linked => {\n      var _a;\n      this.isLinked = linked;\n      const cachedAddresses = this.storage.getItem(RelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n      if (linked) {\n        // Only set linked session variable one way\n        this.session.linked = linked;\n      }\n      this.isUnlinkedErrorState = false;\n      if (cachedAddresses) {\n        const addresses = cachedAddresses.split(' ');\n        const wasConnectedViaStandalone = this.storage.getItem('IsStandaloneSigning') === 'true';\n        if (addresses[0] !== '' && !linked && this.session.linked && !wasConnectedViaStandalone) {\n          this.isUnlinkedErrorState = true;\n          const sessionIdHash = this.getSessionIdHash();\n          (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNLINKED_ERROR_STATE, {\n            sessionIdHash\n          });\n        }\n      }\n    };\n    this.metadataUpdated = (key, value) => {\n      this.storage.setItem(key, value);\n    };\n    this.chainUpdated = (chainId, jsonRpcUrl) => {\n      if (this.chainCallbackParams.chainId === chainId && this.chainCallbackParams.jsonRpcUrl === jsonRpcUrl) {\n        return;\n      }\n      this.chainCallbackParams = {\n        chainId,\n        jsonRpcUrl\n      };\n      if (this.chainCallback) {\n        this.chainCallback(chainId, jsonRpcUrl);\n      }\n    };\n    this.accountUpdated = selectedAddress => {\n      if (this.accountsCallback) {\n        this.accountsCallback([selectedAddress]);\n      }\n      if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n        // We get the ethereum address from the metadata.  If for whatever\n        // reason we don't get a response via an explicit web3 message\n        // we can still fulfill the eip1102 request.\n        Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n          const message = {\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n              method: 'requestEthereumAccounts',\n              result: [selectedAddress]\n            }\n          };\n          this.invokeCallback(Object.assign(Object.assign({}, message), {\n            id\n          }));\n        });\n        WalletLinkRelay.accountRequestCallbackIds.clear();\n      }\n    };\n    this.connectedUpdated = connected => {\n      this.ui.setConnected(connected);\n    };\n    this.resetAndReload = this.resetAndReload.bind(this);\n    this.linkAPIUrl = options.linkAPIUrl;\n    this.storage = options.storage;\n    this.options = options;\n    const {\n      session,\n      ui,\n      connection\n    } = this.subscribe();\n    this._session = session;\n    this.connection = connection;\n    this.relayEventManager = options.relayEventManager;\n    this.diagnostic = options.diagnosticLogger;\n    this._reloadOnDisconnect = (_a = options.reloadOnDisconnect) !== null && _a !== void 0 ? _a : true;\n    this.ui = ui;\n  }\n  subscribe() {\n    const session = Session_1.Session.load(this.storage) || new Session_1.Session(this.storage).save();\n    const {\n      linkAPIUrl,\n      diagnostic\n    } = this;\n    const connection = new WalletLinkConnection_1.WalletLinkConnection({\n      session,\n      linkAPIUrl,\n      diagnostic,\n      listener: this\n    });\n    const {\n      version,\n      darkMode\n    } = this.options;\n    const ui = this.options.uiConstructor({\n      linkAPIUrl,\n      version,\n      darkMode,\n      session\n    });\n    connection.connect();\n    return {\n      session,\n      ui,\n      connection\n    };\n  }\n  attachUI() {\n    this.ui.attach();\n  }\n  resetAndReload() {\n    Promise.race([this.connection.setSessionMetadata('__destroyed', '1'), new Promise(resolve => setTimeout(() => resolve(null), 1000))]).then(() => {\n      var _a, _b;\n      const isStandalone = this.ui.isStandalone();\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.SESSION_STATE_CHANGE, {\n        method: 'relay::resetAndReload',\n        sessionMetadataChange: '__destroyed, 1',\n        sessionIdHash: this.getSessionIdHash()\n      });\n      this.connection.destroy();\n      /**\n       * Only clear storage if the session id we have in memory matches the one on disk\n       * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n       * storage already.  In that case if we clear storage again, the user will be in\n       * a state where the first tab allows the user to connect but the session that\n       * was used isn't persisted.  This leaves the user in a state where they aren't\n       * connected to the mobile app.\n       */\n      const storedSession = Session_1.Session.load(this.storage);\n      if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n        this.storage.clear();\n      } else if (storedSession) {\n        (_b = this.diagnostic) === null || _b === void 0 ? void 0 : _b.log(DiagnosticLogger_1.EVENTS.SKIPPED_CLEARING_SESSION, {\n          sessionIdHash: this.getSessionIdHash(),\n          storedSessionIdHash: Session_1.Session.hash(storedSession.id)\n        });\n      }\n      if (this._reloadOnDisconnect) {\n        this.ui.reloadUI();\n        return;\n      }\n      if (this.accountsCallback) {\n        this.accountsCallback([], true);\n      }\n      const {\n        session,\n        ui,\n        connection\n      } = this.subscribe();\n      this._session = session;\n      this.connection = connection;\n      this.ui = ui;\n      if (isStandalone && this.ui.setStandalone) this.ui.setStandalone(true);\n      if (!this.options.headlessMode) this.attachUI();\n    }).catch(err => {\n      var _a;\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.FAILURE, {\n        method: 'relay::resetAndReload',\n        message: `failed to reset and reload with ${err}`,\n        sessionIdHash: this.getSessionIdHash()\n      });\n    });\n  }\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n  get session() {\n    return this._session;\n  }\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: 'signEthereumMessage',\n      params: {\n        message: (0, util_1.hexStringFromBuffer)(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: 'ethereumAddressFromSignedMessage',\n      params: {\n        message: (0, util_1.hexStringFromBuffer)(message, true),\n        signature: (0, util_1.hexStringFromBuffer)(signature, true),\n        addPrefix\n      }\n    });\n  }\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: 'signEthereumTransaction',\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n        data: (0, util_1.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxPriorityFeePerGas: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: 'signEthereumTransaction',\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n        data: (0, util_1.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.maxFeePerGas ? (0, util_1.bigIntStringFromBN)(params.maxFeePerGas) : null,\n        maxPriorityFeePerGas: params.maxPriorityFeePerGas ? (0, util_1.bigIntStringFromBN)(params.maxPriorityFeePerGas) : null,\n        gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: 'submitEthereumTransaction',\n      params: {\n        signedTransaction: (0, util_1.hexStringFromBuffer)(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: 'scanQRCode',\n      params: {\n        regExp\n      }\n    });\n  }\n  getQRCodeUrl() {\n    return (0, util_1.createQrUrl)(this._session.id, this._session.secret, this.linkAPIUrl, false, this.options.version, this.dappDefaultChain);\n  }\n  genericRequest(data, action) {\n    return this.sendRequest({\n      method: 'generic',\n      params: {\n        action,\n        data\n      }\n    });\n  }\n  sendGenericMessage(request) {\n    return this.sendRequest(request);\n  }\n  sendRequest(request) {\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    const promise = new Promise((resolve, reject) => {\n      if (!this.ui.isStandalone()) {\n        hideSnackbarItem = this.ui.showConnecting({\n          isUnlinkedErrorState: this.isUnlinkedErrorState,\n          onCancel: cancel,\n          onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n        });\n      }\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      if (this.ui.isStandalone()) {\n        this.sendRequestStandalone(id, request);\n      } else {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  setConnectDisabled(disabled) {\n    this.ui.setConnectDisabled(disabled);\n  }\n  setAccountsCallback(accountsCallback) {\n    this.accountsCallback = accountsCallback;\n  }\n  setChainCallback(chainCallback) {\n    this.chainCallback = chainCallback;\n  }\n  setDappDefaultChainCallback(chainId) {\n    this.dappDefaultChain = chainId;\n    if (this.ui instanceof WalletLinkRelayUI_1.WalletLinkRelayUI) {\n      this.ui.setChainId(chainId);\n    }\n  }\n  publishWeb3RequestEvent(id, request) {\n    var _a;\n    const message = {\n      type: 'WEB3_REQUEST',\n      id,\n      request\n    };\n    const storedSession = Session_1.Session.load(this.storage);\n    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST, {\n      eventId: message.id,\n      method: `relay::${request.method}`,\n      sessionIdHash: this.getSessionIdHash(),\n      storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : '',\n      isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString()\n    });\n    this.publishEvent('Web3Request', message, true).then(_ => {\n      var _a;\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST_PUBLISHED, {\n        eventId: message.id,\n        method: `relay::${request.method}`,\n        sessionIdHash: this.getSessionIdHash(),\n        storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : '',\n        isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString()\n      });\n    }).catch(err => {\n      this.handleWeb3ResponseMessage({\n        type: 'WEB3_RESPONSE',\n        id: message.id,\n        response: {\n          method: request.method,\n          errorMessage: err.message\n        }\n      });\n    });\n  }\n  publishWeb3RequestCanceledEvent(id) {\n    const message = {\n      type: 'WEB3_REQUEST_CANCELED',\n      id\n    };\n    this.publishEvent('Web3RequestCanceled', message, false).then();\n  }\n  publishEvent(event, message, callWebhook) {\n    return this.connection.publishEvent(event, message, callWebhook);\n  }\n  handleWeb3ResponseMessage(message) {\n    var _a;\n    const {\n      response\n    } = message;\n    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_RESPONSE, {\n      eventId: message.id,\n      method: `relay::${response.method}`,\n      sessionIdHash: this.getSessionIdHash()\n    });\n    if (response.method === 'requestEthereumAccounts') {\n      WalletLinkRelay.accountRequestCallbackIds.forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), {\n        id\n      })));\n      WalletLinkRelay.accountRequestCallbackIds.clear();\n      return;\n    }\n    this.invokeCallback(message);\n  }\n  handleErrorResponse(id, method, error, errorCode) {\n    var _a;\n    const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : (0, error_1.getMessageFromCode)(errorCode);\n    this.handleWeb3ResponseMessage({\n      type: 'WEB3_RESPONSE',\n      id,\n      response: {\n        method,\n        errorMessage,\n        errorCode\n      }\n    });\n  }\n  invokeCallback(message) {\n    const callback = this.relayEventManager.callbacks.get(message.id);\n    if (callback) {\n      callback(message.response);\n      this.relayEventManager.callbacks.delete(message.id);\n    }\n  }\n  requestEthereumAccounts() {\n    const request = {\n      method: 'requestEthereumAccounts',\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    };\n    const hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        this.ui.hideRequestEthereumAccounts();\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      if (this.ui.inlineAccountsResponse()) {\n        const onAccounts = accounts => {\n          this.handleWeb3ResponseMessage({\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n              method: 'requestEthereumAccounts',\n              result: accounts\n            }\n          });\n        };\n        this.ui.requestEthereumAccounts({\n          onCancel: cancel,\n          onAccounts\n        });\n      } else {\n        // Error if user closes TryExtensionLinkDialog without connecting\n        const err = error_1.standardErrors.provider.userRejectedRequest('User denied account authorization');\n        this.ui.requestEthereumAccounts({\n          onCancel: () => cancel(err)\n        });\n      }\n      WalletLinkRelay.accountRequestCallbackIds.add(id);\n      if (!this.ui.inlineAccountsResponse() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  selectProvider(providerOptions) {\n    const request = {\n      method: 'selectProvider',\n      params: {\n        providerOptions\n      }\n    };\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'selectProvider',\n            result: type_1.ProviderType.Unselected\n          }\n        });\n      };\n      const approve = selectedProviderKey => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'selectProvider',\n            result: selectedProviderKey\n          }\n        });\n      };\n      if (this.ui.selectProvider) this.ui.selectProvider({\n        onApprove: approve,\n        onCancel: _cancel,\n        providerOptions\n      });\n    });\n    return {\n      cancel,\n      promise\n    };\n  }\n  watchAsset(type, address, symbol, decimals, image, chainId) {\n    const request = {\n      method: 'watchAsset',\n      params: {\n        type,\n        options: {\n          address,\n          symbol,\n          decimals,\n          image\n        },\n        chainId\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    if (!this.ui.inlineWatchAsset()) {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'watchAsset',\n            result: false\n          }\n        });\n      };\n      const approve = () => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'watchAsset',\n            result: true\n          }\n        });\n      };\n      if (this.ui.inlineWatchAsset()) {\n        this.ui.watchAsset({\n          onApprove: approve,\n          onCancel: _cancel,\n          type,\n          address,\n          symbol,\n          decimals,\n          image,\n          chainId\n        });\n      }\n      if (!this.ui.inlineWatchAsset() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      cancel,\n      promise\n    };\n  }\n  addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n    const request = {\n      method: 'addEthereumChain',\n      params: {\n        chainId,\n        rpcUrls,\n        blockExplorerUrls,\n        chainName,\n        iconUrls,\n        nativeCurrency\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    if (!this.ui.inlineAddEthereumChain(chainId)) {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'addEthereumChain',\n            result: {\n              isApproved: false,\n              rpcUrl: ''\n            }\n          }\n        });\n      };\n      const approve = rpcUrl => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'addEthereumChain',\n            result: {\n              isApproved: true,\n              rpcUrl\n            }\n          }\n        });\n      };\n      if (this.ui.inlineAddEthereumChain(chainId)) {\n        this.ui.addEthereumChain({\n          onCancel: _cancel,\n          onApprove: approve,\n          chainId: request.params.chainId,\n          rpcUrls: request.params.rpcUrls,\n          blockExplorerUrls: request.params.blockExplorerUrls,\n          chainName: request.params.chainName,\n          iconUrls: request.params.iconUrls,\n          nativeCurrency: request.params.nativeCurrency\n        });\n      }\n      if (!this.ui.inlineAddEthereumChain(chainId) && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  switchEthereumChain(chainId, address) {\n    const request = {\n      method: 'switchEthereumChain',\n      params: Object.assign({\n        chainId\n      }, {\n        address\n      })\n    };\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n          return reject(error_1.standardErrors.provider.custom({\n            code: response.errorCode,\n            message: `Unrecognized chain ID. Try adding the chain using addEthereumChain first.`\n          }));\n        } else if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = error => {\n        var _a;\n        if (error) {\n          // backward compatibility\n          const errorCode = (_a = (0, error_1.getErrorCode)(error)) !== null && _a !== void 0 ? _a : error_1.standardErrorCodes.provider.unsupportedChain;\n          this.handleErrorResponse(id, 'switchEthereumChain', error instanceof Error ? error : error_1.standardErrors.provider.unsupportedChain(chainId), errorCode);\n        } else {\n          this.handleWeb3ResponseMessage({\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n              method: 'switchEthereumChain',\n              result: {\n                isApproved: false,\n                rpcUrl: ''\n              }\n            }\n          });\n        }\n      };\n      const approve = rpcUrl => {\n        this.handleWeb3ResponseMessage({\n          type: 'WEB3_RESPONSE',\n          id,\n          response: {\n            method: 'switchEthereumChain',\n            result: {\n              isApproved: true,\n              rpcUrl\n            }\n          }\n        });\n      };\n      this.ui.switchEthereumChain({\n        onCancel: _cancel,\n        onApprove: approve,\n        chainId: request.params.chainId,\n        address: request.params.address\n      });\n      if (!this.ui.inlineSwitchEthereumChain() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  inlineAddEthereumChain(chainId) {\n    return this.ui.inlineAddEthereumChain(chainId);\n  }\n  getSessionIdHash() {\n    return Session_1.Session.hash(this._session.id);\n  }\n  sendRequestStandalone(id, request) {\n    const _cancel = error => {\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const onSuccess = response => {\n      this.handleWeb3ResponseMessage({\n        type: 'WEB3_RESPONSE',\n        id,\n        response\n      });\n    };\n    switch (request.method) {\n      case 'signEthereumMessage':\n        this.ui.signEthereumMessage({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case 'signEthereumTransaction':\n        this.ui.signEthereumTransaction({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case 'submitEthereumTransaction':\n        this.ui.submitEthereumTransaction({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case 'ethereumAddressFromSignedMessage':\n        this.ui.ethereumAddressFromSignedMessage({\n          request,\n          onSuccess\n        });\n        break;\n      default:\n        _cancel();\n        break;\n    }\n  }\n}\nexports.WalletLinkRelay = WalletLinkRelay;\nWalletLinkRelay.accountRequestCallbackIds = new Set();","map":{"version":3,"names":["Object","defineProperty","exports","value","WalletLinkRelay","error_1","require","type_1","util_1","DiagnosticLogger_1","RelayAbstract_1","Session_1","WalletLinkConnection_1","Web3Response_1","WalletLinkRelayUI_1","RelayAbstract","constructor","options","_a","accountsCallback","chainCallbackParams","chainId","jsonRpcUrl","chainCallback","dappDefaultChain","appName","appLogoUrl","linkedUpdated","linked","isLinked","cachedAddresses","storage","getItem","LOCAL_STORAGE_ADDRESSES_KEY","session","isUnlinkedErrorState","addresses","split","wasConnectedViaStandalone","sessionIdHash","getSessionIdHash","diagnostic","log","EVENTS","UNLINKED_ERROR_STATE","metadataUpdated","key","setItem","chainUpdated","accountUpdated","selectedAddress","accountRequestCallbackIds","size","Array","from","values","forEach","id","message","type","response","method","result","invokeCallback","assign","clear","connectedUpdated","connected","ui","setConnected","resetAndReload","bind","linkAPIUrl","connection","subscribe","_session","relayEventManager","diagnosticLogger","_reloadOnDisconnect","reloadOnDisconnect","Session","load","save","WalletLinkConnection","listener","version","darkMode","uiConstructor","connect","attachUI","attach","Promise","race","setSessionMetadata","resolve","setTimeout","then","_b","isStandalone","SESSION_STATE_CHANGE","sessionMetadataChange","destroy","storedSession","SKIPPED_CLEARING_SESSION","storedSessionIdHash","hash","reloadUI","setStandalone","headlessMode","catch","err","FAILURE","setAppInfo","getStorageItem","setStorageItem","signEthereumMessage","address","addPrefix","typedDataJson","sendRequest","params","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBN","data","nonce","gasPriceInWei","maxFeePerGas","maxPriorityFeePerGas","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","getQRCodeUrl","createQrUrl","secret","genericRequest","action","sendGenericMessage","request","hideSnackbarItem","randomBytesHex","cancel","error","publishWeb3RequestCanceledEvent","handleErrorResponse","promise","reject","showConnecting","onCancel","onResetConnection","callbacks","set","isErrorResponse","Error","errorMessage","sendRequestStandalone","publishWeb3RequestEvent","setConnectDisabled","disabled","setAccountsCallback","setChainCallback","setDappDefaultChainCallback","WalletLinkRelayUI","setChainId","WEB3_REQUEST","eventId","isSessionMismatched","toString","publishEvent","_","WEB3_REQUEST_PUBLISHED","handleWeb3ResponseMessage","event","callWebhook","WEB3_RESPONSE","errorCode","getMessageFromCode","callback","get","delete","requestEthereumAccounts","hideRequestEthereumAccounts","inlineAccountsResponse","onAccounts","accounts","standardErrors","provider","userRejectedRequest","add","selectProvider","providerOptions","_cancel","_error","ProviderType","Unselected","approve","selectedProviderKey","onApprove","watchAsset","symbol","decimals","image","inlineWatchAsset","addEthereumChain","rpcUrls","iconUrls","blockExplorerUrls","chainName","nativeCurrency","inlineAddEthereumChain","isApproved","rpcUrl","switchEthereumChain","custom","code","getErrorCode","standardErrorCodes","unsupportedChain","inlineSwitchEthereumChain","onSuccess","Set"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/cbw-sdk/dist/relay/walletlink/WalletLinkRelay.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkRelay = void 0;\nconst error_1 = require(\"../../core/error\");\nconst type_1 = require(\"../../core/type\");\nconst util_1 = require(\"../../core/util\");\nconst DiagnosticLogger_1 = require(\"../../provider/DiagnosticLogger\");\nconst RelayAbstract_1 = require(\"../RelayAbstract\");\nconst Session_1 = require(\"../Session\");\nconst WalletLinkConnection_1 = require(\"./connection/WalletLinkConnection\");\nconst Web3Response_1 = require(\"./type/Web3Response\");\nconst WalletLinkRelayUI_1 = require(\"./ui/WalletLinkRelayUI\");\nclass WalletLinkRelay extends RelayAbstract_1.RelayAbstract {\n    constructor(options) {\n        var _a;\n        super();\n        this.accountsCallback = null;\n        this.chainCallbackParams = { chainId: '', jsonRpcUrl: '' }; // to implement distinctUntilChanged\n        this.chainCallback = null;\n        this.dappDefaultChain = 1;\n        this.appName = '';\n        this.appLogoUrl = null;\n        this.linkedUpdated = (linked) => {\n            var _a;\n            this.isLinked = linked;\n            const cachedAddresses = this.storage.getItem(RelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n            if (linked) {\n                // Only set linked session variable one way\n                this.session.linked = linked;\n            }\n            this.isUnlinkedErrorState = false;\n            if (cachedAddresses) {\n                const addresses = cachedAddresses.split(' ');\n                const wasConnectedViaStandalone = this.storage.getItem('IsStandaloneSigning') === 'true';\n                if (addresses[0] !== '' && !linked && this.session.linked && !wasConnectedViaStandalone) {\n                    this.isUnlinkedErrorState = true;\n                    const sessionIdHash = this.getSessionIdHash();\n                    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNLINKED_ERROR_STATE, {\n                        sessionIdHash,\n                    });\n                }\n            }\n        };\n        this.metadataUpdated = (key, value) => {\n            this.storage.setItem(key, value);\n        };\n        this.chainUpdated = (chainId, jsonRpcUrl) => {\n            if (this.chainCallbackParams.chainId === chainId &&\n                this.chainCallbackParams.jsonRpcUrl === jsonRpcUrl) {\n                return;\n            }\n            this.chainCallbackParams = {\n                chainId,\n                jsonRpcUrl,\n            };\n            if (this.chainCallback) {\n                this.chainCallback(chainId, jsonRpcUrl);\n            }\n        };\n        this.accountUpdated = (selectedAddress) => {\n            if (this.accountsCallback) {\n                this.accountsCallback([selectedAddress]);\n            }\n            if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n                // We get the ethereum address from the metadata.  If for whatever\n                // reason we don't get a response via an explicit web3 message\n                // we can still fulfill the eip1102 request.\n                Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach((id) => {\n                    const message = {\n                        type: 'WEB3_RESPONSE',\n                        id,\n                        response: {\n                            method: 'requestEthereumAccounts',\n                            result: [selectedAddress],\n                        },\n                    };\n                    this.invokeCallback(Object.assign(Object.assign({}, message), { id }));\n                });\n                WalletLinkRelay.accountRequestCallbackIds.clear();\n            }\n        };\n        this.connectedUpdated = (connected) => {\n            this.ui.setConnected(connected);\n        };\n        this.resetAndReload = this.resetAndReload.bind(this);\n        this.linkAPIUrl = options.linkAPIUrl;\n        this.storage = options.storage;\n        this.options = options;\n        const { session, ui, connection } = this.subscribe();\n        this._session = session;\n        this.connection = connection;\n        this.relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this._reloadOnDisconnect = (_a = options.reloadOnDisconnect) !== null && _a !== void 0 ? _a : true;\n        this.ui = ui;\n    }\n    subscribe() {\n        const session = Session_1.Session.load(this.storage) || new Session_1.Session(this.storage).save();\n        const { linkAPIUrl, diagnostic } = this;\n        const connection = new WalletLinkConnection_1.WalletLinkConnection({\n            session,\n            linkAPIUrl,\n            diagnostic,\n            listener: this,\n        });\n        const { version, darkMode } = this.options;\n        const ui = this.options.uiConstructor({\n            linkAPIUrl,\n            version,\n            darkMode,\n            session,\n        });\n        connection.connect();\n        return { session, ui, connection };\n    }\n    attachUI() {\n        this.ui.attach();\n    }\n    resetAndReload() {\n        Promise.race([\n            this.connection.setSessionMetadata('__destroyed', '1'),\n            new Promise((resolve) => setTimeout(() => resolve(null), 1000)),\n        ])\n            .then(() => {\n            var _a, _b;\n            const isStandalone = this.ui.isStandalone();\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.SESSION_STATE_CHANGE, {\n                method: 'relay::resetAndReload',\n                sessionMetadataChange: '__destroyed, 1',\n                sessionIdHash: this.getSessionIdHash(),\n            });\n            this.connection.destroy();\n            /**\n             * Only clear storage if the session id we have in memory matches the one on disk\n             * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n             * storage already.  In that case if we clear storage again, the user will be in\n             * a state where the first tab allows the user to connect but the session that\n             * was used isn't persisted.  This leaves the user in a state where they aren't\n             * connected to the mobile app.\n             */\n            const storedSession = Session_1.Session.load(this.storage);\n            if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n                this.storage.clear();\n            }\n            else if (storedSession) {\n                (_b = this.diagnostic) === null || _b === void 0 ? void 0 : _b.log(DiagnosticLogger_1.EVENTS.SKIPPED_CLEARING_SESSION, {\n                    sessionIdHash: this.getSessionIdHash(),\n                    storedSessionIdHash: Session_1.Session.hash(storedSession.id),\n                });\n            }\n            if (this._reloadOnDisconnect) {\n                this.ui.reloadUI();\n                return;\n            }\n            if (this.accountsCallback) {\n                this.accountsCallback([], true);\n            }\n            const { session, ui, connection } = this.subscribe();\n            this._session = session;\n            this.connection = connection;\n            this.ui = ui;\n            if (isStandalone && this.ui.setStandalone)\n                this.ui.setStandalone(true);\n            if (!this.options.headlessMode)\n                this.attachUI();\n        })\n            .catch((err) => {\n            var _a;\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.FAILURE, {\n                method: 'relay::resetAndReload',\n                message: `failed to reset and reload with ${err}`,\n                sessionIdHash: this.getSessionIdHash(),\n            });\n        });\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    get session() {\n        return this._session;\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: 'signEthereumMessage',\n            params: {\n                message: (0, util_1.hexStringFromBuffer)(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null,\n            },\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: 'ethereumAddressFromSignedMessage',\n            params: {\n                message: (0, util_1.hexStringFromBuffer)(message, true),\n                signature: (0, util_1.hexStringFromBuffer)(signature, true),\n                addPrefix,\n            },\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: 'signEthereumTransaction',\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n                data: (0, util_1.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n                maxFeePerGas: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n                maxPriorityFeePerGas: params.gasPriceInWei\n                    ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false,\n            },\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: 'signEthereumTransaction',\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n                data: (0, util_1.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n                maxFeePerGas: params.maxFeePerGas ? (0, util_1.bigIntStringFromBN)(params.maxFeePerGas) : null,\n                maxPriorityFeePerGas: params.maxPriorityFeePerGas\n                    ? (0, util_1.bigIntStringFromBN)(params.maxPriorityFeePerGas)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true,\n            },\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: 'submitEthereumTransaction',\n            params: {\n                signedTransaction: (0, util_1.hexStringFromBuffer)(signedTransaction, true),\n                chainId,\n            },\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: 'scanQRCode',\n            params: {\n                regExp,\n            },\n        });\n    }\n    getQRCodeUrl() {\n        return (0, util_1.createQrUrl)(this._session.id, this._session.secret, this.linkAPIUrl, false, this.options.version, this.dappDefaultChain);\n    }\n    genericRequest(data, action) {\n        return this.sendRequest({\n            method: 'generic',\n            params: {\n                action,\n                data,\n            },\n        });\n    }\n    sendGenericMessage(request) {\n        return this.sendRequest(request);\n    }\n    sendRequest(request) {\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        const promise = new Promise((resolve, reject) => {\n            if (!this.ui.isStandalone()) {\n                hideSnackbarItem = this.ui.showConnecting({\n                    isUnlinkedErrorState: this.isUnlinkedErrorState,\n                    onCancel: cancel,\n                    onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n                });\n            }\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            if (this.ui.isStandalone()) {\n                this.sendRequestStandalone(id, request);\n            }\n            else {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    setConnectDisabled(disabled) {\n        this.ui.setConnectDisabled(disabled);\n    }\n    setAccountsCallback(accountsCallback) {\n        this.accountsCallback = accountsCallback;\n    }\n    setChainCallback(chainCallback) {\n        this.chainCallback = chainCallback;\n    }\n    setDappDefaultChainCallback(chainId) {\n        this.dappDefaultChain = chainId;\n        if (this.ui instanceof WalletLinkRelayUI_1.WalletLinkRelayUI) {\n            this.ui.setChainId(chainId);\n        }\n    }\n    publishWeb3RequestEvent(id, request) {\n        var _a;\n        const message = { type: 'WEB3_REQUEST', id, request };\n        const storedSession = Session_1.Session.load(this.storage);\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST, {\n            eventId: message.id,\n            method: `relay::${request.method}`,\n            sessionIdHash: this.getSessionIdHash(),\n            storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : '',\n            isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString(),\n        });\n        this.publishEvent('Web3Request', message, true)\n            .then((_) => {\n            var _a;\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST_PUBLISHED, {\n                eventId: message.id,\n                method: `relay::${request.method}`,\n                sessionIdHash: this.getSessionIdHash(),\n                storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : '',\n                isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString(),\n            });\n        })\n            .catch((err) => {\n            this.handleWeb3ResponseMessage({\n                type: 'WEB3_RESPONSE',\n                id: message.id,\n                response: {\n                    method: request.method,\n                    errorMessage: err.message,\n                },\n            });\n        });\n    }\n    publishWeb3RequestCanceledEvent(id) {\n        const message = {\n            type: 'WEB3_REQUEST_CANCELED',\n            id,\n        };\n        this.publishEvent('Web3RequestCanceled', message, false).then();\n    }\n    publishEvent(event, message, callWebhook) {\n        return this.connection.publishEvent(event, message, callWebhook);\n    }\n    handleWeb3ResponseMessage(message) {\n        var _a;\n        const { response } = message;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_RESPONSE, {\n            eventId: message.id,\n            method: `relay::${response.method}`,\n            sessionIdHash: this.getSessionIdHash(),\n        });\n        if (response.method === 'requestEthereumAccounts') {\n            WalletLinkRelay.accountRequestCallbackIds.forEach((id) => this.invokeCallback(Object.assign(Object.assign({}, message), { id })));\n            WalletLinkRelay.accountRequestCallbackIds.clear();\n            return;\n        }\n        this.invokeCallback(message);\n    }\n    handleErrorResponse(id, method, error, errorCode) {\n        var _a;\n        const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : (0, error_1.getMessageFromCode)(errorCode);\n        this.handleWeb3ResponseMessage({\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n                method,\n                errorMessage,\n                errorCode,\n            },\n        });\n    }\n    invokeCallback(message) {\n        const callback = this.relayEventManager.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            this.relayEventManager.callbacks.delete(message.id);\n        }\n    }\n    requestEthereumAccounts() {\n        const request = {\n            method: 'requestEthereumAccounts',\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null,\n            },\n        };\n        const hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                this.ui.hideRequestEthereumAccounts();\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            if (this.ui.inlineAccountsResponse()) {\n                const onAccounts = (accounts) => {\n                    this.handleWeb3ResponseMessage({\n                        type: 'WEB3_RESPONSE',\n                        id,\n                        response: { method: 'requestEthereumAccounts', result: accounts },\n                    });\n                };\n                this.ui.requestEthereumAccounts({\n                    onCancel: cancel,\n                    onAccounts,\n                });\n            }\n            else {\n                // Error if user closes TryExtensionLinkDialog without connecting\n                const err = error_1.standardErrors.provider.userRejectedRequest('User denied account authorization');\n                this.ui.requestEthereumAccounts({\n                    onCancel: () => cancel(err),\n                });\n            }\n            WalletLinkRelay.accountRequestCallbackIds.add(id);\n            if (!this.ui.inlineAccountsResponse() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    selectProvider(providerOptions) {\n        const request = {\n            method: 'selectProvider',\n            params: {\n                providerOptions,\n            },\n        };\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: { method: 'selectProvider', result: type_1.ProviderType.Unselected },\n                });\n            };\n            const approve = (selectedProviderKey) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: { method: 'selectProvider', result: selectedProviderKey },\n                });\n            };\n            if (this.ui.selectProvider)\n                this.ui.selectProvider({\n                    onApprove: approve,\n                    onCancel: _cancel,\n                    providerOptions,\n                });\n        });\n        return { cancel, promise };\n    }\n    watchAsset(type, address, symbol, decimals, image, chainId) {\n        const request = {\n            method: 'watchAsset',\n            params: {\n                type,\n                options: {\n                    address,\n                    symbol,\n                    decimals,\n                    image,\n                },\n                chainId,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        if (!this.ui.inlineWatchAsset()) {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: {\n                        method: 'watchAsset',\n                        result: false,\n                    },\n                });\n            };\n            const approve = () => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: {\n                        method: 'watchAsset',\n                        result: true,\n                    },\n                });\n            };\n            if (this.ui.inlineWatchAsset()) {\n                this.ui.watchAsset({\n                    onApprove: approve,\n                    onCancel: _cancel,\n                    type,\n                    address,\n                    symbol,\n                    decimals,\n                    image,\n                    chainId,\n                });\n            }\n            if (!this.ui.inlineWatchAsset() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { cancel, promise };\n    }\n    addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n        const request = {\n            method: 'addEthereumChain',\n            params: {\n                chainId,\n                rpcUrls,\n                blockExplorerUrls,\n                chainName,\n                iconUrls,\n                nativeCurrency,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        if (!this.ui.inlineAddEthereumChain(chainId)) {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: {\n                        method: 'addEthereumChain',\n                        result: {\n                            isApproved: false,\n                            rpcUrl: '',\n                        },\n                    },\n                });\n            };\n            const approve = (rpcUrl) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: {\n                        method: 'addEthereumChain',\n                        result: {\n                            isApproved: true,\n                            rpcUrl,\n                        },\n                    },\n                });\n            };\n            if (this.ui.inlineAddEthereumChain(chainId)) {\n                this.ui.addEthereumChain({\n                    onCancel: _cancel,\n                    onApprove: approve,\n                    chainId: request.params.chainId,\n                    rpcUrls: request.params.rpcUrls,\n                    blockExplorerUrls: request.params.blockExplorerUrls,\n                    chainName: request.params.chainName,\n                    iconUrls: request.params.iconUrls,\n                    nativeCurrency: request.params.nativeCurrency,\n                });\n            }\n            if (!this.ui.inlineAddEthereumChain(chainId) && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    switchEthereumChain(chainId, address) {\n        const request = {\n            method: 'switchEthereumChain',\n            params: Object.assign({ chainId }, { address }),\n        };\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n                    return reject(error_1.standardErrors.provider.custom({\n                        code: response.errorCode,\n                        message: `Unrecognized chain ID. Try adding the chain using addEthereumChain first.`,\n                    }));\n                }\n                else if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (error) => {\n                var _a;\n                if (error) {\n                    // backward compatibility\n                    const errorCode = (_a = (0, error_1.getErrorCode)(error)) !== null && _a !== void 0 ? _a : error_1.standardErrorCodes.provider.unsupportedChain;\n                    this.handleErrorResponse(id, 'switchEthereumChain', error instanceof Error ? error : error_1.standardErrors.provider.unsupportedChain(chainId), errorCode);\n                }\n                else {\n                    this.handleWeb3ResponseMessage({\n                        type: 'WEB3_RESPONSE',\n                        id,\n                        response: {\n                            method: 'switchEthereumChain',\n                            result: {\n                                isApproved: false,\n                                rpcUrl: '',\n                            },\n                        },\n                    });\n                }\n            };\n            const approve = (rpcUrl) => {\n                this.handleWeb3ResponseMessage({\n                    type: 'WEB3_RESPONSE',\n                    id,\n                    response: {\n                        method: 'switchEthereumChain',\n                        result: {\n                            isApproved: true,\n                            rpcUrl,\n                        },\n                    },\n                });\n            };\n            this.ui.switchEthereumChain({\n                onCancel: _cancel,\n                onApprove: approve,\n                chainId: request.params.chainId,\n                address: request.params.address,\n            });\n            if (!this.ui.inlineSwitchEthereumChain() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    inlineAddEthereumChain(chainId) {\n        return this.ui.inlineAddEthereumChain(chainId);\n    }\n    getSessionIdHash() {\n        return Session_1.Session.hash(this._session.id);\n    }\n    sendRequestStandalone(id, request) {\n        const _cancel = (error) => {\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const onSuccess = (response) => {\n            this.handleWeb3ResponseMessage({\n                type: 'WEB3_RESPONSE',\n                id,\n                response,\n            });\n        };\n        switch (request.method) {\n            case 'signEthereumMessage':\n                this.ui.signEthereumMessage({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case 'signEthereumTransaction':\n                this.ui.signEthereumTransaction({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case 'submitEthereumTransaction':\n                this.ui.submitEthereumTransaction({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case 'ethereumAddressFromSignedMessage':\n                this.ui.ethereumAddressFromSignedMessage({\n                    request,\n                    onSuccess,\n                });\n                break;\n            default:\n                _cancel();\n                break;\n        }\n    }\n}\nexports.WalletLinkRelay = WalletLinkRelay;\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMC,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACzC,MAAME,MAAM,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACzC,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,iCAAiC,CAAC;AACrE,MAAMI,eAAe,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AACnD,MAAMK,SAAS,GAAGL,OAAO,CAAC,YAAY,CAAC;AACvC,MAAMM,sBAAsB,GAAGN,OAAO,CAAC,mCAAmC,CAAC;AAC3E,MAAMO,cAAc,GAAGP,OAAO,CAAC,qBAAqB,CAAC;AACrD,MAAMQ,mBAAmB,GAAGR,OAAO,CAAC,wBAAwB,CAAC;AAC7D,MAAMF,eAAe,SAASM,eAAe,CAACK,aAAa,CAAC;EACxDC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIC,EAAE;IACN,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,mBAAmB,GAAG;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAC,CAAC,CAAC;IAC5D,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,aAAa,GAAIC,MAAM,IAAK;MAC7B,IAAIV,EAAE;MACN,IAAI,CAACW,QAAQ,GAAGD,MAAM;MACtB,MAAME,eAAe,GAAG,IAAI,CAACC,OAAO,CAACC,OAAO,CAACtB,eAAe,CAACuB,2BAA2B,CAAC;MACzF,IAAIL,MAAM,EAAE;QACR;QACA,IAAI,CAACM,OAAO,CAACN,MAAM,GAAGA,MAAM;MAChC;MACA,IAAI,CAACO,oBAAoB,GAAG,KAAK;MACjC,IAAIL,eAAe,EAAE;QACjB,MAAMM,SAAS,GAAGN,eAAe,CAACO,KAAK,CAAC,GAAG,CAAC;QAC5C,MAAMC,yBAAyB,GAAG,IAAI,CAACP,OAAO,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM;QACxF,IAAII,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAACR,MAAM,IAAI,IAAI,CAACM,OAAO,CAACN,MAAM,IAAI,CAACU,yBAAyB,EAAE;UACrF,IAAI,CAACH,oBAAoB,GAAG,IAAI;UAChC,MAAMI,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;UAC7C,CAACtB,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAACC,oBAAoB,EAAE;YAC/GL;UACJ,CAAC,CAAC;QACN;MACJ;IACJ,CAAC;IACD,IAAI,CAACM,eAAe,GAAG,CAACC,GAAG,EAAE3C,KAAK,KAAK;MACnC,IAAI,CAAC4B,OAAO,CAACgB,OAAO,CAACD,GAAG,EAAE3C,KAAK,CAAC;IACpC,CAAC;IACD,IAAI,CAAC6C,YAAY,GAAG,CAAC3B,OAAO,EAAEC,UAAU,KAAK;MACzC,IAAI,IAAI,CAACF,mBAAmB,CAACC,OAAO,KAAKA,OAAO,IAC5C,IAAI,CAACD,mBAAmB,CAACE,UAAU,KAAKA,UAAU,EAAE;QACpD;MACJ;MACA,IAAI,CAACF,mBAAmB,GAAG;QACvBC,OAAO;QACPC;MACJ,CAAC;MACD,IAAI,IAAI,CAACC,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,CAACF,OAAO,EAAEC,UAAU,CAAC;MAC3C;IACJ,CAAC;IACD,IAAI,CAAC2B,cAAc,GAAIC,eAAe,IAAK;MACvC,IAAI,IAAI,CAAC/B,gBAAgB,EAAE;QACvB,IAAI,CAACA,gBAAgB,CAAC,CAAC+B,eAAe,CAAC,CAAC;MAC5C;MACA,IAAI9C,eAAe,CAAC+C,yBAAyB,CAACC,IAAI,GAAG,CAAC,EAAE;QACpD;QACA;QACA;QACAC,KAAK,CAACC,IAAI,CAAClD,eAAe,CAAC+C,yBAAyB,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAEC,EAAE,IAAK;UAC3E,MAAMC,OAAO,GAAG;YACZC,IAAI,EAAE,eAAe;YACrBF,EAAE;YACFG,QAAQ,EAAE;cACNC,MAAM,EAAE,yBAAyB;cACjCC,MAAM,EAAE,CAACZ,eAAe;YAC5B;UACJ,CAAC;UACD,IAAI,CAACa,cAAc,CAAC/D,MAAM,CAACgE,MAAM,CAAChE,MAAM,CAACgE,MAAM,CAAC,CAAC,CAAC,EAAEN,OAAO,CAAC,EAAE;YAAED;UAAG,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC;QACFrD,eAAe,CAAC+C,yBAAyB,CAACc,KAAK,CAAC,CAAC;MACrD;IACJ,CAAC;IACD,IAAI,CAACC,gBAAgB,GAAIC,SAAS,IAAK;MACnC,IAAI,CAACC,EAAE,CAACC,YAAY,CAACF,SAAS,CAAC;IACnC,CAAC;IACD,IAAI,CAACG,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,UAAU,GAAGvD,OAAO,CAACuD,UAAU;IACpC,IAAI,CAACzC,OAAO,GAAGd,OAAO,CAACc,OAAO;IAC9B,IAAI,CAACd,OAAO,GAAGA,OAAO;IACtB,MAAM;MAAEiB,OAAO;MAAEkC,EAAE;MAAEK;IAAW,CAAC,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;IACpD,IAAI,CAACC,QAAQ,GAAGzC,OAAO;IACvB,IAAI,CAACuC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACG,iBAAiB,GAAG3D,OAAO,CAAC2D,iBAAiB;IAClD,IAAI,CAACnC,UAAU,GAAGxB,OAAO,CAAC4D,gBAAgB;IAC1C,IAAI,CAACC,mBAAmB,GAAG,CAAC5D,EAAE,GAAGD,OAAO,CAAC8D,kBAAkB,MAAM,IAAI,IAAI7D,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;IAClG,IAAI,CAACkD,EAAE,GAAGA,EAAE;EAChB;EACAM,SAASA,CAAA,EAAG;IACR,MAAMxC,OAAO,GAAGvB,SAAS,CAACqE,OAAO,CAACC,IAAI,CAAC,IAAI,CAAClD,OAAO,CAAC,IAAI,IAAIpB,SAAS,CAACqE,OAAO,CAAC,IAAI,CAACjD,OAAO,CAAC,CAACmD,IAAI,CAAC,CAAC;IAClG,MAAM;MAAEV,UAAU;MAAE/B;IAAW,CAAC,GAAG,IAAI;IACvC,MAAMgC,UAAU,GAAG,IAAI7D,sBAAsB,CAACuE,oBAAoB,CAAC;MAC/DjD,OAAO;MACPsC,UAAU;MACV/B,UAAU;MACV2C,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAM;MAAEC,OAAO;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACrE,OAAO;IAC1C,MAAMmD,EAAE,GAAG,IAAI,CAACnD,OAAO,CAACsE,aAAa,CAAC;MAClCf,UAAU;MACVa,OAAO;MACPC,QAAQ;MACRpD;IACJ,CAAC,CAAC;IACFuC,UAAU,CAACe,OAAO,CAAC,CAAC;IACpB,OAAO;MAAEtD,OAAO;MAAEkC,EAAE;MAAEK;IAAW,CAAC;EACtC;EACAgB,QAAQA,CAAA,EAAG;IACP,IAAI,CAACrB,EAAE,CAACsB,MAAM,CAAC,CAAC;EACpB;EACApB,cAAcA,CAAA,EAAG;IACbqB,OAAO,CAACC,IAAI,CAAC,CACT,IAAI,CAACnB,UAAU,CAACoB,kBAAkB,CAAC,aAAa,EAAE,GAAG,CAAC,EACtD,IAAIF,OAAO,CAAEG,OAAO,IAAKC,UAAU,CAAC,MAAMD,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAClE,CAAC,CACGE,IAAI,CAAC,MAAM;MACZ,IAAI9E,EAAE,EAAE+E,EAAE;MACV,MAAMC,YAAY,GAAG,IAAI,CAAC9B,EAAE,CAAC8B,YAAY,CAAC,CAAC;MAC3C,CAAChF,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAACwD,oBAAoB,EAAE;QAC/GtC,MAAM,EAAE,uBAAuB;QAC/BuC,qBAAqB,EAAE,gBAAgB;QACvC7D,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC;MACzC,CAAC,CAAC;MACF,IAAI,CAACiC,UAAU,CAAC4B,OAAO,CAAC,CAAC;MACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;MACY,MAAMC,aAAa,GAAG3F,SAAS,CAACqE,OAAO,CAACC,IAAI,CAAC,IAAI,CAAClD,OAAO,CAAC;MAC1D,IAAI,CAACuE,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAAC7C,EAAE,MAAM,IAAI,CAACkB,QAAQ,CAAClB,EAAE,EAAE;QACvG,IAAI,CAAC1B,OAAO,CAACkC,KAAK,CAAC,CAAC;MACxB,CAAC,MACI,IAAIqC,aAAa,EAAE;QACpB,CAACL,EAAE,GAAG,IAAI,CAACxD,UAAU,MAAM,IAAI,IAAIwD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACvD,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAAC4D,wBAAwB,EAAE;UACnHhE,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAC;UACtCgE,mBAAmB,EAAE7F,SAAS,CAACqE,OAAO,CAACyB,IAAI,CAACH,aAAa,CAAC7C,EAAE;QAChE,CAAC,CAAC;MACN;MACA,IAAI,IAAI,CAACqB,mBAAmB,EAAE;QAC1B,IAAI,CAACV,EAAE,CAACsC,QAAQ,CAAC,CAAC;QAClB;MACJ;MACA,IAAI,IAAI,CAACvF,gBAAgB,EAAE;QACvB,IAAI,CAACA,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC;MACnC;MACA,MAAM;QAAEe,OAAO;QAAEkC,EAAE;QAAEK;MAAW,CAAC,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MACpD,IAAI,CAACC,QAAQ,GAAGzC,OAAO;MACvB,IAAI,CAACuC,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACL,EAAE,GAAGA,EAAE;MACZ,IAAI8B,YAAY,IAAI,IAAI,CAAC9B,EAAE,CAACuC,aAAa,EACrC,IAAI,CAACvC,EAAE,CAACuC,aAAa,CAAC,IAAI,CAAC;MAC/B,IAAI,CAAC,IAAI,CAAC1F,OAAO,CAAC2F,YAAY,EAC1B,IAAI,CAACnB,QAAQ,CAAC,CAAC;IACvB,CAAC,CAAC,CACGoB,KAAK,CAAEC,GAAG,IAAK;MAChB,IAAI5F,EAAE;MACN,CAACA,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAACoE,OAAO,EAAE;QAClGlD,MAAM,EAAE,uBAAuB;QAC/BH,OAAO,EAAE,mCAAmCoD,GAAG,EAAE;QACjDvE,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC;MACzC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAwE,UAAUA,CAACvF,OAAO,EAAEC,UAAU,EAAE;IAC5B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;EACAuF,cAAcA,CAACnE,GAAG,EAAE;IAChB,OAAO,IAAI,CAACf,OAAO,CAACC,OAAO,CAACc,GAAG,CAAC;EACpC;EACA,IAAIZ,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACyC,QAAQ;EACxB;EACAuC,cAAcA,CAACpE,GAAG,EAAE3C,KAAK,EAAE;IACvB,IAAI,CAAC4B,OAAO,CAACgB,OAAO,CAACD,GAAG,EAAE3C,KAAK,CAAC;EACpC;EACAgH,mBAAmBA,CAACzD,OAAO,EAAE0D,OAAO,EAAEC,SAAS,EAAEC,aAAa,EAAE;IAC5D,OAAO,IAAI,CAACC,WAAW,CAAC;MACpB1D,MAAM,EAAE,qBAAqB;MAC7B2D,MAAM,EAAE;QACJ9D,OAAO,EAAE,CAAC,CAAC,EAAElD,MAAM,CAACiH,mBAAmB,EAAE/D,OAAO,EAAE,IAAI,CAAC;QACvD0D,OAAO;QACPC,SAAS;QACTC,aAAa,EAAEA,aAAa,IAAI;MACpC;IACJ,CAAC,CAAC;EACN;EACAI,gCAAgCA,CAAChE,OAAO,EAAEiE,SAAS,EAAEN,SAAS,EAAE;IAC5D,OAAO,IAAI,CAACE,WAAW,CAAC;MACpB1D,MAAM,EAAE,kCAAkC;MAC1C2D,MAAM,EAAE;QACJ9D,OAAO,EAAE,CAAC,CAAC,EAAElD,MAAM,CAACiH,mBAAmB,EAAE/D,OAAO,EAAE,IAAI,CAAC;QACvDiE,SAAS,EAAE,CAAC,CAAC,EAAEnH,MAAM,CAACiH,mBAAmB,EAAEE,SAAS,EAAE,IAAI,CAAC;QAC3DN;MACJ;IACJ,CAAC,CAAC;EACN;EACAO,uBAAuBA,CAACJ,MAAM,EAAE;IAC5B,OAAO,IAAI,CAACD,WAAW,CAAC;MACpB1D,MAAM,EAAE,yBAAyB;MACjC2D,MAAM,EAAE;QACJK,WAAW,EAAEL,MAAM,CAACK,WAAW;QAC/BC,SAAS,EAAEN,MAAM,CAACM,SAAS;QAC3BC,QAAQ,EAAE,CAAC,CAAC,EAAEvH,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACO,QAAQ,CAAC;QACzDE,IAAI,EAAE,CAAC,CAAC,EAAEzH,MAAM,CAACiH,mBAAmB,EAAED,MAAM,CAACS,IAAI,EAAE,IAAI,CAAC;QACxDC,KAAK,EAAEV,MAAM,CAACU,KAAK;QACnBC,aAAa,EAAEX,MAAM,CAACW,aAAa,GAAG,CAAC,CAAC,EAAE3H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACW,aAAa,CAAC,GAAG,IAAI;QACjGC,YAAY,EAAEZ,MAAM,CAACW,aAAa,GAAG,CAAC,CAAC,EAAE3H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACW,aAAa,CAAC,GAAG,IAAI;QAChGE,oBAAoB,EAAEb,MAAM,CAACW,aAAa,GACpC,CAAC,CAAC,EAAE3H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACW,aAAa,CAAC,GACpD,IAAI;QACVG,QAAQ,EAAEd,MAAM,CAACc,QAAQ,GAAG,CAAC,CAAC,EAAE9H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACc,QAAQ,CAAC,GAAG,IAAI;QAClFjH,OAAO,EAAEmG,MAAM,CAACnG,OAAO;QACvBkH,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;EACN;EACAC,gCAAgCA,CAAChB,MAAM,EAAE;IACrC,OAAO,IAAI,CAACD,WAAW,CAAC;MACpB1D,MAAM,EAAE,yBAAyB;MACjC2D,MAAM,EAAE;QACJK,WAAW,EAAEL,MAAM,CAACK,WAAW;QAC/BC,SAAS,EAAEN,MAAM,CAACM,SAAS;QAC3BC,QAAQ,EAAE,CAAC,CAAC,EAAEvH,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACO,QAAQ,CAAC;QACzDE,IAAI,EAAE,CAAC,CAAC,EAAEzH,MAAM,CAACiH,mBAAmB,EAAED,MAAM,CAACS,IAAI,EAAE,IAAI,CAAC;QACxDC,KAAK,EAAEV,MAAM,CAACU,KAAK;QACnBC,aAAa,EAAEX,MAAM,CAACW,aAAa,GAAG,CAAC,CAAC,EAAE3H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACW,aAAa,CAAC,GAAG,IAAI;QACjGC,YAAY,EAAEZ,MAAM,CAACY,YAAY,GAAG,CAAC,CAAC,EAAE5H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACY,YAAY,CAAC,GAAG,IAAI;QAC9FC,oBAAoB,EAAEb,MAAM,CAACa,oBAAoB,GAC3C,CAAC,CAAC,EAAE7H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACa,oBAAoB,CAAC,GAC3D,IAAI;QACVC,QAAQ,EAAEd,MAAM,CAACc,QAAQ,GAAG,CAAC,CAAC,EAAE9H,MAAM,CAACwH,kBAAkB,EAAER,MAAM,CAACc,QAAQ,CAAC,GAAG,IAAI;QAClFjH,OAAO,EAAEmG,MAAM,CAACnG,OAAO;QACvBkH,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;EACN;EACAE,yBAAyBA,CAACC,iBAAiB,EAAErH,OAAO,EAAE;IAClD,OAAO,IAAI,CAACkG,WAAW,CAAC;MACpB1D,MAAM,EAAE,2BAA2B;MACnC2D,MAAM,EAAE;QACJkB,iBAAiB,EAAE,CAAC,CAAC,EAAElI,MAAM,CAACiH,mBAAmB,EAAEiB,iBAAiB,EAAE,IAAI,CAAC;QAC3ErH;MACJ;IACJ,CAAC,CAAC;EACN;EACAsH,UAAUA,CAACC,MAAM,EAAE;IACf,OAAO,IAAI,CAACrB,WAAW,CAAC;MACpB1D,MAAM,EAAE,YAAY;MACpB2D,MAAM,EAAE;QACJoB;MACJ;IACJ,CAAC,CAAC;EACN;EACAC,YAAYA,CAAA,EAAG;IACX,OAAO,CAAC,CAAC,EAAErI,MAAM,CAACsI,WAAW,EAAE,IAAI,CAACnE,QAAQ,CAAClB,EAAE,EAAE,IAAI,CAACkB,QAAQ,CAACoE,MAAM,EAAE,IAAI,CAACvE,UAAU,EAAE,KAAK,EAAE,IAAI,CAACvD,OAAO,CAACoE,OAAO,EAAE,IAAI,CAAC7D,gBAAgB,CAAC;EAC/I;EACAwH,cAAcA,CAACf,IAAI,EAAEgB,MAAM,EAAE;IACzB,OAAO,IAAI,CAAC1B,WAAW,CAAC;MACpB1D,MAAM,EAAE,SAAS;MACjB2D,MAAM,EAAE;QACJyB,MAAM;QACNhB;MACJ;IACJ,CAAC,CAAC;EACN;EACAiB,kBAAkBA,CAACC,OAAO,EAAE;IACxB,OAAO,IAAI,CAAC5B,WAAW,CAAC4B,OAAO,CAAC;EACpC;EACA5B,WAAWA,CAAC4B,OAAO,EAAE;IACjB,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,MAAM3F,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;MACnDH,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;IAC1F,CAAC;IACD,MAAMM,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC,IAAI,CAACvF,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QACzBkD,gBAAgB,GAAG,IAAI,CAAChF,EAAE,CAACwF,cAAc,CAAC;UACtCzH,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;UAC/C0H,QAAQ,EAAEP,MAAM;UAChBQ,iBAAiB,EAAE,IAAI,CAACxF,cAAc,CAAE;QAC5C,CAAC,CAAC;MACN;MACA,IAAI,CAACM,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnDwF,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;QACtF,IAAI,CAAC,CAAC,EAAEvI,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UAC/C,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,IAAI,IAAI,CAACQ,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QACxB,IAAI,CAACkE,qBAAqB,CAAC3G,EAAE,EAAE0F,OAAO,CAAC;MAC3C,CAAC,MACI;QACD,IAAI,CAACkB,uBAAuB,CAAC5G,EAAE,EAAE0F,OAAO,CAAC;MAC7C;IACJ,CAAC,CAAC;IACF,OAAO;MAAEO,OAAO;MAAEJ;IAAO,CAAC;EAC9B;EACAgB,kBAAkBA,CAACC,QAAQ,EAAE;IACzB,IAAI,CAACnG,EAAE,CAACkG,kBAAkB,CAACC,QAAQ,CAAC;EACxC;EACAC,mBAAmBA,CAACrJ,gBAAgB,EAAE;IAClC,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC5C;EACAsJ,gBAAgBA,CAAClJ,aAAa,EAAE;IAC5B,IAAI,CAACA,aAAa,GAAGA,aAAa;EACtC;EACAmJ,2BAA2BA,CAACrJ,OAAO,EAAE;IACjC,IAAI,CAACG,gBAAgB,GAAGH,OAAO;IAC/B,IAAI,IAAI,CAAC+C,EAAE,YAAYtD,mBAAmB,CAAC6J,iBAAiB,EAAE;MAC1D,IAAI,CAACvG,EAAE,CAACwG,UAAU,CAACvJ,OAAO,CAAC;IAC/B;EACJ;EACAgJ,uBAAuBA,CAAC5G,EAAE,EAAE0F,OAAO,EAAE;IACjC,IAAIjI,EAAE;IACN,MAAMwC,OAAO,GAAG;MAAEC,IAAI,EAAE,cAAc;MAAEF,EAAE;MAAE0F;IAAQ,CAAC;IACrD,MAAM7C,aAAa,GAAG3F,SAAS,CAACqE,OAAO,CAACC,IAAI,CAAC,IAAI,CAAClD,OAAO,CAAC;IAC1D,CAACb,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAACkI,YAAY,EAAE;MACvGC,OAAO,EAAEpH,OAAO,CAACD,EAAE;MACnBI,MAAM,EAAE,UAAUsF,OAAO,CAACtF,MAAM,EAAE;MAClCtB,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACtCgE,mBAAmB,EAAEF,aAAa,GAAG3F,SAAS,CAACqE,OAAO,CAACyB,IAAI,CAACH,aAAa,CAAC7C,EAAE,CAAC,GAAG,EAAE;MAClFsH,mBAAmB,EAAE,CAAC,CAACzE,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAAC7C,EAAE,MAAM,IAAI,CAACkB,QAAQ,CAAClB,EAAE,EAAEuH,QAAQ,CAAC;IAC1I,CAAC,CAAC;IACF,IAAI,CAACC,YAAY,CAAC,aAAa,EAAEvH,OAAO,EAAE,IAAI,CAAC,CAC1CsC,IAAI,CAAEkF,CAAC,IAAK;MACb,IAAIhK,EAAE;MACN,CAACA,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAACwI,sBAAsB,EAAE;QACjHL,OAAO,EAAEpH,OAAO,CAACD,EAAE;QACnBI,MAAM,EAAE,UAAUsF,OAAO,CAACtF,MAAM,EAAE;QAClCtB,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAC;QACtCgE,mBAAmB,EAAEF,aAAa,GAAG3F,SAAS,CAACqE,OAAO,CAACyB,IAAI,CAACH,aAAa,CAAC7C,EAAE,CAAC,GAAG,EAAE;QAClFsH,mBAAmB,EAAE,CAAC,CAACzE,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAAC7C,EAAE,MAAM,IAAI,CAACkB,QAAQ,CAAClB,EAAE,EAAEuH,QAAQ,CAAC;MAC1I,CAAC,CAAC;IACN,CAAC,CAAC,CACGnE,KAAK,CAAEC,GAAG,IAAK;MAChB,IAAI,CAACsE,yBAAyB,CAAC;QAC3BzH,IAAI,EAAE,eAAe;QACrBF,EAAE,EAAEC,OAAO,CAACD,EAAE;QACdG,QAAQ,EAAE;UACNC,MAAM,EAAEsF,OAAO,CAACtF,MAAM;UACtBsG,YAAY,EAAErD,GAAG,CAACpD;QACtB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA8F,+BAA+BA,CAAC/F,EAAE,EAAE;IAChC,MAAMC,OAAO,GAAG;MACZC,IAAI,EAAE,uBAAuB;MAC7BF;IACJ,CAAC;IACD,IAAI,CAACwH,YAAY,CAAC,qBAAqB,EAAEvH,OAAO,EAAE,KAAK,CAAC,CAACsC,IAAI,CAAC,CAAC;EACnE;EACAiF,YAAYA,CAACI,KAAK,EAAE3H,OAAO,EAAE4H,WAAW,EAAE;IACtC,OAAO,IAAI,CAAC7G,UAAU,CAACwG,YAAY,CAACI,KAAK,EAAE3H,OAAO,EAAE4H,WAAW,CAAC;EACpE;EACAF,yBAAyBA,CAAC1H,OAAO,EAAE;IAC/B,IAAIxC,EAAE;IACN,MAAM;MAAE0C;IAAS,CAAC,GAAGF,OAAO;IAC5B,CAACxC,EAAE,GAAG,IAAI,CAACuB,UAAU,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,GAAG,CAACjC,kBAAkB,CAACkC,MAAM,CAAC4I,aAAa,EAAE;MACxGT,OAAO,EAAEpH,OAAO,CAACD,EAAE;MACnBI,MAAM,EAAE,UAAUD,QAAQ,CAACC,MAAM,EAAE;MACnCtB,aAAa,EAAE,IAAI,CAACC,gBAAgB,CAAC;IACzC,CAAC,CAAC;IACF,IAAIoB,QAAQ,CAACC,MAAM,KAAK,yBAAyB,EAAE;MAC/CzD,eAAe,CAAC+C,yBAAyB,CAACK,OAAO,CAAEC,EAAE,IAAK,IAAI,CAACM,cAAc,CAAC/D,MAAM,CAACgE,MAAM,CAAChE,MAAM,CAACgE,MAAM,CAAC,CAAC,CAAC,EAAEN,OAAO,CAAC,EAAE;QAAED;MAAG,CAAC,CAAC,CAAC,CAAC;MACjIrD,eAAe,CAAC+C,yBAAyB,CAACc,KAAK,CAAC,CAAC;MACjD;IACJ;IACA,IAAI,CAACF,cAAc,CAACL,OAAO,CAAC;EAChC;EACA+F,mBAAmBA,CAAChG,EAAE,EAAEI,MAAM,EAAE0F,KAAK,EAAEiC,SAAS,EAAE;IAC9C,IAAItK,EAAE;IACN,MAAMiJ,YAAY,GAAG,CAACjJ,EAAE,GAAGqI,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC7F,OAAO,MAAM,IAAI,IAAIxC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EAAEb,OAAO,CAACoL,kBAAkB,EAAED,SAAS,CAAC;IACnK,IAAI,CAACJ,yBAAyB,CAAC;MAC3BzH,IAAI,EAAE,eAAe;MACrBF,EAAE;MACFG,QAAQ,EAAE;QACNC,MAAM;QACNsG,YAAY;QACZqB;MACJ;IACJ,CAAC,CAAC;EACN;EACAzH,cAAcA,CAACL,OAAO,EAAE;IACpB,MAAMgI,QAAQ,GAAG,IAAI,CAAC9G,iBAAiB,CAACmF,SAAS,CAAC4B,GAAG,CAACjI,OAAO,CAACD,EAAE,CAAC;IACjE,IAAIiI,QAAQ,EAAE;MACVA,QAAQ,CAAChI,OAAO,CAACE,QAAQ,CAAC;MAC1B,IAAI,CAACgB,iBAAiB,CAACmF,SAAS,CAAC6B,MAAM,CAAClI,OAAO,CAACD,EAAE,CAAC;IACvD;EACJ;EACAoI,uBAAuBA,CAAA,EAAG;IACtB,MAAM1C,OAAO,GAAG;MACZtF,MAAM,EAAE,yBAAyB;MACjC2D,MAAM,EAAE;QACJ/F,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,UAAU,EAAE,IAAI,CAACA,UAAU,IAAI;MACnC;IACJ,CAAC;IACD,MAAM0H,gBAAgB,GAAG,IAAI;IAC7B,MAAM3F,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;MACnD;MACA;MACAH,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;IAC1F,CAAC;IACD,MAAMM,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC/E,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnD,IAAI,CAACQ,EAAE,CAAC0H,2BAA2B,CAAC,CAAC;QACrC;QACA;QACA1C,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;QACtF,IAAI,CAAC,CAAC,EAAEvI,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UAC/C,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,IAAI,IAAI,CAACQ,EAAE,CAAC2H,sBAAsB,CAAC,CAAC,EAAE;QAClC,MAAMC,UAAU,GAAIC,QAAQ,IAAK;UAC7B,IAAI,CAACb,yBAAyB,CAAC;YAC3BzH,IAAI,EAAE,eAAe;YACrBF,EAAE;YACFG,QAAQ,EAAE;cAAEC,MAAM,EAAE,yBAAyB;cAAEC,MAAM,EAAEmI;YAAS;UACpE,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC7H,EAAE,CAACyH,uBAAuB,CAAC;UAC5BhC,QAAQ,EAAEP,MAAM;UAChB0C;QACJ,CAAC,CAAC;MACN,CAAC,MACI;QACD;QACA,MAAMlF,GAAG,GAAGzG,OAAO,CAAC6L,cAAc,CAACC,QAAQ,CAACC,mBAAmB,CAAC,mCAAmC,CAAC;QACpG,IAAI,CAAChI,EAAE,CAACyH,uBAAuB,CAAC;UAC5BhC,QAAQ,EAAEA,CAAA,KAAMP,MAAM,CAACxC,GAAG;QAC9B,CAAC,CAAC;MACN;MACA1G,eAAe,CAAC+C,yBAAyB,CAACkJ,GAAG,CAAC5I,EAAE,CAAC;MACjD,IAAI,CAAC,IAAI,CAACW,EAAE,CAAC2H,sBAAsB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC3H,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QAC9D,IAAI,CAACmE,uBAAuB,CAAC5G,EAAE,EAAE0F,OAAO,CAAC;MAC7C;IACJ,CAAC,CAAC;IACF,OAAO;MAAEO,OAAO;MAAEJ;IAAO,CAAC;EAC9B;EACAgD,cAAcA,CAACC,eAAe,EAAE;IAC5B,MAAMpD,OAAO,GAAG;MACZtF,MAAM,EAAE,gBAAgB;MACxB2D,MAAM,EAAE;QACJ+E;MACJ;IACJ,CAAC;IACD,MAAM9I,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;IACvD,CAAC;IACD,MAAMG,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC/E,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnD,IAAI,CAAC,CAAC,EAAE/C,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UAC/C,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,MAAM4I,OAAO,GAAIC,MAAM,IAAK;QACxB,IAAI,CAACrB,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YAAEC,MAAM,EAAE,gBAAgB;YAAEC,MAAM,EAAEvD,MAAM,CAACmM,YAAY,CAACC;UAAW;QACjF,CAAC,CAAC;MACN,CAAC;MACD,MAAMC,OAAO,GAAIC,mBAAmB,IAAK;QACrC,IAAI,CAACzB,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YAAEC,MAAM,EAAE,gBAAgB;YAAEC,MAAM,EAAE+I;UAAoB;QACtE,CAAC,CAAC;MACN,CAAC;MACD,IAAI,IAAI,CAACzI,EAAE,CAACkI,cAAc,EACtB,IAAI,CAAClI,EAAE,CAACkI,cAAc,CAAC;QACnBQ,SAAS,EAAEF,OAAO;QAClB/C,QAAQ,EAAE2C,OAAO;QACjBD;MACJ,CAAC,CAAC;IACV,CAAC,CAAC;IACF,OAAO;MAAEjD,MAAM;MAAEI;IAAQ,CAAC;EAC9B;EACAqD,UAAUA,CAACpJ,IAAI,EAAEyD,OAAO,EAAE4F,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE7L,OAAO,EAAE;IACxD,MAAM8H,OAAO,GAAG;MACZtF,MAAM,EAAE,YAAY;MACpB2D,MAAM,EAAE;QACJ7D,IAAI;QACJ1C,OAAO,EAAE;UACLmG,OAAO;UACP4F,MAAM;UACNC,QAAQ;UACRC;QACJ,CAAC;QACD7L;MACJ;IACJ,CAAC;IACD,IAAI+H,gBAAgB,GAAG,IAAI;IAC3B,MAAM3F,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;MACnDH,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;IAC1F,CAAC;IACD,IAAI,CAAC,IAAI,CAAChF,EAAE,CAAC+I,gBAAgB,CAAC,CAAC,EAAE;MAC7B/D,gBAAgB,GAAG,IAAI,CAAChF,EAAE,CAACwF,cAAc,CAAC;QACtCzH,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;QAC/C0H,QAAQ,EAAEP,MAAM;QAChBQ,iBAAiB,EAAE,IAAI,CAACxF,cAAc,CAAE;MAC5C,CAAC,CAAC;IACN;IACA,MAAMoF,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC/E,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnDwF,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;QACtF,IAAI,CAAC,CAAC,EAAEvI,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UAC/C,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,MAAM4I,OAAO,GAAIC,MAAM,IAAK;QACxB,IAAI,CAACrB,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YACNC,MAAM,EAAE,YAAY;YACpBC,MAAM,EAAE;UACZ;QACJ,CAAC,CAAC;MACN,CAAC;MACD,MAAM8I,OAAO,GAAGA,CAAA,KAAM;QAClB,IAAI,CAACxB,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YACNC,MAAM,EAAE,YAAY;YACpBC,MAAM,EAAE;UACZ;QACJ,CAAC,CAAC;MACN,CAAC;MACD,IAAI,IAAI,CAACM,EAAE,CAAC+I,gBAAgB,CAAC,CAAC,EAAE;QAC5B,IAAI,CAAC/I,EAAE,CAAC2I,UAAU,CAAC;UACfD,SAAS,EAAEF,OAAO;UAClB/C,QAAQ,EAAE2C,OAAO;UACjB7I,IAAI;UACJyD,OAAO;UACP4F,MAAM;UACNC,QAAQ;UACRC,KAAK;UACL7L;QACJ,CAAC,CAAC;MACN;MACA,IAAI,CAAC,IAAI,CAAC+C,EAAE,CAAC+I,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC/I,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QACxD,IAAI,CAACmE,uBAAuB,CAAC5G,EAAE,EAAE0F,OAAO,CAAC;MAC7C;IACJ,CAAC,CAAC;IACF,OAAO;MAAEG,MAAM;MAAEI;IAAQ,CAAC;EAC9B;EACA0D,gBAAgBA,CAAC/L,OAAO,EAAEgM,OAAO,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,cAAc,EAAE;IACvF,MAAMtE,OAAO,GAAG;MACZtF,MAAM,EAAE,kBAAkB;MAC1B2D,MAAM,EAAE;QACJnG,OAAO;QACPgM,OAAO;QACPE,iBAAiB;QACjBC,SAAS;QACTF,QAAQ;QACRG;MACJ;IACJ,CAAC;IACD,IAAIrE,gBAAgB,GAAG,IAAI;IAC3B,MAAM3F,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;MACnDH,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;IAC1F,CAAC;IACD,IAAI,CAAC,IAAI,CAAChF,EAAE,CAACsJ,sBAAsB,CAACrM,OAAO,CAAC,EAAE;MAC1C+H,gBAAgB,GAAG,IAAI,CAAChF,EAAE,CAACwF,cAAc,CAAC;QACtCzH,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;QAC/C0H,QAAQ,EAAEP,MAAM;QAChBQ,iBAAiB,EAAE,IAAI,CAACxF,cAAc,CAAE;MAC5C,CAAC,CAAC;IACN;IACA,MAAMoF,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC/E,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnDwF,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC;QACtF,IAAI,CAAC,CAAC,EAAEvI,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UAC/C,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,MAAM4I,OAAO,GAAIC,MAAM,IAAK;QACxB,IAAI,CAACrB,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YACNC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;cACJ6J,UAAU,EAAE,KAAK;cACjBC,MAAM,EAAE;YACZ;UACJ;QACJ,CAAC,CAAC;MACN,CAAC;MACD,MAAMhB,OAAO,GAAIgB,MAAM,IAAK;QACxB,IAAI,CAACxC,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YACNC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;cACJ6J,UAAU,EAAE,IAAI;cAChBC;YACJ;UACJ;QACJ,CAAC,CAAC;MACN,CAAC;MACD,IAAI,IAAI,CAACxJ,EAAE,CAACsJ,sBAAsB,CAACrM,OAAO,CAAC,EAAE;QACzC,IAAI,CAAC+C,EAAE,CAACgJ,gBAAgB,CAAC;UACrBvD,QAAQ,EAAE2C,OAAO;UACjBM,SAAS,EAAEF,OAAO;UAClBvL,OAAO,EAAE8H,OAAO,CAAC3B,MAAM,CAACnG,OAAO;UAC/BgM,OAAO,EAAElE,OAAO,CAAC3B,MAAM,CAAC6F,OAAO;UAC/BE,iBAAiB,EAAEpE,OAAO,CAAC3B,MAAM,CAAC+F,iBAAiB;UACnDC,SAAS,EAAErE,OAAO,CAAC3B,MAAM,CAACgG,SAAS;UACnCF,QAAQ,EAAEnE,OAAO,CAAC3B,MAAM,CAAC8F,QAAQ;UACjCG,cAAc,EAAEtE,OAAO,CAAC3B,MAAM,CAACiG;QACnC,CAAC,CAAC;MACN;MACA,IAAI,CAAC,IAAI,CAACrJ,EAAE,CAACsJ,sBAAsB,CAACrM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC+C,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QACrE,IAAI,CAACmE,uBAAuB,CAAC5G,EAAE,EAAE0F,OAAO,CAAC;MAC7C;IACJ,CAAC,CAAC;IACF,OAAO;MAAEO,OAAO;MAAEJ;IAAO,CAAC;EAC9B;EACAuE,mBAAmBA,CAACxM,OAAO,EAAE+F,OAAO,EAAE;IAClC,MAAM+B,OAAO,GAAG;MACZtF,MAAM,EAAE,qBAAqB;MAC7B2D,MAAM,EAAExH,MAAM,CAACgE,MAAM,CAAC;QAAE3C;MAAQ,CAAC,EAAE;QAAE+F;MAAQ,CAAC;IAClD,CAAC;IACD,MAAM3D,EAAE,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAAC6I,cAAc,EAAE,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,+BAA+B,CAAC/F,EAAE,CAAC;MACxC,IAAI,CAACgG,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;IACvD,CAAC;IACD,MAAMG,OAAO,GAAG,IAAI/D,OAAO,CAAC,CAACG,OAAO,EAAE6D,MAAM,KAAK;MAC7C,IAAI,CAAC/E,iBAAiB,CAACmF,SAAS,CAACC,GAAG,CAACvG,EAAE,EAAGG,QAAQ,IAAK;QACnD,IAAI,CAAC,CAAC,EAAE/C,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,IAAIA,QAAQ,CAAC4H,SAAS,EAAE;UACrE,OAAO7B,MAAM,CAACtJ,OAAO,CAAC6L,cAAc,CAACC,QAAQ,CAAC2B,MAAM,CAAC;YACjDC,IAAI,EAAEnK,QAAQ,CAAC4H,SAAS;YACxB9H,OAAO,EAAE;UACb,CAAC,CAAC,CAAC;QACP,CAAC,MACI,IAAI,CAAC,CAAC,EAAE7C,cAAc,CAACoJ,eAAe,EAAErG,QAAQ,CAAC,EAAE;UACpD,OAAO+F,MAAM,CAAC,IAAIO,KAAK,CAACtG,QAAQ,CAACuG,YAAY,CAAC,CAAC;QACnD;QACArE,OAAO,CAAClC,QAAQ,CAAC;MACrB,CAAC,CAAC;MACF,MAAM4I,OAAO,GAAIjD,KAAK,IAAK;QACvB,IAAIrI,EAAE;QACN,IAAIqI,KAAK,EAAE;UACP;UACA,MAAMiC,SAAS,GAAG,CAACtK,EAAE,GAAG,CAAC,CAAC,EAAEb,OAAO,CAAC2N,YAAY,EAAEzE,KAAK,CAAC,MAAM,IAAI,IAAIrI,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGb,OAAO,CAAC4N,kBAAkB,CAAC9B,QAAQ,CAAC+B,gBAAgB;UAC/I,IAAI,CAACzE,mBAAmB,CAAChG,EAAE,EAAE,qBAAqB,EAAE8F,KAAK,YAAYW,KAAK,GAAGX,KAAK,GAAGlJ,OAAO,CAAC6L,cAAc,CAACC,QAAQ,CAAC+B,gBAAgB,CAAC7M,OAAO,CAAC,EAAEmK,SAAS,CAAC;QAC9J,CAAC,MACI;UACD,IAAI,CAACJ,yBAAyB,CAAC;YAC3BzH,IAAI,EAAE,eAAe;YACrBF,EAAE;YACFG,QAAQ,EAAE;cACNC,MAAM,EAAE,qBAAqB;cAC7BC,MAAM,EAAE;gBACJ6J,UAAU,EAAE,KAAK;gBACjBC,MAAM,EAAE;cACZ;YACJ;UACJ,CAAC,CAAC;QACN;MACJ,CAAC;MACD,MAAMhB,OAAO,GAAIgB,MAAM,IAAK;QACxB,IAAI,CAACxC,yBAAyB,CAAC;UAC3BzH,IAAI,EAAE,eAAe;UACrBF,EAAE;UACFG,QAAQ,EAAE;YACNC,MAAM,EAAE,qBAAqB;YAC7BC,MAAM,EAAE;cACJ6J,UAAU,EAAE,IAAI;cAChBC;YACJ;UACJ;QACJ,CAAC,CAAC;MACN,CAAC;MACD,IAAI,CAACxJ,EAAE,CAACyJ,mBAAmB,CAAC;QACxBhE,QAAQ,EAAE2C,OAAO;QACjBM,SAAS,EAAEF,OAAO;QAClBvL,OAAO,EAAE8H,OAAO,CAAC3B,MAAM,CAACnG,OAAO;QAC/B+F,OAAO,EAAE+B,OAAO,CAAC3B,MAAM,CAACJ;MAC5B,CAAC,CAAC;MACF,IAAI,CAAC,IAAI,CAAChD,EAAE,CAAC+J,yBAAyB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC/J,EAAE,CAAC8B,YAAY,CAAC,CAAC,EAAE;QACjE,IAAI,CAACmE,uBAAuB,CAAC5G,EAAE,EAAE0F,OAAO,CAAC;MAC7C;IACJ,CAAC,CAAC;IACF,OAAO;MAAEO,OAAO;MAAEJ;IAAO,CAAC;EAC9B;EACAoE,sBAAsBA,CAACrM,OAAO,EAAE;IAC5B,OAAO,IAAI,CAAC+C,EAAE,CAACsJ,sBAAsB,CAACrM,OAAO,CAAC;EAClD;EACAmB,gBAAgBA,CAAA,EAAG;IACf,OAAO7B,SAAS,CAACqE,OAAO,CAACyB,IAAI,CAAC,IAAI,CAAC9B,QAAQ,CAAClB,EAAE,CAAC;EACnD;EACA2G,qBAAqBA,CAAC3G,EAAE,EAAE0F,OAAO,EAAE;IAC/B,MAAMqD,OAAO,GAAIjD,KAAK,IAAK;MACvB,IAAI,CAACE,mBAAmB,CAAChG,EAAE,EAAE0F,OAAO,CAACtF,MAAM,EAAE0F,KAAK,CAAC;IACvD,CAAC;IACD,MAAM6E,SAAS,GAAIxK,QAAQ,IAAK;MAC5B,IAAI,CAACwH,yBAAyB,CAAC;QAC3BzH,IAAI,EAAE,eAAe;QACrBF,EAAE;QACFG;MACJ,CAAC,CAAC;IACN,CAAC;IACD,QAAQuF,OAAO,CAACtF,MAAM;MAClB,KAAK,qBAAqB;QACtB,IAAI,CAACO,EAAE,CAAC+C,mBAAmB,CAAC;UACxBgC,OAAO;UACPiF,SAAS;UACTvE,QAAQ,EAAE2C;QACd,CAAC,CAAC;QACF;MACJ,KAAK,yBAAyB;QAC1B,IAAI,CAACpI,EAAE,CAACwD,uBAAuB,CAAC;UAC5BuB,OAAO;UACPiF,SAAS;UACTvE,QAAQ,EAAE2C;QACd,CAAC,CAAC;QACF;MACJ,KAAK,2BAA2B;QAC5B,IAAI,CAACpI,EAAE,CAACqE,yBAAyB,CAAC;UAC9BU,OAAO;UACPiF,SAAS;UACTvE,QAAQ,EAAE2C;QACd,CAAC,CAAC;QACF;MACJ,KAAK,kCAAkC;QACnC,IAAI,CAACpI,EAAE,CAACsD,gCAAgC,CAAC;UACrCyB,OAAO;UACPiF;QACJ,CAAC,CAAC;QACF;MACJ;QACI5B,OAAO,CAAC,CAAC;QACT;IACR;EACJ;AACJ;AACAtM,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzCA,eAAe,CAAC+C,yBAAyB,GAAG,IAAIkL,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}