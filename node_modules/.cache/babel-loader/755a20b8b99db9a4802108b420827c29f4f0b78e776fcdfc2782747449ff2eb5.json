{"ast":null,"code":"// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nimport { standardErrors } from '../error/errors.js';\nimport { BigIntString, HexString, IntNumber, RegExpString } from './index.js';\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\nexport function randomBytesHex(length) {\n  return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\nexport function uint8ArrayToHex(value) {\n  return [...value].map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport function hexStringToUint8Array(hexString) {\n  return new Uint8Array(hexString.match(/.{1,2}/g).map(byte => Number.parseInt(byte, 16)));\n}\nexport function hexStringFromBuffer(buf, includePrefix = false) {\n  const hex = buf.toString('hex');\n  return HexString(includePrefix ? `0x${hex}` : hex);\n}\nexport function encodeToHexString(str) {\n  return hexStringFromBuffer(ensureBuffer(str), true);\n}\nexport function bigIntStringFromBigInt(bi) {\n  return BigIntString(bi.toString(10));\n}\nexport function intNumberFromHexString(hex) {\n  return IntNumber(Number(BigInt(ensureEvenLengthHexString(hex, true))));\n}\nexport function hexStringFromNumber(num) {\n  return HexString(`0x${BigInt(num).toString(16)}`);\n}\nexport function has0xPrefix(str) {\n  return str.startsWith('0x') || str.startsWith('0X');\n}\nexport function strip0x(hex) {\n  if (has0xPrefix(hex)) {\n    return hex.slice(2);\n  }\n  return hex;\n}\nexport function prepend0x(hex) {\n  if (has0xPrefix(hex)) {\n    return `0x${hex.slice(2)}`;\n  }\n  return `0x${hex}`;\n}\nexport function isHexString(hex) {\n  if (typeof hex !== 'string') {\n    return false;\n  }\n  const s = strip0x(hex).toLowerCase();\n  return HEXADECIMAL_STRING_REGEX.test(s);\n}\nexport function ensureHexString(hex, includePrefix = false) {\n  if (typeof hex === 'string') {\n    const s = strip0x(hex).toLowerCase();\n    if (HEXADECIMAL_STRING_REGEX.test(s)) {\n      return HexString(includePrefix ? `0x${s}` : s);\n    }\n  }\n  throw standardErrors.rpc.invalidParams(`\"${String(hex)}\" is not a hexadecimal string`);\n}\nexport function ensureEvenLengthHexString(hex, includePrefix = false) {\n  let h = ensureHexString(hex, false);\n  if (h.length % 2 === 1) {\n    h = HexString(`0${h}`);\n  }\n  return includePrefix ? HexString(`0x${h}`) : h;\n}\nexport function ensureAddressString(str) {\n  if (typeof str === 'string') {\n    const s = strip0x(str).toLowerCase();\n    if (isHexString(s) && s.length === 40) {\n      return prepend0x(s);\n    }\n  }\n  throw standardErrors.rpc.invalidParams(`Invalid Ethereum address: ${String(str)}`);\n}\nexport function ensureBuffer(str) {\n  if (Buffer.isBuffer(str)) {\n    return str;\n  }\n  if (typeof str === 'string') {\n    if (isHexString(str)) {\n      const s = ensureEvenLengthHexString(str, false);\n      return Buffer.from(s, 'hex');\n    }\n    return Buffer.from(str, 'utf8');\n  }\n  throw standardErrors.rpc.invalidParams(`Not binary data: ${String(str)}`);\n}\nexport function ensureIntNumber(num) {\n  if (typeof num === 'number' && Number.isInteger(num)) {\n    return IntNumber(num);\n  }\n  if (typeof num === 'string') {\n    if (INT_STRING_REGEX.test(num)) {\n      return IntNumber(Number(num));\n    }\n    if (isHexString(num)) {\n      return IntNumber(Number(BigInt(ensureEvenLengthHexString(num, true))));\n    }\n  }\n  throw standardErrors.rpc.invalidParams(`Not an integer: ${String(num)}`);\n}\nexport function ensureRegExpString(regExp) {\n  if (regExp instanceof RegExp) {\n    return RegExpString(regExp.toString());\n  }\n  throw standardErrors.rpc.invalidParams(`Not a RegExp: ${String(regExp)}`);\n}\nexport function ensureBigInt(val) {\n  if (val !== null && (typeof val === 'bigint' || isBigNumber(val))) {\n    // biome-ignore lint/suspicious/noExplicitAny: force cast to any to avoid type error\n    return BigInt(val.toString(10));\n  }\n  if (typeof val === 'number') {\n    return BigInt(ensureIntNumber(val));\n  }\n  if (typeof val === 'string') {\n    if (INT_STRING_REGEX.test(val)) {\n      return BigInt(val);\n    }\n    if (isHexString(val)) {\n      return BigInt(ensureEvenLengthHexString(val, true));\n    }\n  }\n  throw standardErrors.rpc.invalidParams(`Not an integer: ${String(val)}`);\n}\nexport function ensureParsedJSONObject(val) {\n  if (typeof val === 'string') {\n    return JSON.parse(val);\n  }\n  if (typeof val === 'object') {\n    return val;\n  }\n  throw standardErrors.rpc.invalidParams(`Not a JSON string or an object: ${String(val)}`);\n}\nexport function isBigNumber(val) {\n  // biome-ignore lint/suspicious/noExplicitAny: force cast to any to avoid type error\n  if (val == null || typeof val.constructor !== 'function') {\n    return false;\n  }\n  // biome-ignore lint/suspicious/noExplicitAny: force cast to any to avoid type error\n  const {\n    constructor: constructor_\n  } = val;\n  return typeof constructor_.config === 'function' && typeof constructor_.EUCLID === 'number';\n}\nexport function range(start, stop) {\n  return Array.from({\n    length: stop - start\n  }, (_, i) => start + i);\n}\nexport function getFavicon() {\n  const el = document.querySelector('link[sizes=\"192x192\"]') || document.querySelector('link[sizes=\"180x180\"]') || document.querySelector('link[rel=\"icon\"]') || document.querySelector('link[rel=\"shortcut icon\"]');\n  const {\n    protocol,\n    host\n  } = document.location;\n  const href = el ? el.getAttribute('href') : null;\n  if (!href || href.startsWith('javascript:') || href.startsWith('vbscript:')) {\n    return `${protocol}//${host}/favicon.ico`; // fallback\n  }\n  if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('data:')) {\n    return href;\n  }\n  if (href.startsWith('//')) {\n    return protocol + href;\n  }\n  return `${protocol}//${host}${href}`;\n}\nexport function areAddressArraysEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((value, index) => value === arr2[index]);\n}","map":{"version":3,"names":["standardErrors","BigIntString","HexString","IntNumber","RegExpString","INT_STRING_REGEX","HEXADECIMAL_STRING_REGEX","randomBytesHex","length","uint8ArrayToHex","crypto","getRandomValues","Uint8Array","value","map","b","toString","padStart","join","hexStringToUint8Array","hexString","match","byte","Number","parseInt","hexStringFromBuffer","buf","includePrefix","hex","encodeToHexString","str","ensureBuffer","bigIntStringFromBigInt","bi","intNumberFromHexString","BigInt","ensureEvenLengthHexString","hexStringFromNumber","num","has0xPrefix","startsWith","strip0x","slice","prepend0x","isHexString","s","toLowerCase","test","ensureHexString","rpc","invalidParams","String","h","ensureAddressString","Buffer","isBuffer","from","ensureIntNumber","isInteger","ensureRegExpString","regExp","RegExp","ensureBigInt","val","isBigNumber","ensureParsedJSONObject","JSON","parse","constructor","constructor_","config","EUCLID","range","start","stop","Array","_","i","getFavicon","el","document","querySelector","protocol","host","location","href","getAttribute","areAddressArraysEqual","arr1","arr2","every","index"],"sources":["../../../src/core/type/util.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}