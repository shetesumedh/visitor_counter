{"ast":null,"code":"import { watchAsset } from '../actions/watchAsset.js';\nexport function watchAssetMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return watchAsset(config, variables);\n    },\n    mutationKey: ['watchAsset']\n  };\n}","map":{"version":3,"names":["watchAsset","watchAssetMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/query/watchAsset.ts"],"sourcesContent":["import type { MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type WatchAssetErrorType,\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../actions/watchAsset.js'\nimport type { Config } from '../createConfig.js'\nimport type { Compute } from '../types/utils.js'\nimport type { Mutate, MutateAsync } from './types.js'\n\nexport function watchAssetMutationOptions(config: Config) {\n  return {\n    mutationFn(variables) {\n      return watchAsset(config, variables)\n    },\n    mutationKey: ['watchAsset'],\n  } as const satisfies MutationOptions<\n    WatchAssetData,\n    WatchAssetErrorType,\n    WatchAssetVariables\n  >\n}\n\nexport type WatchAssetData = WatchAssetReturnType\n\nexport type WatchAssetVariables = Compute<WatchAssetParameters>\n\nexport type WatchAssetMutate<context = unknown> = Mutate<\n  WatchAssetData,\n  WatchAssetErrorType,\n  WatchAssetVariables,\n  context\n>\n\nexport type WatchAssetMutateAsync<context = unknown> = MutateAsync<\n  WatchAssetData,\n  WatchAssetErrorType,\n  WatchAssetVariables,\n  context\n>\n"],"mappings":"AAEA,SAIEA,UAAU,QACL,0BAA0B;AAKjC,OAAM,SAAUC,yBAAyBA,CAACC,MAAc;EACtD,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,UAAU,CAACE,MAAM,EAAEE,SAAS,CAAC;IACtC,CAAC;IACDC,WAAW,EAAE,CAAC,YAAY;GAK3B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}