{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMinGasPrice = setMinGasPrice;\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nasync function setMinGasPrice(client, {\n  gasPrice\n}) {\n  await client.request({\n    method: `${client.mode}_setMinGasPrice`,\n    params: [(0, toHex_js_1.numberToHex)(gasPrice)]\n  });\n}","map":{"version":3,"names":["exports","setMinGasPrice","toHex_js_1","require","client","gasPrice","request","method","mode","params","numberToHex"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/actions/test/setMinGasPrice.ts"],"sourcesContent":["import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetMinGasPriceParameters = {\n  /** The gas price. */\n  gasPrice: bigint\n}\n\nexport type SetMinGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Change the minimum gas price accepted by the network (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice\n *\n * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n *\n * @param client - Client to use\n * @param parameters â€“ {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setMinGasPrice } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setMinGasPrice(client, {\n *   gasPrice: parseGwei('20'),\n * })\n */\nexport async function setMinGasPrice<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { gasPrice }: SetMinGasPriceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setMinGasPrice`,\n    params: [numberToHex(gasPrice)],\n  })\n}\n"],"mappings":";;;;;AA0CAA,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAjCA,MAAAC,UAAA,GAAAC,OAAA;AAiCO,eAAeF,cAAcA,CAIlCG,MAAoE,EACpE;EAAEC;AAAQ,CAA4B;EAEtC,MAAMD,MAAM,CAACE,OAAO,CAAC;IACnBC,MAAM,EAAE,GAAGH,MAAM,CAACI,IAAI,iBAAiB;IACvCC,MAAM,EAAE,CAAC,IAAAP,UAAA,CAAAQ,WAAW,EAACL,QAAQ,CAAC;GAC/B,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}