{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertRequest = assertRequest;\nconst parseAccount_js_1 = require(\"../../accounts/utils/parseAccount.js\");\nconst number_js_1 = require(\"../../constants/number.js\");\nconst address_js_1 = require(\"../../errors/address.js\");\nconst node_js_1 = require(\"../../errors/node.js\");\nconst transaction_js_1 = require(\"../../errors/transaction.js\");\nconst isAddress_js_1 = require(\"../address/isAddress.js\");\nfunction assertRequest(args) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to\n  } = args;\n  const account = account_ ? (0, parseAccount_js_1.parseAccount)(account_) : undefined;\n  if (account && !(0, isAddress_js_1.isAddress)(account.address)) throw new address_js_1.InvalidAddressError({\n    address: account.address\n  });\n  if (to && !(0, isAddress_js_1.isAddress)(to)) throw new address_js_1.InvalidAddressError({\n    address: to\n  });\n  if (typeof gasPrice !== 'undefined' && (typeof maxFeePerGas !== 'undefined' || typeof maxPriorityFeePerGas !== 'undefined')) throw new transaction_js_1.FeeConflictError();\n  if (maxFeePerGas && maxFeePerGas > number_js_1.maxUint256) throw new node_js_1.FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new node_js_1.TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}","map":{"version":3,"names":["exports","assertRequest","parseAccount_js_1","require","number_js_1","address_js_1","node_js_1","transaction_js_1","isAddress_js_1","args","account","account_","gasPrice","maxFeePerGas","maxPriorityFeePerGas","to","parseAccount","undefined","isAddress","address","InvalidAddressError","FeeConflictError","maxUint256","FeeCapTooHighError","TipAboveFeeCapError"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/transaction/assertRequest.ts"],"sourcesContent":["import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = ExactPartial<\n  SendTransactionParameters<Chain>\n>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n"],"mappings":";;;;;AAqCAA,OAAA,CAAAC,aAAA,GAAAA,aAAA;AArCA,MAAAC,iBAAA,GAAAC,OAAA;AAKA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AAIA,MAAAG,SAAA,GAAAH,OAAA;AAMA,MAAAI,gBAAA,GAAAJ,OAAA;AAOA,MAAAK,cAAA,GAAAL,OAAA;AAcA,SAAgBF,aAAaA,CAACQ,IAA6B;EACzD,MAAM;IACJC,OAAO,EAAEC,QAAQ;IACjBC,QAAQ;IACRC,YAAY;IACZC,oBAAoB;IACpBC;EAAE,CACH,GAAGN,IAAI;EACR,MAAMC,OAAO,GAAGC,QAAQ,GAAG,IAAAT,iBAAA,CAAAc,YAAY,EAACL,QAAQ,CAAC,GAAGM,SAAS;EAC7D,IAAIP,OAAO,IAAI,CAAC,IAAAF,cAAA,CAAAU,SAAS,EAACR,OAAO,CAACS,OAAO,CAAC,EACxC,MAAM,IAAId,YAAA,CAAAe,mBAAmB,CAAC;IAAED,OAAO,EAAET,OAAO,CAACS;EAAO,CAAE,CAAC;EAC7D,IAAIJ,EAAE,IAAI,CAAC,IAAAP,cAAA,CAAAU,SAAS,EAACH,EAAE,CAAC,EAAE,MAAM,IAAIV,YAAA,CAAAe,mBAAmB,CAAC;IAAED,OAAO,EAAEJ;EAAE,CAAE,CAAC;EACxE,IACE,OAAOH,QAAQ,KAAK,WAAW,KAC9B,OAAOC,YAAY,KAAK,WAAW,IAClC,OAAOC,oBAAoB,KAAK,WAAW,CAAC,EAE9C,MAAM,IAAIP,gBAAA,CAAAc,gBAAgB,EAAE;EAE9B,IAAIR,YAAY,IAAIA,YAAY,GAAGT,WAAA,CAAAkB,UAAU,EAC3C,MAAM,IAAIhB,SAAA,CAAAiB,kBAAkB,CAAC;IAAEV;EAAY,CAAE,CAAC;EAChD,IACEC,oBAAoB,IACpBD,YAAY,IACZC,oBAAoB,GAAGD,YAAY,EAEnC,MAAM,IAAIP,SAAA,CAAAkB,mBAAmB,CAAC;IAAEX,YAAY;IAAEC;EAAoB,CAAE,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}