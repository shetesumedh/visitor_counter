{"ast":null,"code":"import { EventEmitter } from 'eventemitter3';\nexport class Emitter {\n  constructor(uid) {\n    Object.defineProperty(this, \"uid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: uid\n    });\n    Object.defineProperty(this, \"_emitter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventEmitter()\n    });\n  }\n  on(eventName, fn) {\n    this._emitter.on(eventName, fn);\n  }\n  once(eventName, fn) {\n    this._emitter.once(eventName, fn);\n  }\n  off(eventName, fn) {\n    this._emitter.off(eventName, fn);\n  }\n  emit(eventName, ...params) {\n    const data = params[0];\n    this._emitter.emit(eventName, {\n      uid: this.uid,\n      ...data\n    });\n  }\n  listenerCount(eventName) {\n    return this._emitter.listenerCount(eventName);\n  }\n}\nexport function createEmitter(uid) {\n  return new Emitter(uid);\n}","map":{"version":3,"names":["EventEmitter","Emitter","constructor","uid","Object","defineProperty","on","eventName","fn","_emitter","once","off","emit","params","data","listenerCount","createEmitter"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/createEmitter.ts"],"sourcesContent":["import { EventEmitter } from 'eventemitter3'\n\ntype EventMap = Record<string, object | never>\ntype EventKey<eventMap extends EventMap> = string & keyof eventMap\ntype EventFn<parameters extends unknown[] = any[]> = (\n  ...parameters: parameters\n) => void\nexport type EventData<\n  eventMap extends EventMap,\n  eventName extends keyof eventMap,\n> = (eventMap[eventName] extends [never] ? unknown : eventMap[eventName]) & {\n  uid: string\n}\n\nexport class Emitter<eventMap extends EventMap> {\n  _emitter = new EventEmitter()\n\n  constructor(public uid: string) {}\n\n  on<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.on(eventName, fn as EventFn)\n  }\n\n  once<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.once(eventName, fn as EventFn)\n  }\n\n  off<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.off(eventName, fn as EventFn)\n  }\n\n  emit<key extends EventKey<eventMap>>(\n    eventName: key,\n    ...params: eventMap[key] extends [never] ? [] : [data: eventMap[key]]\n  ) {\n    const data = params[0]\n    this._emitter.emit(eventName, { uid: this.uid, ...data })\n  }\n\n  listenerCount<key extends EventKey<eventMap>>(eventName: key) {\n    return this._emitter.listenerCount(eventName)\n  }\n}\n\nexport function createEmitter<eventMap extends EventMap>(uid: string) {\n  return new Emitter<eventMap>(uid)\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAc5C,OAAM,MAAOC,OAAO;EAGlBC,YAAmBC,GAAW;IAAlBC,MAAA,CAAAC,cAAA;;;;aAAOF;;IAFnBC,MAAA,CAAAC,cAAA;;;;aAAW,IAAIL,YAAY;;EAEM;EAEjCM,EAAEA,CACAC,SAAc,EACdC,EAIC;IAED,IAAI,CAACC,QAAQ,CAACH,EAAE,CAACC,SAAS,EAAEC,EAAa,CAAC;EAC5C;EAEAE,IAAIA,CACFH,SAAc,EACdC,EAIC;IAED,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,SAAS,EAAEC,EAAa,CAAC;EAC9C;EAEAG,GAAGA,CACDJ,SAAc,EACdC,EAIC;IAED,IAAI,CAACC,QAAQ,CAACE,GAAG,CAACJ,SAAS,EAAEC,EAAa,CAAC;EAC7C;EAEAI,IAAIA,CACFL,SAAc,EACd,GAAGM,MAAkE;IAErE,MAAMC,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;IACtB,IAAI,CAACJ,QAAQ,CAACG,IAAI,CAACL,SAAS,EAAE;MAAEJ,GAAG,EAAE,IAAI,CAACA,GAAG;MAAE,GAAGW;IAAI,CAAE,CAAC;EAC3D;EAEAC,aAAaA,CAAiCR,SAAc;IAC1D,OAAO,IAAI,CAACE,QAAQ,CAACM,aAAa,CAACR,SAAS,CAAC;EAC/C;;AAGF,OAAM,SAAUS,aAAaA,CAA4Bb,GAAW;EAClE,OAAO,IAAIF,OAAO,CAAWE,GAAG,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}