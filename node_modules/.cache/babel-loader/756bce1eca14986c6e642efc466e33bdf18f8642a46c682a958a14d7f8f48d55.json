{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { FetchUtil } from '../utils/FetchUtil.js';\nimport { OptionsController } from './OptionsController.js';\n// -- Constants ----------------------------------------- //\nconst DEFAULT_STATE = Object.freeze({\n  enabled: true,\n  events: []\n});\nconst api = new FetchUtil({\n  baseUrl: CoreHelperUtil.getAnalyticsUrl(),\n  clientId: null\n});\n// Rate limiting constants\nconst MAX_ERRORS_PER_MINUTE = 5;\nconst ONE_MINUTE_MS = 60 * 1000;\n// -- State --------------------------------------------- //\nconst state = proxy({\n  ...DEFAULT_STATE\n});\n// -- Controller ---------------------------------------- //\nexport const TelemetryController = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  async sendError(error, category) {\n    if (!state.enabled) {\n      return;\n    }\n    // Check rate limiting using events array\n    const now = Date.now();\n    const recentErrors = state.events.filter(event => {\n      const eventTime = new Date(event.properties.timestamp || '').getTime();\n      return now - eventTime < ONE_MINUTE_MS;\n    });\n    if (recentErrors.length >= MAX_ERRORS_PER_MINUTE) {\n      // Exit silently\n      return;\n    }\n    const errorEvent = {\n      type: 'error',\n      event: category,\n      properties: {\n        errorType: error.name,\n        errorMessage: error.message,\n        stackTrace: error.stack,\n        timestamp: new Date().toISOString()\n      }\n    };\n    state.events.push(errorEvent);\n    try {\n      if (typeof window === 'undefined') {\n        return;\n      }\n      const {\n        projectId,\n        sdkType,\n        sdkVersion\n      } = OptionsController.state;\n      await api.post({\n        path: '/e',\n        params: {\n          projectId,\n          st: sdkType,\n          sv: sdkVersion || 'html-wagmi-4.2.2'\n        },\n        body: {\n          eventId: CoreHelperUtil.getUUID(),\n          url: window.location.href,\n          domain: window.location.hostname,\n          timestamp: new Date().toISOString(),\n          props: {\n            type: 'error',\n            event: category,\n            errorType: error.name,\n            errorMessage: error.message,\n            stackTrace: error.stack\n          }\n        }\n      });\n    } catch {\n      // Do nothing\n    }\n  },\n  enable() {\n    state.enabled = true;\n  },\n  disable() {\n    state.enabled = false;\n  },\n  clearEvents() {\n    state.events = [];\n  }\n};","map":{"version":3,"names":["proxy","subscribeKey","subKey","CoreHelperUtil","FetchUtil","OptionsController","DEFAULT_STATE","Object","freeze","enabled","events","api","baseUrl","getAnalyticsUrl","clientId","MAX_ERRORS_PER_MINUTE","ONE_MINUTE_MS","state","TelemetryController","key","callback","sendError","error","category","now","Date","recentErrors","filter","event","eventTime","properties","timestamp","getTime","length","errorEvent","type","errorType","name","errorMessage","message","stackTrace","stack","toISOString","push","window","projectId","sdkType","sdkVersion","post","path","params","st","sv","body","eventId","getUUID","url","location","href","domain","hostname","props","enable","disable","clearEvents"],"sources":["../../../../src/controllers/TelemetryController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}