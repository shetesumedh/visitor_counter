{"ast":null,"code":"import { store } from '../../store/store.js';\nimport { deriveSharedSecret, exportKeyToHexString, generateKeyPair, importKeyFromHexString } from '../../util/cipher.js';\nconst OWN_PRIVATE_KEY = {\n  storageKey: 'ownPrivateKey',\n  keyType: 'private'\n};\nconst OWN_PUBLIC_KEY = {\n  storageKey: 'ownPublicKey',\n  keyType: 'public'\n};\nconst PEER_PUBLIC_KEY = {\n  storageKey: 'peerPublicKey',\n  keyType: 'public'\n};\nexport class SCWKeyManager {\n  constructor() {\n    this.ownPrivateKey = null;\n    this.ownPublicKey = null;\n    this.peerPublicKey = null;\n    this.sharedSecret = null;\n  }\n  async getOwnPublicKey() {\n    await this.loadKeysIfNeeded();\n    return this.ownPublicKey;\n  }\n  // returns null if the shared secret is not yet derived\n  async getSharedSecret() {\n    await this.loadKeysIfNeeded();\n    return this.sharedSecret;\n  }\n  async setPeerPublicKey(key) {\n    this.sharedSecret = null;\n    this.peerPublicKey = key;\n    await this.storeKey(PEER_PUBLIC_KEY, key);\n    await this.loadKeysIfNeeded();\n  }\n  async clear() {\n    this.ownPrivateKey = null;\n    this.ownPublicKey = null;\n    this.peerPublicKey = null;\n    this.sharedSecret = null;\n    store.keys.clear();\n  }\n  async generateKeyPair() {\n    const newKeyPair = await generateKeyPair();\n    this.ownPrivateKey = newKeyPair.privateKey;\n    this.ownPublicKey = newKeyPair.publicKey;\n    await this.storeKey(OWN_PRIVATE_KEY, newKeyPair.privateKey);\n    await this.storeKey(OWN_PUBLIC_KEY, newKeyPair.publicKey);\n  }\n  async loadKeysIfNeeded() {\n    if (this.ownPrivateKey === null) {\n      this.ownPrivateKey = await this.loadKey(OWN_PRIVATE_KEY);\n    }\n    if (this.ownPublicKey === null) {\n      this.ownPublicKey = await this.loadKey(OWN_PUBLIC_KEY);\n    }\n    if (this.ownPrivateKey === null || this.ownPublicKey === null) {\n      await this.generateKeyPair();\n    }\n    if (this.peerPublicKey === null) {\n      this.peerPublicKey = await this.loadKey(PEER_PUBLIC_KEY);\n    }\n    if (this.sharedSecret === null) {\n      if (this.ownPrivateKey === null || this.peerPublicKey === null) return;\n      this.sharedSecret = await deriveSharedSecret(this.ownPrivateKey, this.peerPublicKey);\n    }\n  }\n  // storage methods\n  async loadKey(item) {\n    const key = store.keys.get(item.storageKey);\n    if (!key) return null;\n    return importKeyFromHexString(item.keyType, key);\n  }\n  async storeKey(item, key) {\n    const hexString = await exportKeyToHexString(item.keyType, key);\n    store.keys.set(item.storageKey, hexString);\n  }\n}","map":{"version":3,"names":["store","deriveSharedSecret","exportKeyToHexString","generateKeyPair","importKeyFromHexString","OWN_PRIVATE_KEY","storageKey","keyType","OWN_PUBLIC_KEY","PEER_PUBLIC_KEY","SCWKeyManager","constructor","ownPrivateKey","ownPublicKey","peerPublicKey","sharedSecret","getOwnPublicKey","loadKeysIfNeeded","getSharedSecret","setPeerPublicKey","key","storeKey","clear","keys","newKeyPair","privateKey","publicKey","loadKey","item","get","hexString","set"],"sources":["../../../src/sign/scw/SCWKeyManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}