{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkWebSocket = exports.ConnectionState = void 0;\nvar ConnectionState;\n(function (ConnectionState) {\n  ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n  ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n  ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState || (exports.ConnectionState = ConnectionState = {}));\nclass WalletLinkWebSocket {\n  setConnectionStateListener(listener) {\n    this.connectionStateListener = listener;\n  }\n  setIncomingDataListener(listener) {\n    this.incomingDataListener = listener;\n  }\n  /**\n   * Constructor\n   * @param url WebSocket server URL\n   * @param [WebSocketClass] Custom WebSocket implementation\n   */\n  constructor(url, WebSocketClass = WebSocket) {\n    this.WebSocketClass = WebSocketClass;\n    this.webSocket = null;\n    this.pendingData = [];\n    this.url = url.replace(/^http/, 'ws');\n  }\n  /**\n   * Make a websocket connection\n   * @returns a Promise that resolves when connected\n   */\n  async connect() {\n    if (this.webSocket) {\n      throw new Error('webSocket object is not null');\n    }\n    return new Promise((resolve, reject) => {\n      var _a;\n      let webSocket;\n      try {\n        this.webSocket = webSocket = new this.WebSocketClass(this.url);\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTING);\n      webSocket.onclose = evt => {\n        var _a;\n        this.clearWebSocket();\n        reject(new Error(`websocket error ${evt.code}: ${evt.reason}`));\n        (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n      };\n      webSocket.onopen = _ => {\n        var _a;\n        resolve();\n        (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTED);\n        if (this.pendingData.length > 0) {\n          const pending = [...this.pendingData];\n          pending.forEach(data => this.sendData(data));\n          this.pendingData = [];\n        }\n      };\n      webSocket.onmessage = evt => {\n        var _a, _b;\n        if (evt.data === 'h') {\n          (_a = this.incomingDataListener) === null || _a === void 0 ? void 0 : _a.call(this, {\n            type: 'Heartbeat'\n          });\n        } else {\n          try {\n            const message = JSON.parse(evt.data);\n            (_b = this.incomingDataListener) === null || _b === void 0 ? void 0 : _b.call(this, message);\n          } catch (_c) {\n            /* empty */\n          }\n        }\n      };\n    });\n  }\n  /**\n   * Disconnect from server\n   */\n  disconnect() {\n    var _a;\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      return;\n    }\n    this.clearWebSocket();\n    (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n    this.connectionStateListener = undefined;\n    this.incomingDataListener = undefined;\n    try {\n      webSocket.close();\n    } catch (_b) {\n      // noop\n    }\n  }\n  /**\n   * Send data to server\n   * @param data text to send\n   */\n  sendData(data) {\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      this.pendingData.push(data);\n      this.connect();\n      return;\n    }\n    webSocket.send(data);\n  }\n  clearWebSocket() {\n    const {\n      webSocket\n    } = this;\n    if (!webSocket) {\n      return;\n    }\n    this.webSocket = null;\n    webSocket.onclose = null;\n    webSocket.onerror = null;\n    webSocket.onmessage = null;\n    webSocket.onopen = null;\n  }\n}\nexports.WalletLinkWebSocket = WalletLinkWebSocket;","map":{"version":3,"names":["Object","defineProperty","exports","value","WalletLinkWebSocket","ConnectionState","setConnectionStateListener","listener","connectionStateListener","setIncomingDataListener","incomingDataListener","constructor","url","WebSocketClass","WebSocket","webSocket","pendingData","replace","connect","Error","Promise","resolve","reject","_a","err","call","CONNECTING","onclose","evt","clearWebSocket","code","reason","DISCONNECTED","onopen","_","CONNECTED","length","pending","forEach","data","sendData","onmessage","_b","type","message","JSON","parse","_c","disconnect","undefined","close","push","send","onerror"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/cbw-sdk/dist/relay/walletlink/connection/WalletLinkWebSocket.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkWebSocket = exports.ConnectionState = void 0;\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState || (exports.ConnectionState = ConnectionState = {}));\nclass WalletLinkWebSocket {\n    setConnectionStateListener(listener) {\n        this.connectionStateListener = listener;\n    }\n    setIncomingDataListener(listener) {\n        this.incomingDataListener = listener;\n    }\n    /**\n     * Constructor\n     * @param url WebSocket server URL\n     * @param [WebSocketClass] Custom WebSocket implementation\n     */\n    constructor(url, WebSocketClass = WebSocket) {\n        this.WebSocketClass = WebSocketClass;\n        this.webSocket = null;\n        this.pendingData = [];\n        this.url = url.replace(/^http/, 'ws');\n    }\n    /**\n     * Make a websocket connection\n     * @returns a Promise that resolves when connected\n     */\n    async connect() {\n        if (this.webSocket) {\n            throw new Error('webSocket object is not null');\n        }\n        return new Promise((resolve, reject) => {\n            var _a;\n            let webSocket;\n            try {\n                this.webSocket = webSocket = new this.WebSocketClass(this.url);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTING);\n            webSocket.onclose = (evt) => {\n                var _a;\n                this.clearWebSocket();\n                reject(new Error(`websocket error ${evt.code}: ${evt.reason}`));\n                (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n            };\n            webSocket.onopen = (_) => {\n                var _a;\n                resolve();\n                (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.CONNECTED);\n                if (this.pendingData.length > 0) {\n                    const pending = [...this.pendingData];\n                    pending.forEach((data) => this.sendData(data));\n                    this.pendingData = [];\n                }\n            };\n            webSocket.onmessage = (evt) => {\n                var _a, _b;\n                if (evt.data === 'h') {\n                    (_a = this.incomingDataListener) === null || _a === void 0 ? void 0 : _a.call(this, {\n                        type: 'Heartbeat',\n                    });\n                }\n                else {\n                    try {\n                        const message = JSON.parse(evt.data);\n                        (_b = this.incomingDataListener) === null || _b === void 0 ? void 0 : _b.call(this, message);\n                    }\n                    catch (_c) {\n                        /* empty */\n                    }\n                }\n            };\n        });\n    }\n    /**\n     * Disconnect from server\n     */\n    disconnect() {\n        var _a;\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.clearWebSocket();\n        (_a = this.connectionStateListener) === null || _a === void 0 ? void 0 : _a.call(this, ConnectionState.DISCONNECTED);\n        this.connectionStateListener = undefined;\n        this.incomingDataListener = undefined;\n        try {\n            webSocket.close();\n        }\n        catch (_b) {\n            // noop\n        }\n    }\n    /**\n     * Send data to server\n     * @param data text to send\n     */\n    sendData(data) {\n        const { webSocket } = this;\n        if (!webSocket) {\n            this.pendingData.push(data);\n            this.connect();\n            return;\n        }\n        webSocket.send(data);\n    }\n    clearWebSocket() {\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.webSocket = null;\n        webSocket.onclose = null;\n        webSocket.onerror = null;\n        webSocket.onmessage = null;\n        webSocket.onopen = null;\n    }\n}\nexports.WalletLinkWebSocket = WalletLinkWebSocket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}