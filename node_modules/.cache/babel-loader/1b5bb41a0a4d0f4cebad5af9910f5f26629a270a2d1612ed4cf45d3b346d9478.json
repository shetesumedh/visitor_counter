{"ast":null,"code":"import { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { pad } from '../../../utils/index.js';\nexport function formatUserOperationRequest(request) {\n  const rpcRequest = {};\n  if (typeof request.callData !== 'undefined') rpcRequest.callData = request.callData;\n  if (typeof request.callGasLimit !== 'undefined') rpcRequest.callGasLimit = numberToHex(request.callGasLimit);\n  if (typeof request.factory !== 'undefined') rpcRequest.factory = request.factory;\n  if (typeof request.factoryData !== 'undefined') rpcRequest.factoryData = request.factoryData;\n  if (typeof request.initCode !== 'undefined') rpcRequest.initCode = request.initCode;\n  if (typeof request.maxFeePerGas !== 'undefined') rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n  if (typeof request.maxPriorityFeePerGas !== 'undefined') rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n  if (typeof request.nonce !== 'undefined') rpcRequest.nonce = numberToHex(request.nonce);\n  if (typeof request.paymaster !== 'undefined') rpcRequest.paymaster = request.paymaster;\n  if (typeof request.paymasterAndData !== 'undefined') rpcRequest.paymasterAndData = request.paymasterAndData || '0x';\n  if (typeof request.paymasterData !== 'undefined') rpcRequest.paymasterData = request.paymasterData;\n  if (typeof request.paymasterPostOpGasLimit !== 'undefined') rpcRequest.paymasterPostOpGasLimit = numberToHex(request.paymasterPostOpGasLimit);\n  if (typeof request.paymasterVerificationGasLimit !== 'undefined') rpcRequest.paymasterVerificationGasLimit = numberToHex(request.paymasterVerificationGasLimit);\n  if (typeof request.preVerificationGas !== 'undefined') rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas);\n  if (typeof request.sender !== 'undefined') rpcRequest.sender = request.sender;\n  if (typeof request.signature !== 'undefined') rpcRequest.signature = request.signature;\n  if (typeof request.verificationGasLimit !== 'undefined') rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit);\n  if (typeof request.authorization !== 'undefined') rpcRequest.eip7702Auth = formatAuthorization(request.authorization);\n  return rpcRequest;\n}\nfunction formatAuthorization(authorization) {\n  return {\n    address: authorization.address,\n    chainId: numberToHex(authorization.chainId),\n    nonce: numberToHex(authorization.nonce),\n    r: authorization.r ? numberToHex(BigInt(authorization.r), {\n      size: 32\n    }) : pad('0x', {\n      size: 32\n    }),\n    s: authorization.s ? numberToHex(BigInt(authorization.s), {\n      size: 32\n    }) : pad('0x', {\n      size: 32\n    }),\n    yParity: authorization.yParity ? numberToHex(authorization.yParity, {\n      size: 1\n    }) : pad('0x', {\n      size: 32\n    })\n  };\n}","map":{"version":3,"names":["numberToHex","pad","formatUserOperationRequest","request","rpcRequest","callData","callGasLimit","factory","factoryData","initCode","maxFeePerGas","maxPriorityFeePerGas","nonce","paymaster","paymasterAndData","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","preVerificationGas","sender","signature","verificationGasLimit","authorization","eip7702Auth","formatAuthorization","address","chainId","r","BigInt","size","s","yParity"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/account-abstraction/utils/formatters/userOperationRequest.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { SignedAuthorization } from '../../../types/authorization.js'\nimport type { ExactPartial } from '../../../types/utils.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport { pad } from '../../../utils/index.js'\nimport type { RpcUserOperation } from '../../types/rpc.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type FormatUserOperationRequestErrorType = ErrorType\n\nexport function formatUserOperationRequest(\n  request: ExactPartial<UserOperation>,\n) {\n  const rpcRequest = {} as RpcUserOperation\n\n  if (typeof request.callData !== 'undefined')\n    rpcRequest.callData = request.callData\n  if (typeof request.callGasLimit !== 'undefined')\n    rpcRequest.callGasLimit = numberToHex(request.callGasLimit)\n  if (typeof request.factory !== 'undefined')\n    rpcRequest.factory = request.factory\n  if (typeof request.factoryData !== 'undefined')\n    rpcRequest.factoryData = request.factoryData\n  if (typeof request.initCode !== 'undefined')\n    rpcRequest.initCode = request.initCode\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.paymaster !== 'undefined')\n    rpcRequest.paymaster = request.paymaster\n  if (typeof request.paymasterAndData !== 'undefined')\n    rpcRequest.paymasterAndData = request.paymasterAndData || '0x'\n  if (typeof request.paymasterData !== 'undefined')\n    rpcRequest.paymasterData = request.paymasterData\n  if (typeof request.paymasterPostOpGasLimit !== 'undefined')\n    rpcRequest.paymasterPostOpGasLimit = numberToHex(\n      request.paymasterPostOpGasLimit,\n    )\n  if (typeof request.paymasterVerificationGasLimit !== 'undefined')\n    rpcRequest.paymasterVerificationGasLimit = numberToHex(\n      request.paymasterVerificationGasLimit,\n    )\n  if (typeof request.preVerificationGas !== 'undefined')\n    rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas)\n  if (typeof request.sender !== 'undefined') rpcRequest.sender = request.sender\n  if (typeof request.signature !== 'undefined')\n    rpcRequest.signature = request.signature\n  if (typeof request.verificationGasLimit !== 'undefined')\n    rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit)\n  if (typeof request.authorization !== 'undefined')\n    rpcRequest.eip7702Auth = formatAuthorization(request.authorization)\n\n  return rpcRequest\n}\n\nfunction formatAuthorization(authorization: SignedAuthorization) {\n  return {\n    address: authorization.address,\n    chainId: numberToHex(authorization.chainId),\n    nonce: numberToHex(authorization.nonce),\n    r: authorization.r\n      ? numberToHex(BigInt(authorization.r), { size: 32 })\n      : pad('0x', { size: 32 }),\n    s: authorization.s\n      ? numberToHex(BigInt(authorization.s), { size: 32 })\n      : pad('0x', { size: 32 }),\n    yParity: authorization.yParity\n      ? numberToHex(authorization.yParity, { size: 1 })\n      : pad('0x', { size: 32 }),\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}