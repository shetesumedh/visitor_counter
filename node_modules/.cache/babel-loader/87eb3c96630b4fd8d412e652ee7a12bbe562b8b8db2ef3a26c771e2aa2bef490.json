{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverTransactionAddress = recoverTransactionAddress;\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst parseTransaction_js_1 = require(\"../transaction/parseTransaction.js\");\nconst serializeTransaction_js_1 = require(\"../transaction/serializeTransaction.js\");\nconst recoverAddress_js_1 = require(\"./recoverAddress.js\");\nasync function recoverTransactionAddress(parameters) {\n  const {\n    serializedTransaction,\n    signature: signature_\n  } = parameters;\n  const transaction = (0, parseTransaction_js_1.parseTransaction)(serializedTransaction);\n  const signature = signature_ ?? {\n    r: transaction.r,\n    s: transaction.s,\n    v: transaction.v,\n    yParity: transaction.yParity\n  };\n  const serialized = (0, serializeTransaction_js_1.serializeTransaction)({\n    ...transaction,\n    r: undefined,\n    s: undefined,\n    v: undefined,\n    yParity: undefined,\n    sidecars: undefined\n  });\n  return await (0, recoverAddress_js_1.recoverAddress)({\n    hash: (0, keccak256_js_1.keccak256)(serialized),\n    signature\n  });\n}","map":{"version":3,"names":["exports","recoverTransactionAddress","keccak256_js_1","require","parseTransaction_js_1","serializeTransaction_js_1","recoverAddress_js_1","parameters","serializedTransaction","signature","signature_","transaction","parseTransaction","r","s","v","yParity","serialized","serializeTransaction","undefined","sidecars","recoverAddress","hash","keccak256"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/utils/signature/recoverTransactionAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TransactionSerialized } from '../../types/transaction.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { parseTransaction } from '../transaction/parseTransaction.js'\nimport {\n  type SerializeTransactionErrorType,\n  serializeTransaction,\n} from '../transaction/serializeTransaction.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\nimport type { SerializeSignatureErrorType } from './serializeSignature.js'\n\nexport type RecoverTransactionAddressParameters = {\n  serializedTransaction: TransactionSerialized\n  signature?: Hex | ByteArray | Signature\n}\n\nexport type RecoverTransactionAddressReturnType = Address\n\nexport type RecoverTransactionAddressErrorType =\n  | SerializeTransactionErrorType\n  | RecoverAddressErrorType\n  | Keccak256ErrorType\n  | SerializeSignatureErrorType\n  | ErrorType\n\nexport async function recoverTransactionAddress(\n  parameters: RecoverTransactionAddressParameters,\n): Promise<RecoverTransactionAddressReturnType> {\n  const { serializedTransaction, signature: signature_ } = parameters\n\n  const transaction = parseTransaction(serializedTransaction)\n\n  const signature = signature_ ?? {\n    r: transaction.r!,\n    s: transaction.s!,\n    v: transaction.v!,\n    yParity: transaction.yParity!,\n  }\n\n  const serialized = serializeTransaction({\n    ...transaction,\n    r: undefined,\n    s: undefined,\n    v: undefined,\n    yParity: undefined,\n    sidecars: undefined,\n  })\n\n  return await recoverAddress({\n    hash: keccak256(serialized),\n    signature,\n  })\n}\n"],"mappings":";;;;;AA8BAA,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AA1BA,MAAAC,cAAA,GAAAC,OAAA;AACA,MAAAC,qBAAA,GAAAD,OAAA;AACA,MAAAE,yBAAA,GAAAF,OAAA;AAIA,MAAAG,mBAAA,GAAAH,OAAA;AAoBO,eAAeF,yBAAyBA,CAC7CM,UAA+C;EAE/C,MAAM;IAAEC,qBAAqB;IAAEC,SAAS,EAAEC;EAAU,CAAE,GAAGH,UAAU;EAEnE,MAAMI,WAAW,GAAG,IAAAP,qBAAA,CAAAQ,gBAAgB,EAACJ,qBAAqB,CAAC;EAE3D,MAAMC,SAAS,GAAGC,UAAU,IAAI;IAC9BG,CAAC,EAAEF,WAAW,CAACE,CAAE;IACjBC,CAAC,EAAEH,WAAW,CAACG,CAAE;IACjBC,CAAC,EAAEJ,WAAW,CAACI,CAAE;IACjBC,OAAO,EAAEL,WAAW,CAACK;GACtB;EAED,MAAMC,UAAU,GAAG,IAAAZ,yBAAA,CAAAa,oBAAoB,EAAC;IACtC,GAAGP,WAAW;IACdE,CAAC,EAAEM,SAAS;IACZL,CAAC,EAAEK,SAAS;IACZJ,CAAC,EAAEI,SAAS;IACZH,OAAO,EAAEG,SAAS;IAClBC,QAAQ,EAAED;GACX,CAAC;EAEF,OAAO,MAAM,IAAAb,mBAAA,CAAAe,cAAc,EAAC;IAC1BC,IAAI,EAAE,IAAApB,cAAA,CAAAqB,SAAS,EAACN,UAAU,CAAC;IAC3BR;GACD,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}