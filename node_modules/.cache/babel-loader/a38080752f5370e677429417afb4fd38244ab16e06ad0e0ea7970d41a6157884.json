{"ast":null,"code":"'use client';\n\nimport { useMutation } from '@tanstack/react-query';\nimport { deployContractMutationOptions } from '@wagmi/core/query';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useDeployContract */\nexport function useDeployContract(parameters = {}) {\n  const {\n    mutation\n  } = parameters;\n  const config = useConfig(parameters);\n  const mutationOptions = deployContractMutationOptions(config);\n  const {\n    mutate,\n    mutateAsync,\n    ...result\n  } = useMutation({\n    ...mutation,\n    ...mutationOptions\n  });\n  return {\n    ...result,\n    deployContract: mutate,\n    deployContractAsync: mutateAsync\n  };\n}","map":{"version":3,"names":["useMutation","deployContractMutationOptions","useConfig","useDeployContract","parameters","mutation","config","mutationOptions","mutate","mutateAsync","result","deployContract","deployContractAsync"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/wagmi/src/hooks/useDeployContract.ts"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type {\n  Config,\n  DeployContractErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type DeployContractData,\n  type DeployContractMutate,\n  type DeployContractMutateAsync,\n  type DeployContractVariables,\n  deployContractMutationOptions,\n} from '@wagmi/core/query'\nimport type { Abi } from 'viem'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseDeployContractParameters<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  ConfigParameter<config> & {\n    mutation?:\n      | UseMutationParameters<\n          DeployContractData,\n          DeployContractErrorType,\n          DeployContractVariables<Abi, config, config['chains'][number]['id']>,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseDeployContractReturnType<\n  config extends Config = Config,\n  context = unknown,\n> = UseMutationReturnType<\n  DeployContractData,\n  DeployContractErrorType,\n  DeployContractVariables<Abi, config, config['chains'][number]['id']>,\n  context\n> & {\n  deployContract: DeployContractMutate<config, context>\n  deployContractAsync: DeployContractMutateAsync<config, context>\n}\n\n/** https://wagmi.sh/react/api/hooks/useDeployContract */\nexport function useDeployContract<\n  config extends Config = ResolvedRegister['config'],\n  context = unknown,\n>(\n  parameters: UseDeployContractParameters<config, context> = {},\n): UseDeployContractReturnType<config, context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = deployContractMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  type Return = UseDeployContractReturnType<config, context>\n  return {\n    ...result,\n    deployContract: mutate as Return['deployContract'],\n    deployContractAsync: mutateAsync as Return['deployContractAsync'],\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,uBAAuB;AAOnD,SAKEC,6BAA6B,QACxB,mBAAmB;AAQ1B,SAASC,SAAS,QAAQ,gBAAgB;AA+B1C;AACA,OAAM,SAAUC,iBAAiBA,CAI/BC,UAAA,GAA2D,EAAE;EAE7D,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAE/B,MAAME,MAAM,GAAGJ,SAAS,CAACE,UAAU,CAAC;EAEpC,MAAMG,eAAe,GAAGN,6BAA6B,CAACK,MAAM,CAAC;EAC7D,MAAM;IAAEE,MAAM;IAAEC,WAAW;IAAE,GAAGC;EAAM,CAAE,GAAGV,WAAW,CAAC;IACrD,GAAGK,QAAQ;IACX,GAAGE;GACJ,CAAC;EAGF,OAAO;IACL,GAAGG,MAAM;IACTC,cAAc,EAAEH,MAAkC;IAClDI,mBAAmB,EAAEH;GACtB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}