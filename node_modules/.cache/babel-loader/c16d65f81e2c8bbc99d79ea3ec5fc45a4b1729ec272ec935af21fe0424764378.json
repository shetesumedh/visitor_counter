{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCallError = getCallError;\nconst contract_js_1 = require(\"../../errors/contract.js\");\nconst node_js_1 = require(\"../../errors/node.js\");\nconst getNodeError_js_1 = require(\"./getNodeError.js\");\nfunction getCallError(err, {\n  docsPath,\n  ...args\n}) {\n  const cause = (() => {\n    const cause = (0, getNodeError_js_1.getNodeError)(err, args);\n    if (cause instanceof node_js_1.UnknownNodeError) return err;\n    return cause;\n  })();\n  return new contract_js_1.CallExecutionError(cause, {\n    docsPath,\n    ...args\n  });\n}","map":{"version":3,"names":["exports","getCallError","contract_js_1","require","node_js_1","getNodeError_js_1","err","docsPath","args","cause","getNodeError","UnknownNodeError","CallExecutionError"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/utils/errors/getCallError.ts"],"sourcesContent":["import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n"],"mappings":";;;;;AAuBAA,OAAA,CAAAC,YAAA,GAAAA,YAAA;AArBA,MAAAC,aAAA,GAAAC,OAAA;AAIA,MAAAC,SAAA,GAAAD,OAAA;AAIA,MAAAE,iBAAA,GAAAF,OAAA;AAaA,SAAgBF,YAAYA,CAC1BK,GAAQ,EACR;EACEC,QAAQ;EACR,GAAGC;AAAI,CAIR;EAED,MAAMC,KAAK,GAAG,CAAC,MAAK;IAClB,MAAMA,KAAK,GAAG,IAAAJ,iBAAA,CAAAK,YAAY,EACxBJ,GAAsB,EACtBE,IAA8B,CAC/B;IACD,IAAIC,KAAK,YAAYL,SAAA,CAAAO,gBAAgB,EAAE,OAAOL,GAAsB;IACpE,OAAOG,KAAK;EACd,CAAC,EAAC,CAAE;EACJ,OAAO,IAAIP,aAAA,CAAAU,kBAAkB,CAACH,KAAK,EAAE;IACnCF,QAAQ;IACR,GAAGC;GACJ,CAAgC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}