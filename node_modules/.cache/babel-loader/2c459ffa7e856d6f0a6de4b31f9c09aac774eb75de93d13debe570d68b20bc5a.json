{"ast":null,"code":"import UniversalProvider from '@walletconnect/universal-provider';\nimport { ConstantsUtil } from '@reown/appkit-common';\nimport { ChainController, OptionsController, SIWXUtil } from '@reown/appkit-controllers';\nimport { PresetsUtil } from '@reown/appkit-utils';\nimport { WcHelpersUtil } from '../utils/index.js';\nexport class WalletConnectConnector {\n  constructor({\n    provider,\n    namespace\n  }) {\n    this.id = ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT;\n    this.name = PresetsUtil.ConnectorNamesMap[ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT];\n    this.type = 'WALLET_CONNECT';\n    this.imageId = PresetsUtil.ConnectorImageIds[ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT];\n    this.getCaipNetworks = ChainController.getCaipNetworks.bind(ChainController);\n    this.caipNetworks = this.getCaipNetworks();\n    this.provider = provider;\n    this.chain = namespace;\n  }\n  get chains() {\n    return this.getCaipNetworks();\n  }\n  async connectWalletConnect() {\n    const isAuthenticated = await this.authenticate();\n    if (!isAuthenticated) {\n      const caipNetworks = this.getCaipNetworks();\n      const universalProviderConfigOverride = OptionsController.state.universalProviderConfigOverride;\n      const namespaces = WcHelpersUtil.createNamespaces(caipNetworks, universalProviderConfigOverride);\n      await this.provider.connect({\n        optionalNamespaces: namespaces\n      });\n    }\n    return {\n      clientId: await this.provider.client.core.crypto.getClientId(),\n      session: this.provider.session\n    };\n  }\n  async disconnect() {\n    await this.provider.disconnect();\n  }\n  async authenticate() {\n    const chains = this.chains.map(network => network.caipNetworkId);\n    return SIWXUtil.universalProviderAuthenticate({\n      universalProvider: this.provider,\n      chains,\n      methods: OPTIONAL_METHODS\n    });\n  }\n}\nconst OPTIONAL_METHODS = ['eth_accounts', 'eth_requestAccounts', 'eth_sendRawTransaction', 'eth_sign', 'eth_signTransaction', 'eth_signTypedData', 'eth_signTypedData_v3', 'eth_signTypedData_v4', 'eth_sendTransaction', 'personal_sign', 'wallet_switchEthereumChain', 'wallet_addEthereumChain', 'wallet_getPermissions', 'wallet_requestPermissions', 'wallet_registerOnboarding', 'wallet_watchAsset', 'wallet_scanQRCode',\n// EIP-5792\n'wallet_getCallsStatus', 'wallet_sendCalls', 'wallet_getCapabilities',\n// EIP-7715\n'wallet_grantPermissions', 'wallet_revokePermissions',\n//EIP-7811\n'wallet_getAssets'];","map":{"version":3,"names":["UniversalProvider","ConstantsUtil","ChainController","OptionsController","SIWXUtil","PresetsUtil","WcHelpersUtil","WalletConnectConnector","constructor","provider","namespace","id","CONNECTOR_ID","WALLET_CONNECT","name","ConnectorNamesMap","type","imageId","ConnectorImageIds","getCaipNetworks","bind","caipNetworks","chain","chains","connectWalletConnect","isAuthenticated","authenticate","universalProviderConfigOverride","state","namespaces","createNamespaces","connect","optionalNamespaces","clientId","client","core","crypto","getClientId","session","disconnect","map","network","caipNetworkId","universalProviderAuthenticate","universalProvider","methods","OPTIONAL_METHODS"],"sources":["../../../../src/connectors/WalletConnectConnector.ts"],"sourcesContent":[null],"mappings":"AACA,OAAOA,iBAAiB,MAAM,mCAAmC;AAEjE,SAAgDC,aAAa,QAAQ,sBAAsB;AAC3F,SAASC,eAAe,EAAEC,iBAAiB,EAAEC,QAAQ,QAAQ,2BAA2B;AACxF,SAASC,WAAW,QAAQ,qBAAqB;AAGjD,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,OAAM,MAAOC,sBAAsB;EAcjCC,YAAY;IAAEC,QAAQ;IAAEC;EAAS,CAA6C;IAX9D,KAAAC,EAAE,GAAGV,aAAa,CAACW,YAAY,CAACC,cAAc;IAC9C,KAAAC,IAAI,GAAGT,WAAW,CAACU,iBAAiB,CAClDd,aAAa,CAACW,YAAY,CAACC,cAAc,CAChC;IACK,KAAAG,IAAI,GAAG,gBAAgB;IACvB,KAAAC,OAAO,GAAGZ,WAAW,CAACa,iBAAiB,CAACjB,aAAa,CAACW,YAAY,CAACC,cAAc,CAAC;IAI1F,KAAAM,eAAe,GAAGjB,eAAe,CAACiB,eAAe,CAACC,IAAI,CAAClB,eAAe,CAAC;IAG7E,IAAI,CAACmB,YAAY,GAAG,IAAI,CAACF,eAAe,EAAE;IAC1C,IAAI,CAACV,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACa,KAAK,GAAGZ,SAAS;EACxB;EAEA,IAAIa,MAAMA,CAAA;IACR,OAAO,IAAI,CAACJ,eAAe,EAAE;EAC/B;EAEA,MAAMK,oBAAoBA,CAAA;IACxB,MAAMC,eAAe,GAAG,MAAM,IAAI,CAACC,YAAY,EAAE;IAEjD,IAAI,CAACD,eAAe,EAAE;MACpB,MAAMJ,YAAY,GAAG,IAAI,CAACF,eAAe,EAAE;MAC3C,MAAMQ,+BAA+B,GACnCxB,iBAAiB,CAACyB,KAAK,CAACD,+BAA+B;MACzD,MAAME,UAAU,GAAGvB,aAAa,CAACwB,gBAAgB,CAC/CT,YAAY,EACZM,+BAA+B,CAChC;MACD,MAAM,IAAI,CAAClB,QAAQ,CAACsB,OAAO,CAAC;QAAEC,kBAAkB,EAAEH;MAAU,CAAE,CAAC;IACjE;IAEA,OAAO;MACLI,QAAQ,EAAE,MAAM,IAAI,CAACxB,QAAQ,CAACyB,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAC9DC,OAAO,EAAE,IAAI,CAAC7B,QAAQ,CAAC6B;KACxB;EACH;EAEA,MAAMC,UAAUA,CAAA;IACd,MAAM,IAAI,CAAC9B,QAAQ,CAAC8B,UAAU,EAAE;EAClC;EAEA,MAAMb,YAAYA,CAAA;IAChB,MAAMH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACiB,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,aAAa,CAAC;IAEhE,OAAOtC,QAAQ,CAACuC,6BAA6B,CAAC;MAC5CC,iBAAiB,EAAE,IAAI,CAACnC,QAAQ;MAChCc,MAAM;MACNsB,OAAO,EAAEC;KACV,CAAC;EACJ;;AAgBF,MAAMA,gBAAgB,GAAG,CACvB,cAAc,EACd,qBAAqB,EACrB,wBAAwB,EACxB,UAAU,EACV,qBAAqB,EACrB,mBAAmB,EACnB,sBAAsB,EACtB,sBAAsB,EACtB,qBAAqB,EACrB,eAAe,EACf,4BAA4B,EAC5B,yBAAyB,EACzB,uBAAuB,EACvB,2BAA2B,EAC3B,2BAA2B,EAC3B,mBAAmB,EACnB,mBAAmB;AACnB;AACA,uBAAuB,EACvB,kBAAkB,EAClB,wBAAwB;AACxB;AACA,yBAAyB,EACzB,0BAA0B;AAC1B;AACA,kBAAkB,CACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}