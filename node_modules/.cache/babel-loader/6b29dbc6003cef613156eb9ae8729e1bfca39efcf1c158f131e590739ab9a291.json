{"ast":null,"code":"import { concat } from '../../../utils/data/concat.js';\nimport { pad } from '../../../utils/data/pad.js';\nimport { numberToHex } from '../../../utils/index.js';\nimport { getInitCode } from './getInitCode.js';\nexport function toPackedUserOperation(userOperation) {\n  const {\n    callGasLimit,\n    callData,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    paymaster,\n    paymasterData,\n    paymasterPostOpGasLimit,\n    paymasterVerificationGasLimit,\n    sender,\n    signature = '0x',\n    verificationGasLimit\n  } = userOperation;\n  const accountGasLimits = concat([pad(numberToHex(verificationGasLimit || 0n), {\n    size: 16\n  }), pad(numberToHex(callGasLimit || 0n), {\n    size: 16\n  })]);\n  const initCode = getInitCode(userOperation);\n  const gasFees = concat([pad(numberToHex(maxPriorityFeePerGas || 0n), {\n    size: 16\n  }), pad(numberToHex(maxFeePerGas || 0n), {\n    size: 16\n  })]);\n  const nonce = userOperation.nonce ?? 0n;\n  const paymasterAndData = paymaster ? concat([paymaster, pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n    size: 16\n  }), pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n    size: 16\n  }), paymasterData || '0x']) : '0x';\n  const preVerificationGas = userOperation.preVerificationGas ?? 0n;\n  return {\n    accountGasLimits,\n    callData,\n    initCode,\n    gasFees,\n    nonce,\n    paymasterAndData,\n    preVerificationGas,\n    sender,\n    signature\n  };\n}","map":{"version":3,"names":["concat","pad","numberToHex","getInitCode","toPackedUserOperation","userOperation","callGasLimit","callData","maxPriorityFeePerGas","maxFeePerGas","paymaster","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","sender","signature","verificationGasLimit","accountGasLimits","size","initCode","gasFees","nonce","paymasterAndData","preVerificationGas"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/account-abstraction/utils/userOperation/toPackedUserOperation.ts"],"sourcesContent":["import { concat } from '../../../utils/data/concat.js'\nimport { pad } from '../../../utils/data/pad.js'\nimport { numberToHex } from '../../../utils/index.js'\nimport type {\n  PackedUserOperation,\n  UserOperation,\n} from '../../types/userOperation.js'\nimport { getInitCode } from './getInitCode.js'\n\nexport function toPackedUserOperation(\n  userOperation: UserOperation,\n): PackedUserOperation {\n  const {\n    callGasLimit,\n    callData,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    paymaster,\n    paymasterData,\n    paymasterPostOpGasLimit,\n    paymasterVerificationGasLimit,\n    sender,\n    signature = '0x',\n    verificationGasLimit,\n  } = userOperation\n\n  const accountGasLimits = concat([\n    pad(numberToHex(verificationGasLimit || 0n), { size: 16 }),\n    pad(numberToHex(callGasLimit || 0n), { size: 16 }),\n  ])\n  const initCode = getInitCode(userOperation)\n  const gasFees = concat([\n    pad(numberToHex(maxPriorityFeePerGas || 0n), { size: 16 }),\n    pad(numberToHex(maxFeePerGas || 0n), { size: 16 }),\n  ])\n  const nonce = userOperation.nonce ?? 0n\n  const paymasterAndData = paymaster\n    ? concat([\n        paymaster,\n        pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n          size: 16,\n        }),\n        pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n          size: 16,\n        }),\n        paymasterData || '0x',\n      ])\n    : '0x'\n  const preVerificationGas = userOperation.preVerificationGas ?? 0n\n\n  return {\n    accountGasLimits,\n    callData,\n    initCode,\n    gasFees,\n    nonce,\n    paymasterAndData,\n    preVerificationGas,\n    sender,\n    signature,\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,+BAA+B;AACtD,SAASC,GAAG,QAAQ,4BAA4B;AAChD,SAASC,WAAW,QAAQ,yBAAyB;AAKrD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAM,SAAUC,qBAAqBA,CACnCC,aAA4B;EAE5B,MAAM;IACJC,YAAY;IACZC,QAAQ;IACRC,oBAAoB;IACpBC,YAAY;IACZC,SAAS;IACTC,aAAa;IACbC,uBAAuB;IACvBC,6BAA6B;IAC7BC,MAAM;IACNC,SAAS,GAAG,IAAI;IAChBC;EAAoB,CACrB,GAAGX,aAAa;EAEjB,MAAMY,gBAAgB,GAAGjB,MAAM,CAAC,CAC9BC,GAAG,CAACC,WAAW,CAACc,oBAAoB,IAAI,EAAE,CAAC,EAAE;IAAEE,IAAI,EAAE;EAAE,CAAE,CAAC,EAC1DjB,GAAG,CAACC,WAAW,CAACI,YAAY,IAAI,EAAE,CAAC,EAAE;IAAEY,IAAI,EAAE;EAAE,CAAE,CAAC,CACnD,CAAC;EACF,MAAMC,QAAQ,GAAGhB,WAAW,CAACE,aAAa,CAAC;EAC3C,MAAMe,OAAO,GAAGpB,MAAM,CAAC,CACrBC,GAAG,CAACC,WAAW,CAACM,oBAAoB,IAAI,EAAE,CAAC,EAAE;IAAEU,IAAI,EAAE;EAAE,CAAE,CAAC,EAC1DjB,GAAG,CAACC,WAAW,CAACO,YAAY,IAAI,EAAE,CAAC,EAAE;IAAES,IAAI,EAAE;EAAE,CAAE,CAAC,CACnD,CAAC;EACF,MAAMG,KAAK,GAAGhB,aAAa,CAACgB,KAAK,IAAI,EAAE;EACvC,MAAMC,gBAAgB,GAAGZ,SAAS,GAC9BV,MAAM,CAAC,CACLU,SAAS,EACTT,GAAG,CAACC,WAAW,CAACW,6BAA6B,IAAI,EAAE,CAAC,EAAE;IACpDK,IAAI,EAAE;GACP,CAAC,EACFjB,GAAG,CAACC,WAAW,CAACU,uBAAuB,IAAI,EAAE,CAAC,EAAE;IAC9CM,IAAI,EAAE;GACP,CAAC,EACFP,aAAa,IAAI,IAAI,CACtB,CAAC,GACF,IAAI;EACR,MAAMY,kBAAkB,GAAGlB,aAAa,CAACkB,kBAAkB,IAAI,EAAE;EAEjE,OAAO;IACLN,gBAAgB;IAChBV,QAAQ;IACRY,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,gBAAgB;IAChBC,kBAAkB;IAClBT,MAAM;IACNC;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}