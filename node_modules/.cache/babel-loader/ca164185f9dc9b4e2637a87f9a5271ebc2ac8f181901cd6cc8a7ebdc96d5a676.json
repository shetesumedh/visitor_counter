{"ast":null,"code":"/**\n * @internal\n * We don't expose this because as far as consumers know, you can't chainge (lol) `config.chains` at runtime.\n * Setting `config.chains` via `config._internal.chains.setState(...)` is an extremely advanced use case that's not worth documenting or supporting in the public API at this time.\n */\nexport function watchChains(config, parameters) {\n  const {\n    onChange\n  } = parameters;\n  return config._internal.chains.subscribe((chains, prevChains) => {\n    onChange(chains, prevChains);\n  });\n}","map":{"version":3,"names":["watchChains","config","parameters","onChange","_internal","chains","subscribe","prevChains"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@wagmi/core/src/actions/watchChains.ts"],"sourcesContent":["import type { Config } from '../createConfig.js'\nimport type { GetChainsReturnType } from './getChains.js'\n\nexport type WatchChainsParameters<config extends Config = Config> = {\n  onChange(\n    chains: GetChainsReturnType<config>,\n    prevChains: GetChainsReturnType<config>,\n  ): void\n}\n\nexport type WatchChainsReturnType = () => void\n\n/**\n * @internal\n * We don't expose this because as far as consumers know, you can't chainge (lol) `config.chains` at runtime.\n * Setting `config.chains` via `config._internal.chains.setState(...)` is an extremely advanced use case that's not worth documenting or supporting in the public API at this time.\n */\nexport function watchChains<config extends Config>(\n  config: config,\n  parameters: WatchChainsParameters<config>,\n): WatchChainsReturnType {\n  const { onChange } = parameters\n  return config._internal.chains.subscribe((chains, prevChains) => {\n    onChange(\n      chains as unknown as GetChainsReturnType<config>,\n      prevChains as unknown as GetChainsReturnType<config>,\n    )\n  })\n}\n"],"mappings":"AAYA;;;;;AAKA,OAAM,SAAUA,WAAWA,CACzBC,MAAc,EACdC,UAAyC;EAEzC,MAAM;IAAEC;EAAQ,CAAE,GAAGD,UAAU;EAC/B,OAAOD,MAAM,CAACG,SAAS,CAACC,MAAM,CAACC,SAAS,CAAC,CAACD,MAAM,EAAEE,UAAU,KAAI;IAC9DJ,QAAQ,CACNE,MAAgD,EAChDE,UAAoD,CACrD;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}