{"ast":null,"code":"/** https://wagmi.sh/core/api/actions/getAccount */\nexport function getAccount(config) {\n  const uid = config.state.current;\n  const connection = config.state.connections.get(uid);\n  const addresses = connection?.accounts;\n  const address = addresses?.[0];\n  const chain = config.chains.find(chain => chain.id === connection?.chainId);\n  const status = config.state.status;\n  switch (status) {\n    case 'connected':\n      return {\n        address: address,\n        addresses: addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case 'reconnecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: !!address,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case 'connecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case 'disconnected':\n      return {\n        address: undefined,\n        addresses: undefined,\n        chain: undefined,\n        chainId: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}","map":{"version":3,"names":["getAccount","config","uid","state","current","connection","connections","get","addresses","accounts","address","chain","chains","find","id","chainId","status","connector","isConnected","isConnecting","isDisconnected","isReconnecting","undefined"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/@wagmi/core/src/actions/getAccount.ts"],"sourcesContent":["import type { Address, Chain } from 'viem'\n\nimport type { Config, Connector } from '../createConfig.js'\n\nexport type GetAccountReturnType<\n  config extends Config = Config,\n  ///\n  chain = Config extends config ? Chain : config['chains'][number],\n> =\n  | {\n      address: Address\n      addresses: readonly [Address, ...Address[]]\n      chain: chain | undefined\n      chainId: number\n      connector: Connector\n      isConnected: true\n      isConnecting: false\n      isDisconnected: false\n      isReconnecting: false\n      status: 'connected'\n    }\n  | {\n      address: Address | undefined\n      addresses: readonly Address[] | undefined\n      chain: chain | undefined\n      chainId: number | undefined\n      connector: Connector | undefined\n      isConnected: boolean\n      isConnecting: false\n      isDisconnected: false\n      isReconnecting: true\n      status: 'reconnecting'\n    }\n  | {\n      address: Address | undefined\n      addresses: readonly Address[] | undefined\n      chain: chain | undefined\n      chainId: number | undefined\n      connector: Connector | undefined\n      isConnected: false\n      isReconnecting: false\n      isConnecting: true\n      isDisconnected: false\n      status: 'connecting'\n    }\n  | {\n      address: undefined\n      addresses: undefined\n      chain: undefined\n      chainId: undefined\n      connector: undefined\n      isConnected: false\n      isReconnecting: false\n      isConnecting: false\n      isDisconnected: true\n      status: 'disconnected'\n    }\n\n/** https://wagmi.sh/core/api/actions/getAccount */\nexport function getAccount<config extends Config>(\n  config: config,\n): GetAccountReturnType<config> {\n  const uid = config.state.current!\n  const connection = config.state.connections.get(uid)\n  const addresses = connection?.accounts\n  const address = addresses?.[0]\n  const chain = config.chains.find(\n    (chain) => chain.id === connection?.chainId,\n  ) as GetAccountReturnType<config>['chain']\n  const status = config.state.status\n\n  switch (status) {\n    case 'connected':\n      return {\n        address: address!,\n        addresses: addresses!,\n        chain,\n        chainId: connection?.chainId!,\n        connector: connection?.connector!,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status,\n      }\n    case 'reconnecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: !!address,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status,\n      }\n    case 'connecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status,\n      }\n    case 'disconnected':\n      return {\n        address: undefined,\n        addresses: undefined,\n        chain: undefined,\n        chainId: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status,\n      }\n  }\n}\n"],"mappings":"AA0DA;AACA,OAAM,SAAUA,UAAUA,CACxBC,MAAc;EAEd,MAAMC,GAAG,GAAGD,MAAM,CAACE,KAAK,CAACC,OAAQ;EACjC,MAAMC,UAAU,GAAGJ,MAAM,CAACE,KAAK,CAACG,WAAW,CAACC,GAAG,CAACL,GAAG,CAAC;EACpD,MAAMM,SAAS,GAAGH,UAAU,EAAEI,QAAQ;EACtC,MAAMC,OAAO,GAAGF,SAAS,GAAG,CAAC,CAAC;EAC9B,MAAMG,KAAK,GAAGV,MAAM,CAACW,MAAM,CAACC,IAAI,CAC7BF,KAAK,IAAKA,KAAK,CAACG,EAAE,KAAKT,UAAU,EAAEU,OAAO,CACH;EAC1C,MAAMC,MAAM,GAAGf,MAAM,CAACE,KAAK,CAACa,MAAM;EAElC,QAAQA,MAAM;IACZ,KAAK,WAAW;MACd,OAAO;QACLN,OAAO,EAAEA,OAAQ;QACjBF,SAAS,EAAEA,SAAU;QACrBG,KAAK;QACLI,OAAO,EAAEV,UAAU,EAAEU,OAAQ;QAC7BE,SAAS,EAAEZ,UAAU,EAAEY,SAAU;QACjCC,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE,KAAK;QACnBC,cAAc,EAAE,KAAK;QACrBC,cAAc,EAAE,KAAK;QACrBL;OACD;IACH,KAAK,cAAc;MACjB,OAAO;QACLN,OAAO;QACPF,SAAS;QACTG,KAAK;QACLI,OAAO,EAAEV,UAAU,EAAEU,OAAO;QAC5BE,SAAS,EAAEZ,UAAU,EAAEY,SAAS;QAChCC,WAAW,EAAE,CAAC,CAACR,OAAO;QACtBS,YAAY,EAAE,KAAK;QACnBC,cAAc,EAAE,KAAK;QACrBC,cAAc,EAAE,IAAI;QACpBL;OACD;IACH,KAAK,YAAY;MACf,OAAO;QACLN,OAAO;QACPF,SAAS;QACTG,KAAK;QACLI,OAAO,EAAEV,UAAU,EAAEU,OAAO;QAC5BE,SAAS,EAAEZ,UAAU,EAAEY,SAAS;QAChCC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,IAAI;QAClBC,cAAc,EAAE,KAAK;QACrBC,cAAc,EAAE,KAAK;QACrBL;OACD;IACH,KAAK,cAAc;MACjB,OAAO;QACLN,OAAO,EAAEY,SAAS;QAClBd,SAAS,EAAEc,SAAS;QACpBX,KAAK,EAAEW,SAAS;QAChBP,OAAO,EAAEO,SAAS;QAClBL,SAAS,EAAEK,SAAS;QACpBJ,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,KAAK;QACnBC,cAAc,EAAE,IAAI;QACpBC,cAAc,EAAE,KAAK;QACrBL;OACD;EACL;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}