{"ast":null,"code":"import { proxy, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport '@reown/appkit-common';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { NetworkUtil } from '../utils/NetworkUtil.js';\nimport { withErrorBoundary } from '../utils/withErrorBoundary.js';\nimport { AccountController } from './AccountController.js';\nimport { ApiController } from './ApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectionController } from './ConnectionController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { OptionsController } from './OptionsController.js';\nimport { PublicStateController } from './PublicStateController.js';\nimport { RouterController } from './RouterController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  loading: false,\n  loadingNamespaceMap: new Map(),\n  open: false,\n  shake: false,\n  namespace: undefined\n});\n// -- Controller ---------------------------------------- //\nconst controller = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  async open(options) {\n    const isConnected = AccountController.state.status === 'connected';\n    const namespace = options?.namespace;\n    const currentNamespace = ChainController.state.activeChain;\n    const isSwitchingNamespace = namespace && namespace !== currentNamespace;\n    const caipAddress = ChainController.getAccountData(options?.namespace)?.caipAddress;\n    if (ConnectionController.state.wcBasic) {\n      // No need to add an await here if we are use basic\n      ApiController.prefetch({\n        fetchNetworkImages: false,\n        fetchConnectorImages: false\n      });\n    } else {\n      await ApiController.prefetch({\n        fetchConnectorImages: !isConnected,\n        fetchFeaturedWallets: !isConnected,\n        fetchRecommendedWallets: !isConnected\n      });\n    }\n    ConnectorController.setFilterByNamespace(options?.namespace);\n    ModalController.setLoading(true, namespace);\n    if (namespace && isSwitchingNamespace) {\n      const namespaceNetwork = ChainController.getNetworkData(namespace)?.caipNetwork || ChainController.getRequestedCaipNetworks(namespace)[0];\n      if (namespaceNetwork) {\n        NetworkUtil.onSwitchNetwork({\n          network: namespaceNetwork,\n          ignoreSwitchConfirmation: true\n        });\n      }\n    } else {\n      const hasNoAdapters = ChainController.state.noAdapters;\n      if (OptionsController.state.manualWCControl || hasNoAdapters && !caipAddress) {\n        if (CoreHelperUtil.isMobile()) {\n          RouterController.reset('AllWallets');\n        } else {\n          RouterController.reset('ConnectingWalletConnectBasic');\n        }\n      } else if (options?.view) {\n        RouterController.reset(options.view, options.data);\n      } else if (caipAddress) {\n        RouterController.reset('Account');\n      } else {\n        RouterController.reset('Connect');\n      }\n    }\n    state.open = true;\n    PublicStateController.set({\n      open: true\n    });\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'MODAL_OPEN',\n      properties: {\n        connected: Boolean(caipAddress)\n      }\n    });\n  },\n  close() {\n    const isEmbeddedEnabled = OptionsController.state.enableEmbedded;\n    const isConnected = Boolean(ChainController.state.activeCaipAddress);\n    // Only send the event if the modal is open and is about to be closed\n    if (state.open) {\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'MODAL_CLOSE',\n        properties: {\n          connected: isConnected\n        }\n      });\n    }\n    state.open = false;\n    RouterController.reset('Connect');\n    ModalController.clearLoading();\n    if (isEmbeddedEnabled) {\n      if (isConnected) {\n        RouterController.replace('Account');\n      } else {\n        RouterController.push('Connect');\n      }\n    } else {\n      PublicStateController.set({\n        open: false\n      });\n    }\n    ConnectionController.resetUri();\n  },\n  setLoading(loading, namespace) {\n    if (namespace) {\n      state.loadingNamespaceMap.set(namespace, loading);\n    }\n    state.loading = loading;\n    PublicStateController.set({\n      loading\n    });\n  },\n  clearLoading() {\n    state.loadingNamespaceMap.clear();\n    state.loading = false;\n  },\n  shake() {\n    if (state.shake) {\n      return;\n    }\n    state.shake = true;\n    setTimeout(() => {\n      state.shake = false;\n    }, 500);\n  }\n};\n// Export the controller wrapped with our error boundary\nexport const ModalController = withErrorBoundary(controller);","map":{"version":3,"names":["proxy","subscribe","sub","subscribeKey","subKey","CoreHelperUtil","NetworkUtil","withErrorBoundary","AccountController","ApiController","ChainController","ConnectionController","ConnectorController","EventsController","OptionsController","PublicStateController","RouterController","state","loading","loadingNamespaceMap","Map","open","shake","namespace","undefined","controller","callback","key","options","isConnected","status","currentNamespace","activeChain","isSwitchingNamespace","caipAddress","getAccountData","wcBasic","prefetch","fetchNetworkImages","fetchConnectorImages","fetchFeaturedWallets","fetchRecommendedWallets","setFilterByNamespace","ModalController","setLoading","namespaceNetwork","getNetworkData","caipNetwork","getRequestedCaipNetworks","onSwitchNetwork","network","ignoreSwitchConfirmation","hasNoAdapters","noAdapters","manualWCControl","isMobile","reset","view","data","set","sendEvent","type","event","properties","connected","Boolean","close","isEmbeddedEnabled","enableEmbedded","activeCaipAddress","clearLoading","replace","push","resetUri","clear","setTimeout"],"sources":["../../../../src/controllers/ModalController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}