{"ast":null,"code":"import { MessageFormatter } from './messageFormatter.js';\nclass PostMessageCommunicator {\n  constructor(allowedOrigins = null, debugMode = false) {\n    this.allowedOrigins = null;\n    this.callbacks = new Map();\n    this.debugMode = false;\n    this.isServer = typeof window === 'undefined';\n    this.isValidMessage = ({\n      origin,\n      data,\n      source\n    }) => {\n      const emptyOrMalformed = !data;\n      const sentFromParentEl = !this.isServer && source === window.parent;\n      const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n      const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n      let validOrigin = true;\n      if (Array.isArray(this.allowedOrigins)) {\n        validOrigin = this.allowedOrigins.find(regExp => regExp.test(origin)) !== undefined;\n      }\n      return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n    };\n    this.logIncomingMessage = msg => {\n      console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n    };\n    this.onParentMessage = msg => {\n      if (this.isValidMessage(msg)) {\n        this.debugMode && this.logIncomingMessage(msg);\n        this.handleIncomingMessage(msg.data);\n      }\n    };\n    this.handleIncomingMessage = payload => {\n      const {\n        id\n      } = payload;\n      const cb = this.callbacks.get(id);\n      if (cb) {\n        cb(payload);\n        this.callbacks.delete(id);\n      }\n    };\n    this.send = (method, params) => {\n      const request = MessageFormatter.makeRequest(method, params);\n      if (this.isServer) {\n        throw new Error(\"Window doesn't exist\");\n      }\n      window.parent.postMessage(request, '*');\n      return new Promise((resolve, reject) => {\n        this.callbacks.set(request.id, response => {\n          if (!response.success) {\n            reject(new Error(response.error));\n            return;\n          }\n          resolve(response);\n        });\n      });\n    };\n    this.allowedOrigins = allowedOrigins;\n    this.debugMode = debugMode;\n    if (!this.isServer) {\n      window.addEventListener('message', this.onParentMessage);\n    }\n  }\n}\nexport default PostMessageCommunicator;\nexport * from './methods.js';","map":{"version":3,"names":["MessageFormatter","PostMessageCommunicator","constructor","allowedOrigins","debugMode","callbacks","Map","isServer","window","isValidMessage","origin","data","source","emptyOrMalformed","sentFromParentEl","parent","majorVersionNumber","version","parseInt","split","allowedSDKVersion","validOrigin","Array","isArray","find","regExp","test","undefined","logIncomingMessage","msg","console","info","onParentMessage","handleIncomingMessage","payload","id","cb","get","delete","send","method","params","request","makeRequest","Error","postMessage","Promise","resolve","reject","set","response","success","error","addEventListener"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/@safe-global/safe-apps-sdk/src/communication/index.ts"],"sourcesContent":["import { MessageFormatter } from './messageFormatter.js';\nimport { Methods } from './methods.js';\nimport { InterfaceMessageEvent, Communicator, Response, SuccessResponse } from '../types/index.js';\n\n// eslint-disable-next-line\ntype Callback = (response: any) => void;\n\nclass PostMessageCommunicator implements Communicator {\n  private readonly allowedOrigins: RegExp[] | null = null;\n  private callbacks = new Map<string, Callback>();\n  private debugMode = false;\n  private isServer = typeof window === 'undefined';\n\n  constructor(allowedOrigins: RegExp[] | null = null, debugMode = false) {\n    this.allowedOrigins = allowedOrigins;\n    this.debugMode = debugMode;\n\n    if (!this.isServer) {\n      window.addEventListener('message', this.onParentMessage);\n    }\n  }\n\n  private isValidMessage = ({ origin, data, source }: InterfaceMessageEvent): boolean => {\n    const emptyOrMalformed = !data;\n    const sentFromParentEl = !this.isServer && source === window.parent;\n    const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n    const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n    let validOrigin = true;\n    if (Array.isArray(this.allowedOrigins)) {\n      validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n    }\n\n    return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n  };\n\n  private logIncomingMessage = (msg: InterfaceMessageEvent): void => {\n    console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n  };\n\n  private onParentMessage = (msg: InterfaceMessageEvent): void => {\n    if (this.isValidMessage(msg)) {\n      this.debugMode && this.logIncomingMessage(msg);\n      this.handleIncomingMessage(msg.data);\n    }\n  };\n\n  private handleIncomingMessage = (payload: InterfaceMessageEvent['data']): void => {\n    const { id } = payload;\n\n    const cb = this.callbacks.get(id);\n    if (cb) {\n      cb(payload);\n\n      this.callbacks.delete(id);\n    }\n  };\n\n  public send = <M extends Methods, P, R>(method: M, params: P): Promise<SuccessResponse<R>> => {\n    const request = MessageFormatter.makeRequest(method, params);\n\n    if (this.isServer) {\n      throw new Error(\"Window doesn't exist\");\n    }\n\n    window.parent.postMessage(request, '*');\n    return new Promise((resolve, reject) => {\n      this.callbacks.set(request.id, (response: Response<R>) => {\n        if (!response.success) {\n          reject(new Error(response.error));\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}