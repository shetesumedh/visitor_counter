{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidVersionedHashVersionError = exports.InvalidVersionedHashSizeError = exports.EmptyBlobError = exports.BlobSizeTooLargeError = void 0;\nconst kzg_js_1 = require(\"../constants/kzg.js\");\nconst base_js_1 = require(\"./base.js\");\nclass BlobSizeTooLargeError extends base_js_1.BaseError {\n  constructor({\n    maxSize,\n    size\n  }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError'\n    });\n  }\n}\nexports.BlobSizeTooLargeError = BlobSizeTooLargeError;\nclass EmptyBlobError extends base_js_1.BaseError {\n  constructor() {\n    super('Blob data must not be empty.', {\n      name: 'EmptyBlobError'\n    });\n  }\n}\nexports.EmptyBlobError = EmptyBlobError;\nclass InvalidVersionedHashSizeError extends base_js_1.BaseError {\n  constructor({\n    hash,\n    size\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError'\n    });\n  }\n}\nexports.InvalidVersionedHashSizeError = InvalidVersionedHashSizeError;\nclass InvalidVersionedHashVersionError extends base_js_1.BaseError {\n  constructor({\n    hash,\n    version\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [`Expected: ${kzg_js_1.versionedHashVersionKzg}`, `Received: ${version}`],\n      name: 'InvalidVersionedHashVersionError'\n    });\n  }\n}\nexports.InvalidVersionedHashVersionError = InvalidVersionedHashVersionError;","map":{"version":3,"names":["kzg_js_1","require","base_js_1","BlobSizeTooLargeError","BaseError","constructor","maxSize","size","metaMessages","name","exports","EmptyBlobError","InvalidVersionedHashSizeError","hash","InvalidVersionedHashVersionError","version","versionedHashVersionKzg"],"sources":["/home/sumedhshete/visitor-counter/frontend/node_modules/viem/errors/blob.ts"],"sourcesContent":["import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError',\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  constructor() {\n    super('Blob data must not be empty.', { name: 'EmptyBlobError' })\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError',\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n      name: 'InvalidVersionedHashVersionError',\n    })\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAGA,MAAAC,SAAA,GAAAD,OAAA;AAKA,MAAaE,qBAAsB,SAAQD,SAAA,CAAAE,SAAS;EAClDC,YAAY;IAAEC,OAAO;IAAEC;EAAI,CAAqC;IAC9D,KAAK,CAAC,yBAAyB,EAAE;MAC/BC,YAAY,EAAE,CAAC,QAAQF,OAAO,QAAQ,EAAE,UAAUC,IAAI,QAAQ,CAAC;MAC/DE,IAAI,EAAE;KACP,CAAC;EACJ;;AANFC,OAAA,CAAAP,qBAAA,GAAAA,qBAAA;AAYA,MAAaQ,cAAe,SAAQT,SAAA,CAAAE,SAAS;EAC3CC,YAAA;IACE,KAAK,CAAC,8BAA8B,EAAE;MAAEI,IAAI,EAAE;IAAgB,CAAE,CAAC;EACnE;;AAHFC,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAUA,MAAaC,6BAA8B,SAAQV,SAAA,CAAAE,SAAS;EAC1DC,YAAY;IACVQ,IAAI;IACJN;EAAI,CAIL;IACC,KAAK,CAAC,mBAAmBM,IAAI,oBAAoB,EAAE;MACjDL,YAAY,EAAE,CAAC,cAAc,EAAE,aAAaD,IAAI,EAAE,CAAC;MACnDE,IAAI,EAAE;KACP,CAAC;EACJ;;AAZFC,OAAA,CAAAE,6BAAA,GAAAA,6BAAA;AAmBA,MAAaE,gCAAiC,SAAQZ,SAAA,CAAAE,SAAS;EAC7DC,YAAY;IACVQ,IAAI;IACJE;EAAO,CAIR;IACC,KAAK,CAAC,mBAAmBF,IAAI,uBAAuB,EAAE;MACpDL,YAAY,EAAE,CACZ,aAAaR,QAAA,CAAAgB,uBAAuB,EAAE,EACtC,aAAaD,OAAO,EAAE,CACvB;MACDN,IAAI,EAAE;KACP,CAAC;EACJ;;AAfFC,OAAA,CAAAI,gCAAA,GAAAA,gCAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}