{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setNonce = setNonce;\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nasync function setNonce(client, {\n  address,\n  nonce\n}) {\n  await client.request({\n    method: `${client.mode}_setNonce`,\n    params: [address, (0, toHex_js_1.numberToHex)(nonce)]\n  });\n}","map":{"version":3,"names":["exports","setNonce","toHex_js_1","require","client","address","nonce","request","method","mode","params","numberToHex"],"sources":["/home/sumedhshete/visitor-counter/frontend_sepolia/node_modules/viem/actions/test/setNonce.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNonceParameters = {\n  /** The account address. */\n  address: Address\n  /** The nonce to set. */\n  nonce: number\n}\n\nexport type SetNonceErrorType = RequestErrorType | ErrorType\n\n/**\n * Modifies (overrides) the nonce of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNonce\n *\n * @param client - Client to use\n * @param parameters â€“ {@link SetNonceParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNonce } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNonce(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   nonce: 420,\n * })\n */\nexport async function setNonce<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, chain, account, false>,\n  { address, nonce }: SetNonceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNonce`,\n    params: [address, numberToHex(nonce)],\n  })\n}\n"],"mappings":";;;;;AA6CAA,OAAA,CAAAC,QAAA,GAAAA,QAAA;AAlCA,MAAAC,UAAA,GAAAC,OAAA;AAkCO,eAAeF,QAAQA,CAI5BG,MAAoE,EACpE;EAAEC,OAAO;EAAEC;AAAK,CAAsB;EAEtC,MAAMF,MAAM,CAACG,OAAO,CAAC;IACnBC,MAAM,EAAE,GAAGJ,MAAM,CAACK,IAAI,WAAW;IACjCC,MAAM,EAAE,CAACL,OAAO,EAAE,IAAAH,UAAA,CAAAS,WAAW,EAACL,KAAK,CAAC;GACrC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}