{"ast":null,"code":"import { proxy, ref, snapshot, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { ConstantsUtil, getW3mThemeVariables } from '@reown/appkit-common';\nimport { MobileWalletUtil } from '../utils/MobileWallet.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { withErrorBoundary } from '../utils/withErrorBoundary.js';\nimport { ApiController } from './ApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { OptionsController } from './OptionsController.js';\nimport { RouterController } from './RouterController.js';\nimport { ThemeController } from './ThemeController.js';\nconst defaultActiveConnectors = {\n  eip155: undefined,\n  solana: undefined,\n  polkadot: undefined,\n  bip122: undefined,\n  cosmos: undefined\n};\n// -- State --------------------------------------------- //\nconst state = proxy({\n  allConnectors: [],\n  connectors: [],\n  activeConnector: undefined,\n  filterByNamespace: undefined,\n  activeConnectorIds: {\n    ...defaultActiveConnectors\n  },\n  filterByNamespaceMap: {\n    eip155: true,\n    solana: true,\n    polkadot: true,\n    bip122: true,\n    cosmos: true\n  }\n});\n// -- Controller ---------------------------------------- //\nconst controller = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => {\n      callback(state);\n    });\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  initialize(namespaces) {\n    namespaces.forEach(namespace => {\n      const connectorId = StorageUtil.getConnectedConnectorId(namespace);\n      if (connectorId) {\n        ConnectorController.setConnectorId(connectorId, namespace);\n      }\n    });\n  },\n  setActiveConnector(connector) {\n    if (connector) {\n      state.activeConnector = ref(connector);\n    }\n  },\n  setConnectors(connectors) {\n    const newConnectors = connectors.filter(newConnector => !state.allConnectors.some(existingConnector => existingConnector.id === newConnector.id && ConnectorController.getConnectorName(existingConnector.name) === ConnectorController.getConnectorName(newConnector.name) && existingConnector.chain === newConnector.chain));\n    /**\n     * We are reassigning the state of the proxy to a new array of new objects, ConnectorController can cause issues. So it is better to use ref in ConnectorController case.\n     * Check more about proxy on https://valtio.dev/docs/api/basic/proxy#Gotchas\n     * Check more about ref on https://valtio.dev/docs/api/basic/ref\n     */\n    newConnectors.forEach(connector => {\n      if (connector.type !== 'MULTI_CHAIN') {\n        state.allConnectors.push(ref(connector));\n      }\n    });\n    const enabledNamespaces = ConnectorController.getEnabledNamespaces();\n    const connectorsFilteredByNamespaces = ConnectorController.getEnabledConnectors(enabledNamespaces);\n    state.connectors = ConnectorController.mergeMultiChainConnectors(connectorsFilteredByNamespaces);\n  },\n  filterByNamespaces(enabledNamespaces) {\n    Object.keys(state.filterByNamespaceMap).forEach(namespace => {\n      state.filterByNamespaceMap[namespace] = false;\n    });\n    enabledNamespaces.forEach(namespace => {\n      state.filterByNamespaceMap[namespace] = true;\n    });\n    ConnectorController.updateConnectorsForEnabledNamespaces();\n  },\n  filterByNamespace(namespace, enabled) {\n    state.filterByNamespaceMap[namespace] = enabled;\n    ConnectorController.updateConnectorsForEnabledNamespaces();\n  },\n  updateConnectorsForEnabledNamespaces() {\n    const enabledNamespaces = ConnectorController.getEnabledNamespaces();\n    const enabledConnectors = ConnectorController.getEnabledConnectors(enabledNamespaces);\n    const areAllNamespacesEnabled = ConnectorController.areAllNamespacesEnabled();\n    state.connectors = ConnectorController.mergeMultiChainConnectors(enabledConnectors);\n    if (areAllNamespacesEnabled) {\n      ApiController.clearFilterByNamespaces();\n    } else {\n      ApiController.filterByNamespaces(enabledNamespaces);\n    }\n  },\n  getEnabledNamespaces() {\n    return Object.entries(state.filterByNamespaceMap).filter(([_, enabled]) => enabled).map(([namespace]) => namespace);\n  },\n  getEnabledConnectors(enabledNamespaces) {\n    return state.allConnectors.filter(connector => enabledNamespaces.includes(connector.chain));\n  },\n  areAllNamespacesEnabled() {\n    return Object.values(state.filterByNamespaceMap).every(enabled => enabled);\n  },\n  mergeMultiChainConnectors(connectors) {\n    const connectorsByNameMap = ConnectorController.generateConnectorMapByName(connectors);\n    const mergedConnectors = [];\n    connectorsByNameMap.forEach(keyConnectors => {\n      const firstItem = keyConnectors[0];\n      const isAuthConnector = firstItem?.id === ConstantsUtil.CONNECTOR_ID.AUTH;\n      if (keyConnectors.length > 1 && firstItem) {\n        mergedConnectors.push({\n          name: firstItem.name,\n          imageUrl: firstItem.imageUrl,\n          imageId: firstItem.imageId,\n          connectors: [...keyConnectors],\n          type: isAuthConnector ? 'AUTH' : 'MULTI_CHAIN',\n          // These values are just placeholders, we don't use them in multi-chain connector select screen\n          chain: 'eip155',\n          id: firstItem?.id || ''\n        });\n      } else if (firstItem) {\n        mergedConnectors.push(firstItem);\n      }\n    });\n    return mergedConnectors;\n  },\n  generateConnectorMapByName(connectors) {\n    const connectorsByNameMap = new Map();\n    connectors.forEach(connector => {\n      const {\n        name\n      } = connector;\n      const connectorName = ConnectorController.getConnectorName(name);\n      if (!connectorName) {\n        return;\n      }\n      const connectorsByName = connectorsByNameMap.get(connectorName) || [];\n      const haveSameConnector = connectorsByName.find(c => c.chain === connector.chain);\n      if (!haveSameConnector) {\n        connectorsByName.push(connector);\n      }\n      connectorsByNameMap.set(connectorName, connectorsByName);\n    });\n    return connectorsByNameMap;\n  },\n  getConnectorName(name) {\n    if (!name) {\n      return name;\n    }\n    const nameOverrideMap = {\n      'Trust Wallet': 'Trust'\n    };\n    return nameOverrideMap[name] || name;\n  },\n  getUniqueConnectorsByName(connectors) {\n    const uniqueConnectors = [];\n    connectors.forEach(c => {\n      if (!uniqueConnectors.find(uc => uc.chain === c.chain)) {\n        uniqueConnectors.push(c);\n      }\n    });\n    return uniqueConnectors;\n  },\n  addConnector(connector) {\n    if (connector.id === ConstantsUtil.CONNECTOR_ID.AUTH) {\n      const authConnector = connector;\n      const optionsState = snapshot(OptionsController.state);\n      const themeMode = ThemeController.getSnapshot().themeMode;\n      const themeVariables = ThemeController.getSnapshot().themeVariables;\n      authConnector?.provider?.syncDappData?.({\n        metadata: optionsState.metadata,\n        sdkVersion: optionsState.sdkVersion,\n        projectId: optionsState.projectId,\n        sdkType: optionsState.sdkType\n      });\n      authConnector?.provider?.syncTheme({\n        themeMode,\n        themeVariables,\n        w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n      });\n      ConnectorController.setConnectors([connector]);\n    } else {\n      ConnectorController.setConnectors([connector]);\n    }\n  },\n  getAuthConnector(chainNamespace) {\n    const activeNamespace = chainNamespace || ChainController.state.activeChain;\n    const authConnector = state.connectors.find(c => c.id === ConstantsUtil.CONNECTOR_ID.AUTH);\n    if (!authConnector) {\n      return undefined;\n    }\n    if (authConnector?.connectors?.length) {\n      const connector = authConnector.connectors.find(c => c.chain === activeNamespace);\n      return connector;\n    }\n    return authConnector;\n  },\n  getAnnouncedConnectorRdns() {\n    return state.connectors.filter(c => c.type === 'ANNOUNCED').map(c => c.info?.rdns);\n  },\n  getConnectorById(id) {\n    return state.allConnectors.find(c => c.id === id);\n  },\n  getConnector(id, rdns) {\n    const connectorsByNamespace = state.allConnectors.filter(c => c.chain === ChainController.state.activeChain);\n    return connectorsByNamespace.find(c => c.explorerId === id || c.info?.rdns === rdns);\n  },\n  syncIfAuthConnector(connector) {\n    if (connector.id !== 'ID_AUTH') {\n      return;\n    }\n    const authConnector = connector;\n    const optionsState = snapshot(OptionsController.state);\n    const themeMode = ThemeController.getSnapshot().themeMode;\n    const themeVariables = ThemeController.getSnapshot().themeVariables;\n    authConnector?.provider?.syncDappData?.({\n      metadata: optionsState.metadata,\n      sdkVersion: optionsState.sdkVersion,\n      sdkType: optionsState.sdkType,\n      projectId: optionsState.projectId\n    });\n    authConnector.provider.syncTheme({\n      themeMode,\n      themeVariables,\n      w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n    });\n  },\n  /**\n   * Returns the connectors filtered by namespace.\n   * @param namespace - The namespace to filter the connectors by.\n   * @returns ConnectorWithProviders[].\n   */\n  getConnectorsByNamespace(namespace) {\n    const namespaceConnectors = state.allConnectors.filter(connector => connector.chain === namespace);\n    return ConnectorController.mergeMultiChainConnectors(namespaceConnectors);\n  },\n  selectWalletConnector(wallet) {\n    const connector = ConnectorController.getConnector(wallet.id, wallet.rdns);\n    const namespace = ChainController.state.activeChain;\n    MobileWalletUtil.handleMobileDeeplinkRedirect(connector?.explorerId || wallet.id, namespace);\n    if (connector) {\n      RouterController.push('ConnectingExternal', {\n        connector\n      });\n    } else {\n      RouterController.push('ConnectingWalletConnect', {\n        wallet\n      });\n    }\n  },\n  /**\n   * Returns the connectors. If a namespace is provided, the connectors are filtered by namespace.\n   * @param namespace - The namespace to filter the connectors by. If not provided, all connectors are returned.\n   * @returns ConnectorWithProviders[].\n   */\n  getConnectors(namespace) {\n    if (namespace) {\n      return ConnectorController.getConnectorsByNamespace(namespace);\n    }\n    return ConnectorController.mergeMultiChainConnectors(state.allConnectors);\n  },\n  /**\n   * Sets the filter by namespace and updates the connectors.\n   * @param namespace - The namespace to filter the connectors by.\n   */\n  setFilterByNamespace(namespace) {\n    state.filterByNamespace = namespace;\n    state.connectors = ConnectorController.getConnectors(namespace);\n    ApiController.setFilterByNamespace(namespace);\n  },\n  setConnectorId(connectorId, namespace) {\n    if (connectorId) {\n      state.activeConnectorIds = {\n        ...state.activeConnectorIds,\n        [namespace]: connectorId\n      };\n      StorageUtil.setConnectedConnectorId(namespace, connectorId);\n    }\n  },\n  removeConnectorId(namespace) {\n    state.activeConnectorIds = {\n      ...state.activeConnectorIds,\n      [namespace]: undefined\n    };\n    StorageUtil.deleteConnectedConnectorId(namespace);\n  },\n  getConnectorId(namespace) {\n    if (!namespace) {\n      return undefined;\n    }\n    return state.activeConnectorIds[namespace];\n  },\n  isConnected(namespace) {\n    if (!namespace) {\n      return Object.values(state.activeConnectorIds).some(id => Boolean(id));\n    }\n    return Boolean(state.activeConnectorIds[namespace]);\n  },\n  resetConnectorIds() {\n    state.activeConnectorIds = {\n      ...defaultActiveConnectors\n    };\n  }\n};\n// Export the controller wrapped with our error boundary\nexport const ConnectorController = withErrorBoundary(controller);","map":{"version":3,"names":["proxy","ref","snapshot","subscribe","sub","subscribeKey","subKey","ConstantsUtil","getW3mThemeVariables","MobileWalletUtil","StorageUtil","withErrorBoundary","ApiController","ChainController","OptionsController","RouterController","ThemeController","defaultActiveConnectors","eip155","undefined","solana","polkadot","bip122","cosmos","state","allConnectors","connectors","activeConnector","filterByNamespace","activeConnectorIds","filterByNamespaceMap","controller","callback","key","initialize","namespaces","forEach","namespace","connectorId","getConnectedConnectorId","ConnectorController","setConnectorId","setActiveConnector","connector","setConnectors","newConnectors","filter","newConnector","some","existingConnector","id","getConnectorName","name","chain","type","push","enabledNamespaces","getEnabledNamespaces","connectorsFilteredByNamespaces","getEnabledConnectors","mergeMultiChainConnectors","filterByNamespaces","Object","keys","updateConnectorsForEnabledNamespaces","enabled","enabledConnectors","areAllNamespacesEnabled","clearFilterByNamespaces","entries","_","map","includes","values","every","connectorsByNameMap","generateConnectorMapByName","mergedConnectors","keyConnectors","firstItem","isAuthConnector","CONNECTOR_ID","AUTH","length","imageUrl","imageId","Map","connectorName","connectorsByName","get","haveSameConnector","find","c","set","nameOverrideMap","getUniqueConnectorsByName","uniqueConnectors","uc","addConnector","authConnector","optionsState","themeMode","getSnapshot","themeVariables","provider","syncDappData","metadata","sdkVersion","projectId","sdkType","syncTheme","w3mThemeVariables","getAuthConnector","chainNamespace","activeNamespace","activeChain","getAnnouncedConnectorRdns","info","rdns","getConnectorById","getConnector","connectorsByNamespace","explorerId","syncIfAuthConnector","getConnectorsByNamespace","namespaceConnectors","selectWalletConnector","wallet","handleMobileDeeplinkRedirect","getConnectors","setFilterByNamespace","setConnectedConnectorId","removeConnectorId","deleteConnectedConnectorId","getConnectorId","isConnected","Boolean","resetConnectorIds"],"sources":["../../../../src/controllers/ConnectorController.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,IAAIC,GAAG,QAAQ,gBAAgB;AACvE,SAASC,YAAY,IAAIC,MAAM,QAAQ,sBAAsB;AAE7D,SAA8BC,aAAa,EAAEC,oBAAoB,QAAQ,sBAAsB;AAE/F,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,eAAe,QAAQ,sBAAsB;AAiBtD,MAAMC,uBAAuB,GAAG;EAC9BC,MAAM,EAAEC,SAAS;EACjBC,MAAM,EAAED,SAAS;EACjBE,QAAQ,EAAEF,SAAS;EACnBG,MAAM,EAAEH,SAAS;EACjBI,MAAM,EAAEJ;CACT;AAED;AACA,MAAMK,KAAK,GAAGxB,KAAK,CAA2B;EAC5CyB,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,EAAE;EACdC,eAAe,EAAER,SAAS;EAC1BS,iBAAiB,EAAET,SAAS;EAC5BU,kBAAkB,EAAE;IAAE,GAAGZ;EAAuB,CAAE;EAClDa,oBAAoB,EAAE;IACpBZ,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;;CAEX,CAAC;AAEF;AACA,MAAMQ,UAAU,GAAG;EACjBP,KAAK;EAELrB,SAASA,CAAC6B,QAAmD;IAC3D,OAAO5B,GAAG,CAACoB,KAAK,EAAE,MAAK;MACrBQ,QAAQ,CAACR,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;EAEDnB,YAAYA,CAAqB4B,GAAM,EAAED,QAAsD;IAC7F,OAAO1B,MAAM,CAACkB,KAAK,EAAES,GAAG,EAAED,QAAQ,CAAC;EACrC,CAAC;EAEDE,UAAUA,CAACC,UAA4B;IACrCA,UAAU,CAACC,OAAO,CAACC,SAAS,IAAG;MAC7B,MAAMC,WAAW,GAAG5B,WAAW,CAAC6B,uBAAuB,CAACF,SAAS,CAAC;MAClE,IAAIC,WAAW,EAAE;QACfE,mBAAmB,CAACC,cAAc,CAACH,WAAW,EAAED,SAAS,CAAC;MAC5D;IACF,CAAC,CAAC;EACJ,CAAC;EAEDK,kBAAkBA,CAACC,SAAsD;IACvE,IAAIA,SAAS,EAAE;MACbnB,KAAK,CAACG,eAAe,GAAG1B,GAAG,CAAC0C,SAAS,CAAC;IACxC;EACF,CAAC;EAEDC,aAAaA,CAAClB,UAAkD;IAC9D,MAAMmB,aAAa,GAAGnB,UAAU,CAACoB,MAAM,CACrCC,YAAY,IACV,CAACvB,KAAK,CAACC,aAAa,CAACuB,IAAI,CACvBC,iBAAiB,IACfA,iBAAiB,CAACC,EAAE,KAAKH,YAAY,CAACG,EAAE,IACxCV,mBAAmB,CAACW,gBAAgB,CAACF,iBAAiB,CAACG,IAAI,CAAC,KAC1DZ,mBAAmB,CAACW,gBAAgB,CAACJ,YAAY,CAACK,IAAI,CAAC,IACzDH,iBAAiB,CAACI,KAAK,KAAKN,YAAY,CAACM,KAAK,CACjD,CACJ;IAED;;;;;IAKAR,aAAa,CAACT,OAAO,CAACO,SAAS,IAAG;MAChC,IAAIA,SAAS,CAACW,IAAI,KAAK,aAAa,EAAE;QACpC9B,KAAK,CAACC,aAAa,CAAC8B,IAAI,CAACtD,GAAG,CAAC0C,SAAS,CAAC,CAAC;MAC1C;IACF,CAAC,CAAC;IAEF,MAAMa,iBAAiB,GAAGhB,mBAAmB,CAACiB,oBAAoB,EAAE;IACpE,MAAMC,8BAA8B,GAClClB,mBAAmB,CAACmB,oBAAoB,CAACH,iBAAiB,CAAC;IAE7DhC,KAAK,CAACE,UAAU,GAAGc,mBAAmB,CAACoB,yBAAyB,CAACF,8BAA8B,CAAC;EAClG,CAAC;EAEDG,kBAAkBA,CAACL,iBAAmC;IACpDM,MAAM,CAACC,IAAI,CAACvC,KAAK,CAACM,oBAAoB,CAAC,CAACM,OAAO,CAACC,SAAS,IAAG;MAC1Db,KAAK,CAACM,oBAAoB,CAACO,SAA2B,CAAC,GAAG,KAAK;IACjE,CAAC,CAAC;IAEFmB,iBAAiB,CAACpB,OAAO,CAACC,SAAS,IAAG;MACpCb,KAAK,CAACM,oBAAoB,CAACO,SAAS,CAAC,GAAG,IAAI;IAC9C,CAAC,CAAC;IAEFG,mBAAmB,CAACwB,oCAAoC,EAAE;EAC5D,CAAC;EAEDpC,iBAAiBA,CAACS,SAAyB,EAAE4B,OAAgB;IAC3DzC,KAAK,CAACM,oBAAoB,CAACO,SAAS,CAAC,GAAG4B,OAAO;IAE/CzB,mBAAmB,CAACwB,oCAAoC,EAAE;EAC5D,CAAC;EAEDA,oCAAoCA,CAAA;IAClC,MAAMR,iBAAiB,GAAGhB,mBAAmB,CAACiB,oBAAoB,EAAE;IACpE,MAAMS,iBAAiB,GAAG1B,mBAAmB,CAACmB,oBAAoB,CAACH,iBAAiB,CAAC;IACrF,MAAMW,uBAAuB,GAAG3B,mBAAmB,CAAC2B,uBAAuB,EAAE;IAE7E3C,KAAK,CAACE,UAAU,GAAGc,mBAAmB,CAACoB,yBAAyB,CAACM,iBAAiB,CAAC;IAEnF,IAAIC,uBAAuB,EAAE;MAC3BvD,aAAa,CAACwD,uBAAuB,EAAE;IACzC,CAAC,MAAM;MACLxD,aAAa,CAACiD,kBAAkB,CAACL,iBAAiB,CAAC;IACrD;EACF,CAAC;EAEDC,oBAAoBA,CAAA;IAClB,OAAOK,MAAM,CAACO,OAAO,CAAC7C,KAAK,CAACM,oBAAoB,CAAC,CAC9CgB,MAAM,CAAC,CAAC,CAACwB,CAAC,EAAEL,OAAO,CAAC,KAAKA,OAAO,CAAC,CACjCM,GAAG,CAAC,CAAC,CAAClC,SAAS,CAAC,KAAKA,SAA2B,CAAC;EACtD,CAAC;EAEDsB,oBAAoBA,CAACH,iBAAmC;IACtD,OAAOhC,KAAK,CAACC,aAAa,CAACqB,MAAM,CAACH,SAAS,IACzCa,iBAAiB,CAACgB,QAAQ,CAAC7B,SAAS,CAACU,KAAuB,CAAC,CAC9D;EACH,CAAC;EAEDc,uBAAuBA,CAAA;IACrB,OAAOL,MAAM,CAACW,MAAM,CAACjD,KAAK,CAACM,oBAAoB,CAAC,CAAC4C,KAAK,CAACT,OAAO,IAAIA,OAAO,CAAC;EAC5E,CAAC;EAEDL,yBAAyBA,CAAClC,UAAuB;IAC/C,MAAMiD,mBAAmB,GAAGnC,mBAAmB,CAACoC,0BAA0B,CAAClD,UAAU,CAAC;IACtF,MAAMmD,gBAAgB,GAA6B,EAAE;IAErDF,mBAAmB,CAACvC,OAAO,CAAC0C,aAAa,IAAG;MAC1C,MAAMC,SAAS,GAAGD,aAAa,CAAC,CAAC,CAAC;MAClC,MAAME,eAAe,GAAGD,SAAS,EAAE7B,EAAE,KAAK3C,aAAa,CAAC0E,YAAY,CAACC,IAAI;MAEzE,IAAIJ,aAAa,CAACK,MAAM,GAAG,CAAC,IAAIJ,SAAS,EAAE;QACzCF,gBAAgB,CAACtB,IAAI,CAAC;UACpBH,IAAI,EAAE2B,SAAS,CAAC3B,IAAI;UACpBgC,QAAQ,EAAEL,SAAS,CAACK,QAAQ;UAC5BC,OAAO,EAAEN,SAAS,CAACM,OAAO;UAC1B3D,UAAU,EAAE,CAAC,GAAGoD,aAAa,CAAC;UAC9BxB,IAAI,EAAE0B,eAAe,GAAG,MAAM,GAAG,aAAa;UAC9C;UACA3B,KAAK,EAAE,QAAQ;UACfH,EAAE,EAAE6B,SAAS,EAAE7B,EAAE,IAAI;SACtB,CAAC;MACJ,CAAC,MAAM,IAAI6B,SAAS,EAAE;QACpBF,gBAAgB,CAACtB,IAAI,CAACwB,SAAS,CAAC;MAClC;IACF,CAAC,CAAC;IAEF,OAAOF,gBAAgB;EACzB,CAAC;EAEDD,0BAA0BA,CAAClD,UAAuB;IAChD,MAAMiD,mBAAmB,GAAG,IAAIW,GAAG,EAAuB;IAE1D5D,UAAU,CAACU,OAAO,CAACO,SAAS,IAAG;MAC7B,MAAM;QAAES;MAAI,CAAE,GAAGT,SAAS;MAC1B,MAAM4C,aAAa,GAAG/C,mBAAmB,CAACW,gBAAgB,CAACC,IAAI,CAAC;MAEhE,IAAI,CAACmC,aAAa,EAAE;QAClB;MACF;MAEA,MAAMC,gBAAgB,GAAGb,mBAAmB,CAACc,GAAG,CAACF,aAAa,CAAC,IAAI,EAAE;MACrE,MAAMG,iBAAiB,GAAGF,gBAAgB,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvC,KAAK,KAAKV,SAAS,CAACU,KAAK,CAAC;MACjF,IAAI,CAACqC,iBAAiB,EAAE;QACtBF,gBAAgB,CAACjC,IAAI,CAACZ,SAAS,CAAC;MAClC;MACAgC,mBAAmB,CAACkB,GAAG,CAACN,aAAa,EAAEC,gBAAgB,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAOb,mBAAmB;EAC5B,CAAC;EAEDxB,gBAAgBA,CAACC,IAAwB;IACvC,IAAI,CAACA,IAAI,EAAE;MACT,OAAOA,IAAI;IACb;IAEA,MAAM0C,eAAe,GAAG;MACtB,cAAc,EAAE;KACjB;IAED,OAAQA,eAA0C,CAAC1C,IAAI,CAAC,IAAIA,IAAI;EAClE,CAAC;EAED2C,yBAAyBA,CAACrE,UAAuB;IAC/C,MAAMsE,gBAAgB,GAAgB,EAAE;IAExCtE,UAAU,CAACU,OAAO,CAACwD,CAAC,IAAG;MACrB,IAAI,CAACI,gBAAgB,CAACL,IAAI,CAACM,EAAE,IAAIA,EAAE,CAAC5C,KAAK,KAAKuC,CAAC,CAACvC,KAAK,CAAC,EAAE;QACtD2C,gBAAgB,CAACzC,IAAI,CAACqC,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;IAEF,OAAOI,gBAAgB;EACzB,CAAC;EAEDE,YAAYA,CAACvD,SAAoC;IAC/C,IAAIA,SAAS,CAACO,EAAE,KAAK3C,aAAa,CAAC0E,YAAY,CAACC,IAAI,EAAE;MACpD,MAAMiB,aAAa,GAAGxD,SAA0B;MAEhD,MAAMyD,YAAY,GAAGlG,QAAQ,CAACY,iBAAiB,CAACU,KAAK,CAAmC;MACxF,MAAM6E,SAAS,GAAGrF,eAAe,CAACsF,WAAW,EAAE,CAACD,SAAS;MACzD,MAAME,cAAc,GAAGvF,eAAe,CAACsF,WAAW,EAAE,CAACC,cAAc;MAEnEJ,aAAa,EAAEK,QAAQ,EAAEC,YAAY,GAAG;QACtCC,QAAQ,EAAEN,YAAY,CAACM,QAAQ;QAC/BC,UAAU,EAAEP,YAAY,CAACO,UAAU;QACnCC,SAAS,EAAER,YAAY,CAACQ,SAAS;QACjCC,OAAO,EAAET,YAAY,CAACS;OACvB,CAAC;MACFV,aAAa,EAAEK,QAAQ,EAAEM,SAAS,CAAC;QACjCT,SAAS;QACTE,cAAc;QACdQ,iBAAiB,EAAEvG,oBAAoB,CAAC+F,cAAc,EAAEF,SAAS;OAClE,CAAC;MACF7D,mBAAmB,CAACI,aAAa,CAAC,CAACD,SAAS,CAAC,CAAC;IAChD,CAAC,MAAM;MACLH,mBAAmB,CAACI,aAAa,CAAC,CAACD,SAAS,CAAC,CAAC;IAChD;EACF,CAAC;EAEDqE,gBAAgBA,CAACC,cAA+B;IAC9C,MAAMC,eAAe,GAAGD,cAAc,IAAIpG,eAAe,CAACW,KAAK,CAAC2F,WAAW;IAC3E,MAAMhB,aAAa,GAAG3E,KAAK,CAACE,UAAU,CAACiE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1C,EAAE,KAAK3C,aAAa,CAAC0E,YAAY,CAACC,IAAI,CAAC;IAE1F,IAAI,CAACiB,aAAa,EAAE;MAClB,OAAOhF,SAAS;IAClB;IAEA,IAAIgF,aAAa,EAAEzE,UAAU,EAAEyD,MAAM,EAAE;MACrC,MAAMxC,SAAS,GAAGwD,aAAa,CAACzE,UAAU,CAACiE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvC,KAAK,KAAK6D,eAAe,CAAC;MAEjF,OAAOvE,SAAsC;IAC/C;IAEA,OAAOwD,aAA8B;EACvC,CAAC;EAEDiB,yBAAyBA,CAAA;IACvB,OAAO5F,KAAK,CAACE,UAAU,CAACoB,MAAM,CAAC8C,CAAC,IAAIA,CAAC,CAACtC,IAAI,KAAK,WAAW,CAAC,CAACiB,GAAG,CAACqB,CAAC,IAAIA,CAAC,CAACyB,IAAI,EAAEC,IAAI,CAAC;EACpF,CAAC;EAEDC,gBAAgBA,CAACrE,EAAU;IACzB,OAAO1B,KAAK,CAACC,aAAa,CAACkE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1C,EAAE,KAAKA,EAAE,CAAC;EACnD,CAAC;EAEDsE,YAAYA,CAACtE,EAAU,EAAEoE,IAAoB;IAC3C,MAAMG,qBAAqB,GAAGjG,KAAK,CAACC,aAAa,CAACqB,MAAM,CACtD8C,CAAC,IAAIA,CAAC,CAACvC,KAAK,KAAKxC,eAAe,CAACW,KAAK,CAAC2F,WAAW,CACnD;IAED,OAAOM,qBAAqB,CAAC9B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC8B,UAAU,KAAKxE,EAAE,IAAI0C,CAAC,CAACyB,IAAI,EAAEC,IAAI,KAAKA,IAAI,CAAC;EACtF,CAAC;EAEDK,mBAAmBA,CAAChF,SAAoC;IACtD,IAAIA,SAAS,CAACO,EAAE,KAAK,SAAS,EAAE;MAC9B;IACF;IAEA,MAAMiD,aAAa,GAAGxD,SAA0B;IAEhD,MAAMyD,YAAY,GAAGlG,QAAQ,CAACY,iBAAiB,CAACU,KAAK,CAAmC;IACxF,MAAM6E,SAAS,GAAGrF,eAAe,CAACsF,WAAW,EAAE,CAACD,SAAS;IACzD,MAAME,cAAc,GAAGvF,eAAe,CAACsF,WAAW,EAAE,CAACC,cAAc;IAEnEJ,aAAa,EAAEK,QAAQ,EAAEC,YAAY,GAAG;MACtCC,QAAQ,EAAEN,YAAY,CAACM,QAAQ;MAC/BC,UAAU,EAAEP,YAAY,CAACO,UAAU;MACnCE,OAAO,EAAET,YAAY,CAACS,OAAO;MAC7BD,SAAS,EAAER,YAAY,CAACQ;KACzB,CAAC;IACFT,aAAa,CAACK,QAAQ,CAACM,SAAS,CAAC;MAC/BT,SAAS;MACTE,cAAc;MACdQ,iBAAiB,EAAEvG,oBAAoB,CAAC+F,cAAc,EAAEF,SAAS;KAClE,CAAC;EACJ,CAAC;EAED;;;;;EAKAuB,wBAAwBA,CAACvF,SAAyB;IAChD,MAAMwF,mBAAmB,GAAGrG,KAAK,CAACC,aAAa,CAACqB,MAAM,CACpDH,SAAS,IAAIA,SAAS,CAACU,KAAK,KAAKhB,SAAS,CAC3C;IAED,OAAOG,mBAAmB,CAACoB,yBAAyB,CAACiE,mBAAmB,CAAC;EAC3E,CAAC;EAEDC,qBAAqBA,CAACC,MAAgB;IACpC,MAAMpF,SAAS,GAAGH,mBAAmB,CAACgF,YAAY,CAACO,MAAM,CAAC7E,EAAE,EAAE6E,MAAM,CAACT,IAAI,CAAC;IAC1E,MAAMjF,SAAS,GAAGxB,eAAe,CAACW,KAAK,CAAC2F,WAA6B;IACrE1G,gBAAgB,CAACuH,4BAA4B,CAACrF,SAAS,EAAE+E,UAAU,IAAIK,MAAM,CAAC7E,EAAE,EAAEb,SAAS,CAAC;IAE5F,IAAIM,SAAS,EAAE;MACb5B,gBAAgB,CAACwC,IAAI,CAAC,oBAAoB,EAAE;QAAEZ;MAAS,CAAE,CAAC;IAC5D,CAAC,MAAM;MACL5B,gBAAgB,CAACwC,IAAI,CAAC,yBAAyB,EAAE;QAAEwE;MAAM,CAAE,CAAC;IAC9D;EACF,CAAC;EAED;;;;;EAKAE,aAAaA,CAAC5F,SAA0B;IACtC,IAAIA,SAAS,EAAE;MACb,OAAOG,mBAAmB,CAACoF,wBAAwB,CAACvF,SAAS,CAAC;IAChE;IAEA,OAAOG,mBAAmB,CAACoB,yBAAyB,CAACpC,KAAK,CAACC,aAAa,CAAC;EAC3E,CAAC;EAED;;;;EAIAyG,oBAAoBA,CAAC7F,SAAqC;IACxDb,KAAK,CAACI,iBAAiB,GAAGS,SAAS;IACnCb,KAAK,CAACE,UAAU,GAAGc,mBAAmB,CAACyF,aAAa,CAAC5F,SAAS,CAAC;IAC/DzB,aAAa,CAACsH,oBAAoB,CAAC7F,SAAS,CAAC;EAC/C,CAAC;EAEDI,cAAcA,CAACH,WAAmB,EAAED,SAAyB;IAC3D,IAAIC,WAAW,EAAE;MACfd,KAAK,CAACK,kBAAkB,GAAG;QACzB,GAAGL,KAAK,CAACK,kBAAkB;QAC3B,CAACQ,SAAS,GAAGC;OACd;MACD5B,WAAW,CAACyH,uBAAuB,CAAC9F,SAAS,EAAEC,WAAW,CAAC;IAC7D;EACF,CAAC;EAED8F,iBAAiBA,CAAC/F,SAAyB;IACzCb,KAAK,CAACK,kBAAkB,GAAG;MACzB,GAAGL,KAAK,CAACK,kBAAkB;MAC3B,CAACQ,SAAS,GAAGlB;KACd;IACDT,WAAW,CAAC2H,0BAA0B,CAAChG,SAAS,CAAC;EACnD,CAAC;EAEDiG,cAAcA,CAACjG,SAAqC;IAClD,IAAI,CAACA,SAAS,EAAE;MACd,OAAOlB,SAAS;IAClB;IAEA,OAAOK,KAAK,CAACK,kBAAkB,CAACQ,SAAS,CAAC;EAC5C,CAAC;EAEDkG,WAAWA,CAAClG,SAA0B;IACpC,IAAI,CAACA,SAAS,EAAE;MACd,OAAOyB,MAAM,CAACW,MAAM,CAACjD,KAAK,CAACK,kBAAkB,CAAC,CAACmB,IAAI,CAACE,EAAE,IAAIsF,OAAO,CAACtF,EAAE,CAAC,CAAC;IACxE;IAEA,OAAOsF,OAAO,CAAChH,KAAK,CAACK,kBAAkB,CAACQ,SAAS,CAAC,CAAC;EACrD,CAAC;EAEDoG,iBAAiBA,CAAA;IACfjH,KAAK,CAACK,kBAAkB,GAAG;MAAE,GAAGZ;IAAuB,CAAE;EAC3D;CACD;AAED;AACA,OAAO,MAAMuB,mBAAmB,GAAG7B,iBAAiB,CAACoB,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}